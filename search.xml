<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>A Heart, a Plane, and a Seahorse | Designs from the Last Two Months</title>
    <url>/a-heart-a-plane-and-a-seahorse-designs-from-the-last-two-months/</url>
    <content><![CDATA[<p>Learning origami is a strange process. Unlike other forms of visual art, many origami artists will never create a piece without following explicit sets of instructions. In fact, you can become an exceptional origamist without ever designing a single piece yourself. In many ways, origami parallels music, in which great musicians don’t need to be composers, but through their technical mastery and musicality, they can create beauty from the notes on the page. Origamists do the same, combining precise control of the paper with tactfully applied sculpting techniques to create art. The ability to design origami is neither necessary nor sufficient to be a great origamist. </p>
<p>I mostly design for fun, though there are a few practical benefits. Designing origami can help you connect with other art forms. So many visual artists learn to study anatomy and draw from references, and I did much of the same when designing this seahorse. As I iterated through different approaches, I had my computer open with pictures of seahorses in various poses to better understand the most important features of a seahorse. While I like to think I studied my references well, I took some artistic liberties in my design. First, in my mind, seahorses are rather regal, so when approaching the coronet of the seahorse, I gave it two spikes instead of one lump. This way, the coronet looks a bit more like a crown. Technically, a coronet is already a crown, just for a lesser position, and I wanted a higher-ranking crown for my design. Second, I turned the large dorsal fin into two pectoral fins. This was a massive departure from actual seahorse anatomy, but for people who haven’t looked at many pictures of seahorses, they expect pectoral fins, and this was my attempt at combining perception with reality.</p>
<img src="/images/origami_seahorse.png" alt="An origami seahorse, designed by Ronik Bhaskar.">

<p>I didn’t use any references when I designed a plane, but I did have some anti-references. I had paper planes—the kind you throw—sitting in front of me so I knew what not to make. Obviously, this is a plane made of paper, but it is not a paper plane. It doesn’t look like one of those planes you can throw that flies; it looks like an actual, commercial airplane. I tried making the end result look as simple as possible, but in doing so, I spent lots of time grappling with the unfortunate reality of origami: paper is thick. As you continue to fold paper, the thickness accumulates, making it harder to continue without causing the paper to shift in ways you never intended. The body of this plane has one segment that is incredibly thick, but using some techniques to counteract this, I was able to manage the thickness without greatly impacting the rest of the model.</p>
<img src="/images/origami_plane.png" alt="An origami airplane, designed by Ronik Bhaskar.">

<p>Designing a heart was a rather strange undertaking. Every Valentine’s Day, someone always makes a comment about folding an anatomical heart, but no one I know ever tries to fold one. I’ve tried folding a heart before, though it looked more like a blob. This Valentine’s Day, I tried again, this time focusing on getting more tubes in the right place. From the vena cava to the pulmonary vein, it’s a decent attempt. This is actually my first draft; I didn’t have time to make multiple. I do have a few nitpicks for my next attempt. First, I had enough paper to add more features, I was just a bit reserved, but next time I should add more tubes. Second, I spend a lot of effort on an aortic arch that is just too low to see, so I’ll revisit that next time. That being said, it is much better than my first attempt a few years ago, and I’m still quite pleased with how it turned out.</p>
<img src="/images/origami_heart.png" alt="An origami anatomical heart, designed by Ronik Bhaskar.">

<p>To be clear, not all of my design attempts work this well. For example, I also tried designing an Oreo, but it looks more like an exploding macaron right now. I still have a ways to go before I start designing technically advanced origami, but these past few months have been good. I have the benefit of a community of folders around me, but that need not be the case. Ultimately, I just needed to get back into designing origami. <a href="/ex-libris-kafka-on-the-shore/">My recent exhibit</a> also helped me realize that. I don’t know how many more inspiring opportunities I’ll have, but I do hope I keep designing. Maybe in a few months, I’ll have better designs; maybe I’ll have nothing. Either way, I’ll still be folding.</p>
]]></content>
  </entry>
  <entry>
    <title>A Line is Defined by Exactly Two Points</title>
    <url>/a-line-is-defined-by-exactly-two-points/</url>
    <content><![CDATA[<img src="/images/poison_dragon.png" alt="Origami Poison Dragon. Folded by Ronik Bhaskar. Designed by Reza Nagree.">


<p><em>Poison Dragon. Folded by Ronik Bhaskar. Designed by Reza Nagree.</em></p>
<hr>
<p>The first postulate of Euclid’s Elements states that two points determine a line. No more, just two. It may so happen that your third, fourth, or even fifth points also fall along the line, but ultimately, it is defined by two points.</p>
<p>I think young origamists often forget that we are bound by the laws of Euclidean geometry when we make art. Every crease is a line on a Euclidean plane. The creases can bisect angles, meet reference points, create parallel lines, but not necessarily at the same time. Take, for example, a diagonal fold through a square of paper. In theory, that fold can bisect two angles, create a line through opposite corners, and place the remaining corners on top of each other. Unfortunately, this isn’t always the case. If your paper is not perfectly square, you cannot do all of those at once. Even if your square is off by a fraction of a millimeter, you can only reach one objective with your crease.</p>
<p>Imperfect folding can come from anywhere, whether that be paper thickness or warping or just human inaccuracy. As errors accumulate in the model, it becomes harder to fix them. Your model diverges further and further from the diagrams until you simply cannot continue folding anymore. As I see it, there are two major methods to improve folding to reduce error accumulation.</p>
<p>The first—rather obvious—method is just to become more accurate. If your errors are smaller, then your accumulated errors will be smaller too. Ultimately, this comes down to practice. Practice simple models, intricate models, on big paper, on small paper. Expose yourself to more types of folds in various scenarios, and over time, you will develop a better control of the paper and a stronger understanding of accuracy. After years of folding, I have the accuracy to fold that dragon in the beginning, but I can also point out countless moments throughout the folding process during which I could feel my folds were off by a fraction of a millimeter. I’m not accurate enough to fix everything, but I do my best.</p>
<p>Sometimes my inaccuracies caused issues, but other times they didn’t, which brings me to the second method: understand which errors the model can tolerate. Depending on the situation, an angle bisector that misses a reference may be better than the alternative. Other times, you may prefer the reference over the angle bisector. Learning which errors are preferable in which scenarios can allow you to make errors without greatly impacting the final model. This intuition takes time to build, but you can also just ask experienced folders when you get stuck. At the Chicago Origami Convention, a kid had an issue where one of his folds could only hit one of two references, so he asked me what to do, and I told him which reference to follow and which to ignore. </p>
<p>I constantly think about which references matter most. Even when I was cutting the paper to fold the dragon, I had to decide which properties of the square were most important. I am quite bad at cutting squares, so I knew it wasn’t going to be perfect. In the end, I decided I wanted the diagonals to line up with the corners properly, so I prioritized that, and my decision helped as I folded the dragon the next day. </p>
<p>Inaccuracy is inevitable. Either you or your paper will succumb to imperfection, and you must figure out how to move forward. Every decision has its merits, and understanding which errors matter can help you make that decision. Choose the two most important points for your fold, and don’t worry about the rest. You can’t control whether the third, fourth, or fifth point will lie along your crease, but you can choose two, so make the choice. We may be bound by the fundamental laws of geometry, but you still decide where your crease goes.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://farside.ph.utexas.edu/books/Euclid/Elements.pdf">Euclid’s Elements</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>A Phoenix, a Dragon, and Lots of Humanoids | Designs from the Last Two Months</title>
    <url>/a-phoenix-a-dragon-and-lots-of-humanoids-designs-from-the-last-two-months/</url>
    <content><![CDATA[<p><em>All the artists in the showcase created fantastic art. Check it out <a href="https://voices.uchicago.edu/uchicagorigami/events/showcase/spring-2024/">here</a>!</em></p>
<hr>
<p>For a few weeks, I’ve had this strange idea stuck in my head. I wanted to create a piece at the intersection of land, sea, and sky. I folded a dragon back in March, and while it has wings, its four, sturdy legs and low pose made me think it was a better fit for the land component. Following the theme of mythical creatures, I decided on a phoenix to represent the sky. There’s also a phoenix on our university crest, so I thought people might appreciate that. The main driving force behind my phoenix design was wanting to incorporate the tail of Satoshi Kamiya’s phoenix onto a simpler body. It’s so easy, yet it creates this mesmerizing, braided effect, and I absolutely love it. Once I had the phoenix, it was time for the sea, and for that, I decided on a sea dragon&#x2F;serpent&#x2F;leviathan. I’m not sure exactly what to call it, but you can tell it’s a mythical beast built for the water. I struggled a lot with getting the proportions of the body and head just right, but I did eventually land on some decent ratios. When I decided to do a final draft, I hadn’t yet figured out the tail, so I just freestyled for a bit, hoping I would just figure it out. I’m happy with where I ended.</p>
<img src="/images/sea_dragon_dragon_phoenix.jpeg" alt="An origami sea dragon and an origami phoenix, designed by Ronik Bhaskar.">

<p>The trifecta was nice, but it felt incomplete. I wanted some humanoids to go along with the creatures, so I started on those next. For the land, I made a warrior, but I don’t know that I can take full credit for this design. On the Wikipedia page for <a href="https://en.wikipedia.org/wiki/Crease_pattern">crease patterns</a>, there is an image of a 16-grid CP, and the caption claims it’s for a swordsman, but I couldn’t track down which swordsman design it was for. I collapsed the CP and studied it for a long time before shaping it into my own swordsman. I had to change a few parts of the original CP, but in the end, I created a warrior with a sword, shield, and scabbard. For the sky, I was deciding between a fairy and an angel, and I went with a fairy. The design is meant to give the model the same gravitas as the swordsman, so it’s not as delicate as one might expect for a fairy. The final model wastes a lot of paper, and I’m not super happy with how it turned out, but I like the wings, so there’s that. Moving on from that rough spot, there was only one obvious choice for a humanoid in the sea: a mermaid. At first, I was thinking of making a mermaid with scales covering the tail, but I just couldn’t make it look good. I probably need to study more tesselations before I attempt that again. Instead, I pivoted, using that extra paper to give the mermaid a trident. It only took me a few hours on Sunday to design and fold the model, which was great timing because the showcase was two days later. </p>
<img src="/images/mermaid_sword_shield_fairy.jpeg" alt="An origami mermaid, warrior, and fairy, designed by Ronik Bhaskar.">

<p>With the main pieces finished, I turned to something a little different. About a week prior, the Taekwondo team did a demonstration at a big show, and in it, there was a scene where someone did a flying sidekick over another person, kicking a bad guy in the chest. It was spectacular, and I wanted to recreate that. I have some custom shaping techniques I use when folding humans, so I was able to recreate the flying sidekick pretty easily, but the bad guy was wearing an open jacket, and I wanted those jacket flaps on my model, so I modified the human base to add a simple jacket. It turned out pretty well, and I think I did the Taekwondo team justice with this representation. Maybe next time I’ll add belts.</p>
<img src="/images/blue_spirit.jpeg" alt="Three origami martial artists fighting, created by Ronik Bhaskar.">

<p>While I was adding the jacket, I noticed the design had potential, so I kept working on it, and I created a person folding themselves. Éric Joisel’s Self-Made Man is a monumental piece in origami, and it definitely inspired my design, though mine is still very much in my style of humanoid. While mine lacks the details of Joisel’s design, as an ode to the late master, I hope it does justice to his works. I didn’t care that it didn’t fit my theme; I had to include it in my exhibit.</p>
<img src="/images/simple_self_made_man.jpeg" alt="Simple Self-Made Man, designed by Ronik Bhaskar.">

<p>A few months ago, I shared some <a href="/a-heart-a-plane-and-a-seahorse-designs-from-the-last-two-months/">other designs</a>. I like to think I’ve improved since then, not because I think my new designs are good, but because I think my old designs are pretty bad. I have so many ways to improve the models, and that excites me, because I’m seeing things I hadn’t thought of previously. I have more designs, too. In fact, I designed three models solely so I could give a lecture on how to design origami. I don’t claim to be good, but I’d be lying if I said I wasn’t getting better. Maybe I’ll get to a point where people want to fold the models I’ve designed, or maybe I’ll just stay where I am. Either way, I’ll still be folding.</p>
]]></content>
  </entry>
  <entry>
    <title>Adventure is Out There</title>
    <url>/adventure-is-out-there/</url>
    <content><![CDATA[<p>Recently, I had the opportunity to look at my college diploma for the first time. I expected to feel excited or proud, but instead, I felt a pit drop in my stomach. Not wanting to concern those around me, I put on a brave face and beamed a smile, but deep down, I couldn’t look at this paper and see the end. The only thing I could see was a terrifying beginning.</p>
<p>In 2009, pilot Charles Muntz inspired millions with a single line: adventure is out there. This wasn’t in real life, though. This was in the Oscar-winning film, <em>Up</em>. In the film, his words brought together Ellie and Carl. Spoilers for the one person who has never seen the movie: Ellie and Carl get married and spend their life together. After a heart-wrenching opening sequence, Carl says goodbye to his best friend and wife. In addition to this tragic loss, Carl is haunted by an unfulfilled promise to Ellie for a grand adventure.</p>
<p>Grand adventures—as portrayed in stories—are singularly focused. Defeat the bad guy, save the love interest, find the hidden treasure, there’s always a clear objective, and protagonists are singularly focused on this task. The task itself may not be easy to achieve, but it’s certainly simple to explain. Stories focus on the details relevant to this task with little superfluity. Writers won’t discuss the protagonist paying bills or vacuuming unless it’s important to the plot, and the mundane complexities of normal life are rarely relevant to the plot. </p>
<p>For Ellie and Carl, however, those mundane complexities are the obstacles that prevent them from going on their grand adventure. Every time they’re close to saving up enough, life keeps getting in the way until it’s too late, and Carl realizes their grand adventure will never happen. Normal life got in the way, and the opportunity was over.</p>
<p>While staring at my diploma, I started fearing that my opportunity for adventure was over. The early years of life belie a simplicity that make you feel like adventure is possible, like you could get whisked up in an epic journey at a moment’s notice. Now, when I think about travel, my first concern is making sure the food in my fridge won’t spoil. Life continues to become infinitely more complex, and it will never become any simpler. I was terrified that beginning this new phase of life means the end of a simplicity that makes adventure possible.</p>
<p>I was terrified until I remembered a later scene in the film. While flipping through Ellie’s Adventure Book, Carl realizes that adventure doesn’t need to be found in the mesas of Venezuela. It was there, all along, in his home, in simpler moments with Ellie. Reflecting on this scene made me realize how much could happen in the coming years. Sure, some adventures will no longer be possible, but plenty of new ones will. A new chapter of life brings with it new challenges, new complexities, and new opportunities. Life won’t be easy, but it certainly won’t be dull, no matter how dire the future appears. Adventure is out there, you just need to know where to look.</p>
]]></content>
  </entry>
  <entry>
    <title>AM</title>
    <url>/am/</url>
    <content><![CDATA[<p>What does AM stand for? Maybe Ante Meridiem, before noon. Or maybe the element Americium (Am). Maybe it’s Artium Magister, a Master of Arts degree. Whatever the case, if you compound masters of the arts over time, you get Arctic Monkeys. </p>
<p>In 2013, Arctic Monkeys released their fifth studio album, AM. While the title references the band’s name, the cover art says otherwise. Taking inspiration from Velvet Underground’s cover art of volume units (VU), AM’s cover art is a wave with changing heights—amplitude modulation (AM). </p>
<p>As a recreational mathematician, I looked around the internet, trying to find a decent recreation of the AM cover as a graph, but none of them were good enough. Most stopped at just modulating a sine wave with a broader sine wave, but this method misses one crucial detail: the AM in the middle. Job Bouwman inserts the AM in the middle, but the heights and widths of the letters don’t quite match the cover.</p>
<p>The Arctic Monkeys weren’t just monkeying around with amplitude modulation. They figured out a clever way to seamlessly insert their initials into the graph. Mark my words, I will do the same. I will recreate the AM cover.</p>
<p>Rather than spending lots of time setting up a Jupyter Notebook and writing lots of Python code to establish a working development environment, I’m using Desmos. I believe the initial concept art began with a standard modulation of a sine wave inside a sine wave, so I am starting the same way.</p>
<p><img src="/images/initial_am.png"></p>
<p>Aha! See? In the center? There is a segment of the graph that can be used for the AM. I’ll mark it in green. This will require removing that purple part, which I see as a bonus. The A and M in the cover have longer wavelengths than the rest of the graph, so stretching the green segment should recreate this well.</p>
<p><img src="/images/am_annotated.png"></p>
<p>After stretching the green segment of the graph, the height of each portion will need to be adjusted. Maybe I’m just throwing a hammer at a screw, but a sigmoid function looks like it will do the trick. A few adjustments later, and we have this:</p>
<p><img src="/images/am_final.png"></p>
<p>A few minutes ago, I was perfectly happy with this result, but that is no longer the case. Yes, I completed what I set out to do, but the closer I get, the farther I feel. The M needs to be more rectangular. My approximation isn’t actually a continuous function, much less a differentiable one. Looking at the two side-by-side, I can no longer see their similarities, only their differences. Recreating this cover art was supposed to be about a quick recreational math project, but now I feel obliged to honor this album. If imitation is the sincerest form of flattery, are better imitations more flattering?</p>
<p>After this project, I suppose not. By acknowledging the distance between my imitation and the original, I can do justice to the beauty it holds. I may have not recreated the cover perfectly, but I can certainly appreciate it much more now than I could when I first saw it. This is no Absent Minded Advanced Math. This is AM. </p>
<hr>
<ol>
<li><p><a href="https://www.nme.com/news/music/arctic-monkeys-178-1266582">Influence of VU on AM</a></p>
</li>
<li><p><a href="https://www.quora.com/What-function-is-Arctic-Monkeys-album-cover">Job Bouwman’s approximation</a></p>
</li>
<li><p><a href="https://www.desmos.com/calculator/v37m6icmwg">My recreation</a></p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Breaking Language Models for Fun</title>
    <url>/breaking-language-models-for-fun/</url>
    <content><![CDATA[<p>Training a machine learning model is easy. Correctly training a machine learning model is hard. Every choice you make, from start to finish, has an impact on how your model will perform. You won’t know whether you trained it right or not until after you’re done, when someone finds an issue in your finished model. That someone is me.</p>
<p>The other day, I stumbled across a free-to-use profanity detector. The developer made an API so you can use his model for free without running anything locally. If nothing else, I applaud the developer’s effort to create free, accessible software. </p>
<p>While I was using the software, I did make some observations about its behavior. As expected, standard profanity is flagged as such. There were, however a few innocuous phrases that were flagged as profane. Here are some examples:</p>
<ul>
<li>“do not prick yourself with that pin”</li>
<li>“asdfasdf asdf”</li>
<li>“a son of”</li>
<li>“asldfjlas lsjaflks asldfl;a sf”</li>
<li>“this profanity detector is just so incredibly, horribly”</li>
<li>“son of a”</li>
<li>“oh god, this is a total”</li>
<li>“you absolute piece of”</li>
<li>“censor this”</li>
</ul>
<p>I have more, but this seems like a representative sample. There are some actual sentences, some phrases with negative sentiment, and plain gibberish. It took me maybe 10 minutes to find these, and that was without any automation. I can understand that in some extreme cases, you may want to flag a few of these, but most of these phrases are nowhere near as bad as the model thinks they are. </p>
<p>To be clear, this is a very popular project. It has over 1,000 stars on GitHub. I’m not trying to belittle the project. I’m just trying to use it as an example that others may be able to learn from. Hopefully, what others will learn is that machine learning can be tricky. In this case, the model is skewed towards expecting profanity, which has resulted in some level of bias. This may come from a skewed dataset, an improper loss function, or just the inherent randomness in stochastic training processes. </p>
<p>The exact specifics of the problem aren’t particularly important because there is no perfect fix to this problem. Instead, understand the scope of your machine learning model. Define proper use cases. Use thorough testing to understand its limitations. Realize that statistical machines are occasionally wrong, and you need to calculate how much a wrong prediction could cost you or someone else. </p>
<p>It’s possible the developer went through all this, and this model was the final result. In that case, congrats on such a popular project. Regardless, the next time you hear someone building a profanity detector, make sure it doesn’t get fooled by phrases like “asdfasdf asdf”.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://www.profanity.dev/">the profanity detector in question</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Celestial Navigation, Part 1</title>
    <url>/celestial-navigation-part-1/</url>
    <content><![CDATA[<p>Back in August of 2023, I grabbed my telescope, told my parents not to wait for me, and drove into the middle of nowhere. Stargazing has become essential to my life, and I hadn’t been in a few months, so I was ready to go. The nights I go stargazing, I feel free, spending a few hours alone with the universe. I’m no astronomer by any means, but I enjoy studying the night sky. I’ll usually pick one celestial body to focus on, whether that be Jupiter and its moons or some distant nebula I can barely see. That night, I decided to study Polaris.</p>
<p>As I get out of the car, I pause to let my eyes adjust to the darkness. Carrying my telescope to the middle of the clearing, I’m careful not to trip on any rocks or step on any fireflies. I set my telescope down, close my eyes, and take a deep breath. As I open my eyes, I look up at the glittery sky above me.</p>
<p>I could spend hours just aimlessly looking up at the sky, but I have a mission, so I get to work. First, I search for the Big Dipper. Once I find the Big Dipper, I follow it to the Little Dipper. As I trace along its handle, my eyes finally settle on Polaris, the last star in the Little Dipper.</p>
<p>Apparently, Polaris is not one star, but three stars, all very close together. Hoping to see that for myself, I carefully aim and focus my telescope. Looking through the eyepiece, I find one bright point. My eyes dart around, desperately seeking a second and third point of light, but I find nothing. A younger version of me would have been discouraged, but I understand the limits of my telescope. I decide to wait for the moon to set, hoping the other stars will be easier to see without so much ambient light. </p>
<p>Looking up at the sky, I think about the other facts I know about Polaris. I recall someone once telling me it’s called the North Star, so I pull out the compass app on my phone and point it in the direction of the star. The screen reads 0°, perfectly north. <em>That must be a coincidence,</em> I think to myself. <em>Once it moves, it won’t be perfectly north anymore.</em></p>
<p>Over the next hour, I watch the stars move across the sky, occasionally pointing my telescope at whatever seems interesting. Every once in a while, I check on Polaris, which is still perfectly north. In fact, it hasn’t moved at all. <em>How has it not moved? Everything else is moving. Even the Little Dipper is moving, what’s going on with Polaris?</em></p>
<p>I sit there confused for a while before I try a new approach to understand what’s going on. Rather than consider myself a stationary observer on Earth, I pretend I’m an observer from space, looking at the Earth. From my new perspective, I see the Earth rotate. Its axis of rotation goes through the North and South Poles. The rest of the Earth keeps spinning while that line stays still.</p>
<p>And that’s when it hits me.</p>
<p>If Polaris is a fixed point in the sky, then it lies along the Earth’s axis of rotation. That means, if you went to the North Pole and looked straight up, you would see Polaris. Anywhere else on Earth, Polaris acts like a beacon to the North Pole. That’s why Polaris never moves. That’s why it always points north. Satisfied, I lay down, enjoying my small victory. This peace lasts for approximately one minute before my brain starts asking questions again. This fixed point in the sky must have some interesting properties, so I close my eyes and think about Polaris geometrically. I can’t fully fathom how far away Polaris is, so I just pretend it’s infinitely far away. Under this assumption, if I draw a line from myself to Polaris, it’s parallel to the Earth’s axis of rotation. In this mental model, I draw a plane tangent to the Earth from where I am. The Earth may not be flat, but I can pretend it is locally for the sake of mathematics. With this little diagram in my head, I realize just how important the North Star is for navigation. If you can find the angle between Polaris and the horizon, that angle is your latitude. </p>
<p>I pull out my notebook and a flashlight to make sure I did that calculation correctly. Yep, the angle between Polaris and the horizon is your latitude. <em>I can’t believe I just figured that out. Is this how astronomers figured out celestial navigation centuries ago?</em> I doubt I’ll have any more revelations for the rest of the night, so I relax on the ground, watching the other stars journey across the sky. As my watch passes midnight, I pack up my telescope, wave goodbye to the stars, and start heading home.</p>
<p>I never did see the three stars that form Polaris, but it is a fixed point in the sky, so I’ll always know where to find it.</p>
]]></content>
  </entry>
  <entry>
    <title>Celestial Navigation, Part 2</title>
    <url>/celestial-navigation-part-2/</url>
    <content><![CDATA[<p>As a young person with little experience in the world, I am quite familiar with feeling unqualified. Far too often, I find myself given opportunities for which I have absolutely no preparation. It’s easier to recognize you’re unqualified for something when you meet the people who are qualified for the opportunity. I learned this a few years ago when I volunteered at an astronomy night for Cub Scouts. </p>
<p>The event was run by the director of an institute doing cosmic microwave background experiments. Alongside the director, there were two student volunteers: myself and the president of the Ryerson Astronomical Society. Keep in mind, I knew next to nothing about astronomy at this point. I had seen some of Jupiter’s moons through a telescope, but that was about it. Naturally, whenever one of the scouts asked us a question about space, I would just defer to the president. Thankfully, the president was able to answer any questions the scouts had, and I ended up learning quite a bit through the answers.</p>
<p>After a while, the scouts started working on an activity that didn’t require us to do much, so the president and I chatted for a bit. I had no reason to pretend like I knew anything about space, so I let myself ask very stupid questions. I probably could’ve googled how many constellations there were, but it ended up being a good way to start the conversation. As a bonus, I still remember there are 88 constellations, and I still remember a little about how the brightest stars in each constellation are named. The president also cracked a few jokes about Orion’s Sword which I thought were hilarious. If the old president ever sees this, thanks for being awesome.</p>
<p>A few years later, I was in the middle of nowhere with my telescope, when I remembered those jokes about Orion’s Sword. Given the clear conditions, I decided to observe the three stars that make up the sword. Throughout the night, I watched as the sword moved across the sky when I noticed something strange. At its zenith, the sword appeared to be pointing straight down. By this point, I had already made my <a href="/student-of-life-celestial-navigation-part-1/">revelations about the north star</a>, so I quickly realized the sword was pointing south. When I pulled out my compass, the sword was a little off, but not by much, less than a degree. Living in the northern hemisphere, I wasn’t sure how this would hold for the rest of the night, so I waited a bit to observe it again. I followed the direction of the sword until I hit the horizon, and I checked the direction. This time, it was off by even more. As I expected, the Earth was getting in the way of being able to use Orion’s Sword to find south, but it still worked pretty well. With a bit of latitude correction, finding south using Orion’s Sword seemed absolutely possible, it would just require a bit of math. A project for another night, perhaps.</p>
<p>It’s hard to believe that because of a joke I heard a few years ago, I learned about celestial navigation, but I suppose that’s what the student of life is about. A few years ago, I volunteered at an event for which I was extremely unqualified. I don’t quite know why I was given the opportunity, but I am extremely grateful. That opportunity, like so many others, has given me more than I could ever give. Even today, I’m still learning and growing from everything I have been given. Eventually, the day will come when I can offer more than I receive, but even then, I will still keep learning. I will still be a student of life.</p>
]]></content>
  </entry>
  <entry>
    <title>Celestial Navigation, Part 3</title>
    <url>/celestial-navigation-part-3/</url>
    <content><![CDATA[<p>In the spirit of April Fools’ Day, I’d like to tell a story of trickery and deceit. This is a story of how I was fooled, or rather, how I will be fooled.</p>
<p>Every equinox, residents of Chicago line the sidewalks to witness Chicagohenge, when the sun rises and sets perfectly along the east-west streets. For the amateur astronomy enthusiast, it’s a captivating sight. I’ve watched Chicagohenge a few times now, and I’m always amazed. The perfect alignment of the sun and the city creates a beautifully cinematic moment, like the sun is a paid actor and we’re operating the camera. </p>
<p>During the most recent equinox, a few hours before sunset, I noticed the sun wasn’t directly aligned with the buildings but just slightly south of west. The misalignment made me pause. Before this, I had noticed the sun generally stays in the southern half of the sky during the day, but I had never thought about when the sun would transition from south to not south. Living north of the Tropics, I assumed the sun would always appear south of me, and I couldn’t imagine why it wouldn’t. I watched Chicagohenge that day, but I was unable to enjoy it. My senses and my intuition were at odds.</p>
<p>In moments like this, when my senses and intuition conflicted, I turned to the only reliable source of answers: math. I opened my notebook and started drawing spheres and planes and lines, trying to decipher the truth. After a few pages of scribbled calculations, I was thoroughly convinced that on the equinox, the sun rises perfectly east and sets perfectly west. (It’s worth noting that this result holds true anywhere on Earth, which means it’s true for you too, dear reader.) While I didn’t trust my senses or my intuition, I placed unwavering trust in math and formal logic.</p>
<p>And therein lies the problem. I use math to check my senses and my intuition, but I have no system to disprove math when math fails. I trust formal logic entirely, but blind faith is a dangerous game, no matter how rational. Even the philosophy of mathematics cautions against finding complete truth in a fixed set of axioms. Gödel’s incompleteness theorems highlight the existence of mathematical statements that can never be proven true or false, so finding absolute truth in mathematics is impossible.</p>
<p>Any source of “absolute” truth has its risks. While I’ve decided to place considerable trust in mathematics, any system of truth can deceive you. Your senses fall victim to illusions, and your intuition won’t always be right. No finite number of observations will ever be complete, and no gut feeling can guarantee correctness. Even when you’re doing something as simple as watching the sun rise over your city, you might be fooled, and that’s alright. The truth was never guaranteed anyway.</p>
<p>$$(4 \cdot 1)! &#x3D; 24$$</p>
]]></content>
  </entry>
  <entry>
    <title>Celestial Navigation, Part 4</title>
    <url>/celestial-navigation-part-4/</url>
    <content><![CDATA[<p>Today, I had the pleasure of witnessing the total solar eclipse, a twice-in-a-lifetime opportunity. Yes, I’ve already seen a solar eclipse, and I’ve seen a handful of lunar eclipses, but I had to see this eclipse too. If you’ve met me, you know I get excited <a href="/celestial-navigation-part-3">when the sun aligns with some buildings</a>, so of course I was going to drive 200 miles to see the sun align with the moon. It was spectacular, but plenty of people will share their life-changing experiences with the eclipse. Instead, here are a few things I learned about eclipses while observing this one.</p>
<p>You can safely observe a partial eclipse with just your hand and a flat surface. Curl your index finger so as to make a tiny hole, and let sunlight pass through it onto the flat surface. Congrats! You just projected an image of the sun, and with any luck, you’ll see a crescent-shaped sliver of sun instead of the normal circle. This hand projection uses the same principle as a pinhole camera. I was going to make a pinhole camera, but I forgot to bring the materials with me, so I opted for this instead.</p>
<p>Outdoor lens flares from the sun during an eclipse will be crescents instead of circles. Lens flares are just images of the light source caused by lens imperfections. Turns out, they don’t always have to be circles. Typically, the lens flare is the shape of the light source. Since the light source—the sun—will appear as a crescent, your lens flares will be crescents too.</p>
<p>Speaking of crescents, a solar crescent from an eclipse will never match the shape of a real crescent moon in the night sky. This is because of how the crescents are formed. For a crescent moon, we’re looking at a half-lit sphere, which is similar to looking at a moon-sized circle partially covered by a larger black circle. Constructing the shape requires two different-sized circles. For a solar crescent, we can use another two circle construction, except the black circle is the same size as the sun, not bigger, so the shape is different. There are more nuances to the full argument, which you can prove mathematically by comparing the distances between the corners of the crescents. Ultimately, solar crescents and crescent moons cannot look the same if the sun and moon are the same size in the sky.</p>
<p>During a total solar eclipse, you can see celestial bodies you would only see at night. For example, I saw Jupiter and Venus during totality today. Since I’m so used to thinking about when they’ll be above the horizon at night, I really wasn’t expecting to see them during the day. Even in the dark twilight of totality, with no time for my eyes to adjust, the two planets were very easily visible. I should have brought my telescope.</p>
<p>Typically in Celestial Navigation, I’ll discuss some ways in which we can use the stars to find directions and calculate locations, but so much of that relies on the parallel rays assumption. Light from space hits Earth in the same direction for everyone, no matter where you are. Today, however, that assumption breaks down. Total solar eclipses are focused on small areas. They take advantage of the fact that you are a single observer, looking out, so the rays are radial, not parallel, and you are at the focus. You aren’t meant to find anything during the eclipse. Instead, it’s a brief moment when the sun and the moon find you.</p>
]]></content>
  </entry>
  <entry>
    <title>Conservation and the Trolley Problem</title>
    <url>/conservation-and-the-trolley-problem/</url>
    <content><![CDATA[<p>The Trolley Problem has become a staple of modern media culture. It has made rounds through film and television, memes, and even absurdist video games. Unfortunately, in this meteoric rise in fame, the Trolley Problem has lost its meaning. The once-respected ethical dilemma now often seems overly simplistic and detached from reality. It no longer holds the same significance it did in the 70’s.</p>
<p>In Phillipa Foot’s original article, the Trolley Problem is posed as follows. Suppose you are the driver of a runaway tram, and the tram is headed towards five rail workers. There is another track you could turn on instead. On it is someone tied to the rails. If you turn, you will kill the one. If you do nothing, you will kill the five.</p>
<p>Foot posits that the obvious choice is to turn. In fact, she finds this so obvious that she doesn’t even spend enough words to explain the action-versus-inaction issue. That comes later, when Judith Jarvis Thomson popularizes the dilemma, giving it its famous title. Foot briefly introduces the dilemma to discuss the nuances of double-effect morality and an ethical algorithm called the “doctrine of double effect”. She discusses other scenarios, such as a surgeon harvesting organs from one patient to save five, a judge framing an innocent person for an unsolvable crime to prevent bloody riots, and abortion.</p>
<p>Foot and Thomson both propose interesting dilemmas with nuanced arguments. Though I recommend reading them, I will refrain from making any comments on the conclusions they reach. What I will say is that their work demonstrates what the Trolley Problem truly symbolizes: one example in a network of nuanced ethical dilemmas. Each dilemma offers a new situation to test ethical frameworks, such as the doctrine of double effect.</p>
<p>In line with these ethical problems, I would like to propose one more, but with one, key difference. My problem is about non-human animals. This is the trophy hunting problem.</p>
<p>Suppose you are a conservationist working with local populations in Africa. As it stands, rampant poaching and habitat destruction will decimate the local wildlife. However, a trophy hunter has approached you, offering you lots of money to let them kill exactly one of the animals. If you take this money, it will go to conservation and protection efforts, saving many more animals. Do you take the trophy hunter’s offer?</p>
<p>When the trophy hunting problem was first presented to me, it wasn’t presented as an open question. Over a decade ago, in a very strange grade school lesson, I listened to my teacher share how trophy hunting could be beneficial, advocating for this arrangement. In fairness, the system was already in place, as conservationists were already taking money from trophy hunters. </p>
<p>The trophy hunting problem offers countless opportunities to explore ethical frameworks through nuanced details. How much money should this cost? How many lives should be saved to take the deal? How should population growth look afterward? How frequently do you take the deal? What if this were about humans instead of animals?</p>
<p>This trophy hunting problem serves as a reminder of the true nature of the Trolley Problem. It’s about reflecting on ethical approaches to life, questioning belief systems, and understanding that not all problems have a pretty solution. The Trolley Problem is more than a few memes and an episode of The Good Place. It’s the terrifying reality that our decisions can influence who lives and who dies, so choose wisely.</p>
<hr>
<ol>
<li><a href="https://neal.fun/absurd-trolley-problems/">Absurd Trolley Problems Game</a></li>
<li><a href="https://www.imdb.com/title/tt6951978/">“The Good Place” The Trolley Problem</a></li>
<li><a href="https://www2.econ.iastate.edu/classes/econ362/hallam/Readings/FootDoubleEffect.pdf">The Problem of Abortion and the Doctrine of the Double Effect</a></li>
<li><a href="https://laurenralpert.wordpress.com/wp-content/uploads/2014/08/thomson-killing-letting-die-and-the-trolley-problem.pdf">Killing, Letting Die, and the Trolley Problem</a></li>
<li><a href="https://doi.org/10.1016/j.biocon.2006.09.005">Economic and conservation significance of the trophy hunting industry in sub-Saharan Africa</a></li>
<li><a href="https://doi.org/10.1111/j.1469-1795.2006.00034.x">Potential of trophy hunting to create incentives for wildlife conservation in Africa where alternative wildlife-based land uses may not be viable</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Ex Libris: Gadsby (not The Great Gatsby)</title>
    <url>/ex-libris-gadsby/</url>
    <content><![CDATA[<p>IMPORTANT: This is about the book <em>Gadsby</em> By Ernest Vincent Wright, not <em>The Great Gatsby</em> by F. Scott Fitzgerald. </p>
<p>Legend says a man once ripped a piece of twine, tied down the E key on his typewriter, and proceeded to write a 50,000 word novel without the letter E. Original copies of his literary masterpiece now sell for thousands of dollars. He assured his own rise to fame, and everything went smoothly until someone opened his book.</p>
<h2 id="Gimmicks-Can’t-Save-Bad-Writing"><a href="#Gimmicks-Can’t-Save-Bad-Writing" class="headerlink" title="Gimmicks Can’t Save Bad Writing"></a>Gimmicks Can’t Save Bad Writing</h2><p>Lipograms are a form of constrained writing where the author avoids using one or more particular letters in the piece. While the gimmick entertains audiences, the piece must still be worth reading. The author can get away with less meaningful work, since purpose is contained in the style, but no amount of dropping letters alone makes literature worth reading.</p>
<p>Typically, a story resolves near the end. Instead, Wright wrote <em>Gadsby</em> like a drawn-out sitcom. After resolving the issue in roughly 10 chapters, he proceeds with 30 more chapters that all revolve around everyone being happy, with no major conflicts ever presented afterwards. Kids grow up and get married. A man that has never worked in politics becomes the mayor with little hassle. A zoo magically opens. Almost every chapter presents a neat and tidy event ending with celebrations from everyone, and Wright could easily end the story there, but he doesn’t, so the book drags on, and the only reason you’re still reading is because you want it to end.</p>
<p>Applying any amount of critical theory, feminists will have an absolute field day exploring the infinite ways Wright seems to bring up gender norms. Every other chapter finds a way to assert the backwards notions of women necessarily being small and weak and good at cooking and taking care of children while the men are big and strong and good at building. Some may argue Wright’s use of gender roles is expected, since this book was written in the 1930s. With historical context and the advent of World War II, attributing women’s value to having small statures and delicate hands and homemaking was incredibly backwards, with countless women working industrial jobs during the period of wartime economy.</p>
<p>As if that wasn’t enough, Wright’s inflated ego shows through in his writing. Naturally, Wright is the first-person narrator, depicted as a historian describing the town. Despite separating himself from the events of the story as this all-seeing onlooker, his frequent interjections make you wonder if he’s too convinced of his own story. For example, in chapter VII, he makes a disturbing quip about passing up kissing a snake to instead kiss Lucy, a fictitious child, while he is still the adult historian describing the story.</p>
<h2 id="The-Failed-Lipogram"><a href="#The-Failed-Lipogram" class="headerlink" title="The Failed Lipogram"></a>The Failed Lipogram</h2><p>I pushed through the book, hoping to gain some linguistic insights. While I give Wright mild credit for calling flowers “blossoming plants” and turkey “Thanksgiving National Bird,” I cannot forgive his egregious errors. Despite Wright’s claims of not using the letter E, the original publication contains three instances of the word “the” and one instance of the word “officers,” totaling 4 E’s in the body of the text.</p>
<p>Historical records describe Wright’s attempts at publishing all failing, and he had to turn to self-publishing through Wetzel Publishing Co. After reading this book, I finally understand why. Gimmicks won’t save your story, and twine won’t hold down your typewriter’s E key.</p>
]]></content>
  </entry>
  <entry>
    <title>Ex Libris: Select Poems by Emily Dickinson</title>
    <url>/ex-libris-select-poems-by-emily-dickinson/</url>
    <content><![CDATA[<p>I recently had the opportunity to visit Amherst, Massachusetts, USA. Amherst doesn’t have a lot going on; it’s mostly a college town surrounded by more colleges surrounded by rural Massachusetts. Amherst may be a relatively sleepy place, but it does have a notable past. Specifically, Amherst is the home of Emily Dickinson.  One of the most important American poets to ever live, Emily Dickinson spent her whole life in and around Amherst. She went to school at Amherst Academy, college at Mount Holyoke, and much of her adult life was spent in the Dickinson mansion in Amherst.</p>
<p>With this in mind, I gave myself a reading assignment for the trip. I decided to read 10 Emily Dickinson poems, which is not a lot, but I haven’t studied poetry in years, and this was a short trip. The poems were selected from various Internet listicles on the best Emily Dickinson poems. In hopes that this archive does not turn into another listicle, I won’t enumerate every poem I read, but I’ll mention a few, like “I’m Nobody! Who are you?”</p>
<p>When searching for a copy of “I’m Nobody! Who are you?”, I found multiple versions of the poem. The first published version followed standard capitalization and punctuation conventions, but the corrected version had additional capitalization, more dashes, and different wordings. The corrected version is supposed to be more faithful to the original, and after reading both, I can say the corrected version is far better. Dickinson’s use of capitalization constructs the characters in really clever ways. For example, using “Nobody” instead of “nobody” gives the speaker an identity as a Nobody rather than just being nobody. This contrasts well with the “Somebody” in line 5. Dickinson’s use of punctuation also drastically enhances the meaning of the poem. This was particularly notable in “I felt a Funeral, in my Brain”. The poem ends with a dash, as if the speaker is about to continue their thought, but is abruptly cut off.</p>
<p>Reading Dickinson’s poetry remains a highlight of my trip. After studying different versions of her poetry, I wanted to save the versions I liked better, so I designed a <a href="/projects/literature-db">simple database for literature</a> whose contents are in plaintext, so if the code ever breaks, the database is still perfectly usable. The project is still a work in progress, but it can scrape poetry from websites, render text, and efficiently search through the database.</p>
<p>As my trip came to a close, I finished my readings with a poem I know quite well. I’ve had the first stanza memorized for about a year now, and it’s one of a handful of poems I turn to quite frequently. I read it in the moments that I so desperately want to stop moving forward, those points in life where the future is far too chaotic or uncertain, and I can’t slow it down. In many ways, my visit to Amherst is part of that uncertain future, so it was the perfect opportunity to read the poem that starts like this:</p>
<p>“Hope” is the thing with feathers -<br>That perches in the soul -<br>And sings the tune without the words -<br>And never stops - at all -</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://en.wikipedia.org/wiki/Emily_Dickinson">Emily Dickinson</a></li>
<li><a href="https://www.emilydickinsonmuseum.org/">Emily Dickinson Museum</a></li>
<li><a href="https://www.poetryfoundation.org/poets/emily-dickinson">Emily Dickinson on Poetry Foundation</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Ex Libris: Sleepy</title>
    <url>/ex-libris-sleepy/</url>
    <content><![CDATA[<p>Known for incredibly concise storytelling, Anton Chekhov leaves no detail unresolved in his stories. Everything serves a purpose. The principle has been titled Chekhov’s Gun: if you introduce a gun, the audience expects it to be fired at some point. These details—these promises—build and interweave, and by the end of the story, every promise has reached a payoff that serves the ending. Mind you, these payoffs are rarely happily-ever-afters or neat, little bows wrapping up the story. They often include tragedy and death, but that doesn’t make them any less satisfying. </p>
<p>In <em>Sleepy</em>, a story written in one day, Chekhov introduces a baby, a 13-year-old girl working as a servant, and a horrible family that fuels the young girl’s ongoing suffering. With a payoff of the servant killing the baby, the story resolves as the reader expects. Writing this masterful story in one day is already an incredible feat, but the more impressive feat is how Chekhov wove a secondary set of promises into the plot, all centered around a lamp, a pair of trousers, and a cricket.</p>
<p>In the introduction, Chekhov introduces a lamp emitting green light, a pair of trousers on a clothesline, and a cricket in the stove. At first glance, these items only exist to enhance the setting, but he brings them up again and again and again. As I was doing my first reading, the purpose of these three items seemed quite unclear. No one wears the pants. No one puts out the lamp. No one complains about the cricket. They just sit there, doing nothing.</p>
<p>The young girl, Varka, enters a few dreams throughout the short story, and each time she does, she first looks at the green light on the wall and the shadows. The flickering light and moving shadows and chirping cricket appear more and more hypnotic until eventually, the light and shadows wink at her. Chekhov builds on the personification until the end of the story. The three items laugh, and she laughs with them as she kills the baby.</p>
<p>In the span of six pages, Chekhov created an entirely new character out of thin air and gave it a personality. This tricky, evil spirit laughing and dancing on the wall is made of no more than some green light, the shadow of a pair of trousers, and the chirp of a cricket. Its development represents Varka’s descent into madness, an integral component of the story. Chekhov promised to do something with these three items, and he overdelivered on the payoff. Without it, we wouldn’t see Varka lose her mind, just her frustration.</p>
<p>Creating payoff is about more than finally using the promise. It’s about giving it a broader significance—a life of its own—in the story, one that serves the ending. Once you have that, the payoff can reflect its symbolism, even if you use the promise in an unconventional way. Just because you’ve introduced Chekhov’s Gun doesn’t mean you need to fire it.</p>
]]></content>
  </entry>
  <entry>
    <title>Ex Libris: Cat&#39;s Cradle</title>
    <url>/ex-libris-cats-cradle/</url>
    <content><![CDATA[<p>On Christmas this year, I read one of the most famous Christmas novels of all time: <em>Cat’s Cradle</em>, by Kurt Vonnegut. This book is so powerful, it constituted a master’s thesis in anthropology in the eyes of the University of Chicago. Countless experts have analyzed this book throughout the past 59 years. Following behind 59 years of thorough analysis, I do not believe I can meaningfully contribute to the discussion of this novel’s themes.</p>
<p>So I won’t.</p>
<p>∴</p>
<p>Instead, it’s the typography of this book allures me. Between each of the 127 chapters are three dots, arranged in a triangle, left aligned with the body of text that follows. The symbol is called an “asterism”, named after the astronomical term for a pattern of stars. Typographers use asterisms to visually cue a break in the text to the reader. </p>
<p>∴</p>
<p>Except, the symbol in the book isn’t really an asterism. Asterisms are constructed with asterisks, and dots are not asterisks. Therefore, this symbol is not an asterism. The symbol is therefore. </p>
<p>No, I did not forget to finish that sentence. The symbol is therefore. In formal logic, three dots in the form of a triangle represent logical conclusion. Read aloud, they are pronounced, “therefore.” For example, “All humans are mortal. I am human. ∴ I am mortal.” </p>
<p>Unlike most conclusions, logical conclusions are absolutely true. If you accept the premises (the statements before the ∴), then you must accept the conclusion (the statement after the ∴) to be true without exception. If there are no premises, the conclusion is always true, no matter what. </p>
<p>∴</p>
<p>At the beginning of each chapter is empty space, followed by the three dots, followed by the entire chapter. As a student of logic, I read each chapter like a logical conclusion. It must necessarily be true, despite the book being fiction. The book that uses lies to comment on lies with more lies, must necessarily be true. </p>
<p>It’s not just the text. The table of contents must necessarily be true. The title, written alone on the fourth page, must necessarily be true. Even the list of Vonnegut’s other works on page three begins with the three dots. Therefore, they must be true. It is all true. We can conclude every statement in this novel without premise.</p>
<p>If I wasn’t a student of logic, then I wouldn’t have noticed this. If I wasn’t a student of logic, then I wouldn’t have dug down a rabbit hole of asterisms and typography. If I wasn’t a student of logic, then I wouldn’t have written this archive, and you wouldn’t have read it. As it happens—“As it was <em>supposed</em> to happen,” Bokonon would say—I am.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://web.archive.org/web/20120419003715/http://chicagomaroon.com/2007/4/13/alumnus-vonnegut-dead-at-84/">Vonnegut Awarded Master’s Thesis for <em>Cat’s Cradle</em> (Archive)</a></li>
</ol>
<p>The rest are Wikipedia links.</p>
<ol start="2">
<li><a href="https://en.wikipedia.org/wiki/Asterism_(typography)">Asterism (Typography)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Asterism_(astronomy)">Asterism (Astronomy)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Dinkus">Dinkus</a></li>
<li><a href="https://en.wikipedia.org/wiki/Dingbat">Dingbat</a></li>
<li><a href="https://en.wikipedia.org/wiki/Therefore_sign">Therefore Symbol</a></li>
<li><a href="https://en.wikipedia.org/wiki/Logic">The Wiki Page for Logic Includes ∴ in the Image on the Right</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Ex Libris: The Library of Babel</title>
    <url>/ex-libris-the-library-of-babel/</url>
    <content><![CDATA[<p>In Jorge Luis Borges’ <em>The Library of Babel</em>, the narrator describes a never-ending world of hexagonal galleries, all filled with books. Each book is 410 pages, 40 lines per page, 80 characters per line, 25 characters in the script. Doing some quick calculations, that number of books is approximately a 1 with 1.8 million zeros behind it. For reference, the number of atoms in the known universe is a 1 with 80 zeros behind it, which is essentially nothing compared to the scale of the library.</p>
<p>The library is vast, but its volumes are not infinite. The narrator attempts to circumvent this by concluding that the library likely repeats itself. Infinity can be scary, but if the library were looking for new librarians, I have a suggestion for how to make the library truly infinite. If you still want all the books to fit in an infinite library, why limit yourself to 410 page books? For the sake of mathematical clarity, let’s assume that every book is the same thickness, no matter how many pages it has (pretend the pages get super thin). Then, if you allow books to be any finite length, then you will never need to repeat the library because there will always be enough books to fill the shelves without repeating. Assuming the library’s hexagonal galleries do continue forever, then every possible book of finite length will fit perfectly in the library. Finite length books are the way to go.</p>
<p>Infinite length books, however, pose a huge issue. Let’s again assume that books of infinite length still have the same thickness as all the other books. If you allow every book of infinite length to enter the library, then you will run out of space. It’s hard to believe that an infinite library could run out of space, but it’s true. Cantor’s famous diagonal argument proves this isn’t possible, though his proof was about infinite, binary sequences. Applied here, no matter how you arrange the books, you can prove that at least one book of infinite length has been left out. Surely, the library wouldn’t want to leave any books out of its vast volumes, so I advise caution when tasking a librarian with constructing an infinite library.</p>
<p>Regardless of how infinite you decide to make the library, the unfortunate problem remains that the Library of Babel is entirely useless as a library. Libraries function best as curators and disseminators of resources, working to best serve their community. Typically, this means the knowledge in the library should be relevant to the readers. At the very least, it should be true. Unfortunately, there is no curatorial process in the Library of Babel. Sure, one book might just so happen to contain the works of Shakespeare, but there will be countless others that look like works of Shakespeare that all get the endings wrong. Most comprehensible books will be wrong, and most books will be incomprehensible. Given how finite human knowledge is, the chances of finding something useful are essentially zero. Even if you do find something potentially useful, you would have to independently verify the source is credible, because no one is curating it for you. The Library of Babel is an interesting thought experiment, but I pity anyone that wastes more than a second in that building trying to find meaning in the empty volumes.</p>
]]></content>
  </entry>
  <entry>
    <title>Ex Libris: The Principles of Librarianship</title>
    <url>/ex-libris-the-principles-of-librarianship/</url>
    <content><![CDATA[<p>If you ever need a list of incredibly British-sounding city names, simply refer to the sentence, “To obtain a more precise location, a study of the postal services suggested that it should be located in Lancashire, the West Riding of Yorkshire, Cheshire, Nottinghamshire, Leicestershire, Derbyshire or Cumberland” (p. 36).</p>
<hr>
<p>In the depths of the library basement, among the dusty, hand-crank bookcases, I finally found the section on Library and Information Science. Skimming the shelves, <em>The Principles of Librarianship</em> by Donald Urquhart seemed short and digestible. While I hoped the book would explain how literature was organized, I was excited at how wrong I was.</p>
<p>In the elementary school library, massive posters signified different parts of the Dewey Decimal System. After years of seeing these posters, organizing books stuck with me as the library’s purpose, and I forgot about the librarian that helped me find origami books for the first time. </p>
<p>In middle school and high school, my English classes only ever visited the library when we were doing research projects. Sitting in rooms full of students searching online databases, I brushed off the librarian asking students about their projects as a teacher doing their job. </p>
<p>One afternoon, a librarian asked me about Bertrand Russell. It became painfully obvious I knew nothing about him or his work, so I grabbed one of his books, checked it out, and took a few notes. His comments on historical set theory stuck with me as I began studying mathematics at university. </p>
<p>My perception of libraries, librarians, and their purpose was skewed, but my memories of them were always positive. While I enjoyed working in the library, I never truly appreciated why they functioned they way they did, and I wish I had.</p>
<p><em>To my younger self,</em></p>
<p><em>Libraries are not just rooms full of books. They are the place of practice for librarians.</em> </p>
<p><em>Librarians study the needs of their users and adjust their libraries accordingly.</em> </p>
<p><em>Librarians familiarize themselves with countless fields of study to better guide scholars.</em></p>
<p><em>Librarians recommend materials they think would benefit you, not necessarily ones they enjoy.</em></p>
<p><em>Librarians connect with others in their field to leverage resources from countless libraries, all to get you access to the information you need.</em></p>
<p><em>Librarians optimize their services to help the most people as efficiently and effectively as possible.</em> </p>
<p><em>Librarians convince funding organizations that the service they provide is worth funding, even though you can’t put a price on information.</em></p>
<p><em>Every conversation you have with a librarian will be fruitful. They will have insights in whatever work you’re doing, and you’ll almost always walk away with a new direction you want to explore. If you get a book or article or author recommendation, even better. Talk to as many librarians as you can, even if you’re not stuck in your research.</em></p>
<p><em>Seriously, go talk to some librarians,</em> </p>
<p><em>Ronik</em></p>
<p>Recently, I visited my high school library, and I caught up with the librarian that showed me Russell so many years ago. I brought up my current research, and without skipping a beat, he mentioned an author I should look into. The name had been on my list for a while, but I didn’t feel compelled to read any of their works. Given the success of the Russell recommendation, I think I know what I’ll be reading next.</p>
<hr>
<p>In case you were wondering, here are the 18 principles of librarianship.</p>
<ol>
<li>Libraries are for users.</li>
<li>The failures of an information supply system to satisfy its users are, as a rule, not obvious.</li>
<li>Supply creates demand.</li>
<li>Users must be provided with guides so that they can select the records which may interest them.</li>
<li>Libraries must be able to provide adequate access to the records users may wish to consult.</li>
<li>Libraries have to be paid for.</li>
<li>Libraries, both individually and collectively, must have regard to cost-effectiveness.</li>
<li>Information cannot be valued as a rule in monetary terms.</li>
<li>Libraries must have regard to the law of diminishing returns.</li>
<li>The best is the enemy of the good.</li>
<li>Unit costs for a particular activity should decrease as the magnitude of the activity increases.</li>
<li>No library is an island.</li>
<li>Objective data about users’ requirements should be used in planning developments of libraries.</li>
<li>In considering the use of new techniques and systems, it is necessary to look at the future, not the past.</li>
<li>The staff of a library should work as a team.</li>
<li>A librarian’s post is not a sinecure for a scholar — a librarian’s task is often to facilitate the work of many scholars.</li>
<li>Libraries can be valuable to society.</li>
<li>Librarianship is an experimental science.</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Ex Libris: Kafka on the Shore</title>
    <url>/ex-libris-kafka-on-the-shore/</url>
    <content><![CDATA[<!-- https://www.btsgtheories.com/wp-content/uploads/2020/07/kafka-24grammata.com-free-e-book.-pdf-1.pdf -->

<img src="/images/hat_umbrella_fish.png" alt="An origami flasher hat, an origami umbrella, and an origami koi.">

<p><em>All pieces were folded by me. The umbrella is my own design. The flasher hat and the koi were designed by Jeremy Shafer and Riccardo Foschi respectively.</em></p>
<p><em>Update: My work was accepted in an <a href="https://voices.uchicago.edu/uchicagorigami/events/showcase/winter-2024/rainy-day/">exhibit</a>.</em></p>
<hr>
<p>Recently, I was inspired by Haruki Murakami’s <em>Kafka on the Shore</em> to fold an umbrella, a hat, and a fish. These pieces are meant to honor a character in the novel, Mr. Nakata. In Murakami’s whirlwind of magical realism, Mr. Nakata seems to have the most direct access to the supernatural forces at play. He speaks to cats; he makes fish rain from the sky; he goes on an increasingly strange series of adventures to restore the state of the universe.</p>
<p>Although Mr. Nakata has such a strong connection to the strange occurrences in the book, he has very little understanding as to why. At each turn, he is unwaveringly sure of what his next step must be. He knows to go to Takamatsu. He knows to find the entrance stone. He knows to talk to the librarian of the Komura Library. But despite his confidence, he has never heard of Takamatsu before arriving. He has never seen the entrance stone before beginning his search. He has never met this librarian in his life. As one character put it, “You don’t know why you’re going, or even where you’re going.” And that’s true. He doesn’t know. He doesn’t know why or where or how, but he’s going. He’s going, and that’s what matters. </p>
<p>I was curious as to what inspired Murakami to write such a character, so I read through some interviews. In answering this question, Murakami responds, “Why did I create a character like him? It must be because I like him. It’s a long novel, and the author has to have at least one character he loves unconditionally.” This unconditional love poured into Mr. Nakata by Murakami can be seen inside the book and out. Other characters are quick to trust him, appreciating his sincerity and simple kindness. Readers are quick to empathize with him as he tries to live his life in an incomprehensibly complex system. </p>
<p>Mr. Nakata’s journey mirrors the experience of most readers that approach this story. This story is full of riddles and mysteries, and as you move forward, you reveal more questions than you do answers. Readers are sucked into a labyrinth of magical realism, and they don’t quite know why they’re going or even where they’re going, but they go regardless. </p>
<p>Even Murakami relates to Mr. Nakata in this way. Murakami set out to write a novel in which the solutions lie partly in the riddles themselves. Initially, he didn’t have all the details in view, but he wrote the novel regardless. Over time, he gained a better understanding of the story by reading it again and again as he rewrote it. For this reason, he recommends readers read the novel more than once—if they have the time—to understand it better. Going through that first pass, the reader is almost as lost as Mr. Nakata, trying to find answers despite barely understanding the questions. Even to the author, the whole story is one, big puzzle.</p>
<p>In no way am I trying to deny Murakami’s incredible intentionality in his writing. He crafted a literary puzzle that demands rereading just to appreciate a fraction of the details. Murakami couldn’t fully solve his own riddles the first time through, but he unraveled the mysteries through rereading as he wrote the story. Mr. Nakata, however, only gets to live through the story once. He will never read it a second time. He doesn’t get to unravel the mysteries like the reader, but he goes regardless, wearing his hat and carrying his umbrella while fish fall from the sky.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://www.bookbrowse.com/author_interviews/full/index.cfm?author_number=1103">Interview with Haruki Murakami</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>First Time for Everything</title>
    <url>/first-time-for-everything/</url>
    <content><![CDATA[<p>On July 21, 2023, that weekend when the Barbie and Oppenheimer movies came out, I invited my old mentor to watch Oppenheimer at the local theater. I did this partly to spend time with him, partly to push myself out of my social comfort zone, and I thought this might kill two birds with one stone. On the days we have long, rambling conversations, he eventually turns the topic to nuclear physics and the history of the atomic bomb. Occasionally, I sprinkle in details related to our university, given its position in the history of the Manhattan project, but for the most part, I listen. How he knows so much about the field, I’m not sure, but it’s one of our few conversation topics unrelated to research and our lab. </p>
<p>Having ordered our tickets online, he follows me into the theater. The attendant tells us we’re good to go, and we’ll be in theater four. I start walking, though my mentor lags behind for a second before catching up.</p>
<p>“Wait, there’s more than one theater?” he asks, turning from me to his ticket. </p>
<p>“Yeah, there are four screening rooms.” I respond, still looking down the hall.</p>
<p>“But, how will we know which one is ours?”</p>
<p>“Oh, they have signs next to the doors.” I point to the metal “four” on the wall.</p>
<p>We walk down the aisle, looking back and forth between the row numbers and our tickets until we reach the front of the auditorium. On arriving at our seats, I lean forward and brush the screen with my fingertips. Reclining in his chair, my mentor’s shoes stop mere inches away from kicking the trailers. We turn to each other and pause for a brief moment before breaking into laughter. I glance over my shoulder, checking if there were any empty seats we could switch to. There weren’t. </p>
<p>“Hey,” I whisper, “let’s wait for the movie to start, then we can try and look for better seats.” He nods, and we lean back.</p>
<p>Suddenly, the lights dim, and I see before me—in stunning black and white—the button of a suit jacket. I look up, first seeing a chin, then a mouth, a nose. I scan left-to-right as fast as I can without giving myself whiplash, catching two ears, two eyes, and two eyebrows. Before I can look above the forehead, the scene ends, and I’m left staring at someone else’s nose. A few scenes later, I finally notice Oppenheimer is wearing a hat.</p>
<p>Hoping to give my neck a break, I turn my body to my mentor, watching his eyes dart back and forth in hopes of catching all the details on the screen. I turn back to the screen to play this lightning round of I Spy. This goes on for another 10 minutes before I finally gather the courage to move. I tap him on the shoulder and motion to the aisle. We crouch down and begin shuffling to the back. The view from the back wall doesn’t quite capture the level of detail available three feet from the screen, but at least we can see the whole frame at once. Satisfied, I sit down on the ground before looking up again, now finding a chair in the way. My mentor begins sitting down before I look up at him and shake my head as I stand back up. I scan through the crowd before finding two seats right next to each other. I quickly step through the rows of the audience before sitting in one of the seats. My heart races as I wait for the people on my left and right to tell me the seats are taken or shoot me a dirty look, but nothing happens. Finally at ease, I wave my mentor over. He hesitates, so I make a bigger motion. He starts walking over, and I turn back to the movie.</p>
<p>“Can you see from there?” a voice whispers just behind my shoulder. Whipping around, I see my mentor and calm down.</p>
<p>“Yes, of course. Come sit.” I turn back to the movie, hoping to catch up on all we missed. He takes his seat. While I enjoy the rest of the film, my mind can’t help feeling a little pride for dealing with that strangely new situation.</p>
<p>Three hours later, the credits roll, and we get up to leave, immediately discussing historical accuracy and commenting on the references to the University. We continue talking while making our way past the “four” sign and out the doors of the theater. It’s raining, so we step under an awning, my mentor still discussing his plan to research every major character in the movie. I suggest he calls a Lyft, since the rain doesn’t look like it’s letting up soon. He pulls out his phone and we make a few jokes about sphere packing in a fish bowl and wine glass. I don’t quite know when, but at some point, he slips in that this is his first time going to the movies.</p>
<p>“In the US, right?”</p>
<p>“No, ever.”</p>
<p>His Lyft pulls up, so he waves goodbye. I probably mumble something about seeing him in lab as I wave back. The sound of the rain cuts out as the gears whir in my head. I don’t know if it was a few seconds or a few minutes, but eventually, I put on my jacket and step out into the rain.</p>
<p>I guess there’s a first time for everything.</p>
]]></content>
  </entry>
  <entry>
    <title>Infinity in Art</title>
    <url>/infinity-in-art/</url>
    <content><![CDATA[<p>People are often quick to dismiss infinity. For most, infinity represents some nebulous concept about going on forever or a number bigger than all the other numbers. Infinity is silly, hard to conceptualize, and just doesn’t matter for people living finite lives. </p>
<p>I tend to disagree. I think people underestimate just how useful infinity really can be. It has served me well for many years in countless situations. Then again, I did spend 4 years studying infinity, so I might be a tad biased.</p>
<p>One particular application of infinity comes up infrequently in origami. Every origami design starts with a finite sheet of paper. But why let that limit you? What if you could design a tree with infinite branches? A dinousaur with infinite ridges? A flower with infinite petals? No one really asked, but origamists answered anyway. </p>
<p>For every origami design, you can draw out on a flat sheet which part of the paper is used for each feature of the finished model. To fit an infinite number of features onto a single square, origamists needed a way to add an infinite number of things and end with a finite sum. Luckily, mathematicians have been doing this for centuries. One of the most common ways to add an infinite amount of stuff and end up with a finite amount is a geometric series. </p>
<p>Start by placing your finger on the left side of your screen. Next, move it halfway to the right side. Now, move it halfway between where it is now and the right side. Move it halfway again. And again. And again. If you continue this forever, your finger will take an infinite number of steps, but the lengths of those steps only add up to the width of your screen. This is a geometric series. Every subsequent step is some fixed fraction of the previous step.</p>
<p>Since origamists work in two dimensions, not just one, their steps get to look a little different. Take, for example, Shuzo Fujimoto’s hydrangea. At every step, the folder can add four more petals to the center of the flower. This sounds impossible, but I’ve drawn out how the paper is distributed for each petal. The red squares are the petals.</p>
<img src="/images/hydrangea_cp.jpg" alt="Progressive petals on Fujimoto's Hydrangea.">

<p><em>The progressive distribution of paper for the petals of Fujimoto’s Hydrangea. Note how each layer repeats the previous but in half the area.</em></p>
<p>Theoretically, this would result in an infinite number of petals, but that would require perfect paper, immortality, and a few other impossibilities. In practice, it means origamists can add as many petals as they like to their hydrangea. Each subsequent layer is a recursive iteration of the previous. It is, as Ushio Ikegami describes it, “an infinite set of origami works.” The artist defines a recursive sequence that allows folders to continue from one work to the next. That way, it goes on forever.</p>
<p>Infinite origami is technically impossible. The heat death of the universe will consume all attempts at folding forever. But that doesn’t stop origamists from trying. Using their incredible skills—and a bit of math—they have created endless art. They found infinity in a square. Where will you find it?</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://cfcorigami.com/creator/shuzofujimoto">Shuzo Fujimoto</a></li>
<li><a href="https://origamiusa.org/system/files/thefold/thefold79_fractal_origami_for_beginners_Ikegami_revised_0.pdf">Fractal Origami for Beginners</a></li>
<li><a href="https://cfcorigami.com/sites/default/files/diagrams/igaribi/hydrangea_john_smith.pdf">Hydrangea Diagrams</a></li>
<li><a href="/infinity-in-art/">Infinity in Art</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Knowing Your Audience</title>
    <url>/knowing-your-audience/</url>
    <content><![CDATA[<p>A while back, I took an academic and professional writing class. It’s called Little Red Schoolhouse, and it’s one of the most famous classes at the university. Every week, we would submit a writing assignment based on a new prompt. Within that prompt, we could write about whatever field we wanted, but there was a catch. Before every assignment, we had to submit a reader’s statement. The reader’s statement was a paragraph summarizing the knowledge, background, and goals of the reader. Ideally, our submission would match the kind of writing best suited for our expected reader. Every decision we made about our writing, from jargon to pacing to structure, had to be made to the benefit of the reader described in the statement.</p>
<p>I never wrote for the reader in the statement.</p>
<p>The purpose of a reader statement is to describe the audience of your work, but in this class, the statement never actually described my readers. My real readers were my peers and my lector. They are my true audience, and I understand that I must write for my audience. Of course, I wasn’t just writing for my peers and lectors. There was far more context to consider, so I needed to keep that in mind. Whenever I wrote a reader statement, I would always construct a different one in my head:</p>
<blockquote>
<p>The readers are students and a lector in the Little Red Schoolhouse class. They know we have covered content on […] and […]. They have read my previous assignments. They know the purpose of this assignment is to […]. Also, they just read the reader’s statement about people who […], so they will be putting themselves in the shoes of that particular audience. They care that I meet […] objectives in the context of […] readers, and will be evaluating the following piece of writing as such.</p>
</blockquote>
<p>That was my real reader’s statement. Actually, that was everyone’s real reader’s statement; they just didn’t know it. Our audiences were not hypothetical readers invented in our minds. They were writing students and lectors. Using this framework, I would properly craft my submitted reader’s statement and writing assignment to match. My grades were phenomenal, and the feedback was overwhelmingly positive. Though my previous writing experience likely influenced this, that multi-layered reader’s statement formed an undeniably effective framework for my assignments. </p>
<p>In some ways, I may appear to have subverted the course, but looking back, I learned the lesson even better this way. I wasn’t inventing readers for the sake of an assignment. I was actively studying my real audience and writing specifically for them. Having learned this lesson, I try to apply it whenever I write, but there’s one place I just haven’t studied my readers: here. I have no clue what you, the reader, want to read. I don’t know how you found me or why you read my work. To be clear, I’m eternally grateful, but I want to write for you, the audience. Right now, I’m just writing for myself. If you found this website, then you can probably find me, online or in person, so please do. Tell me who you are, why you read what I write, and what you’re looking for. </p>
<p>Or don’t, that’s fine too. I’ll keep shouting into the void, just in case you’re still listening.</p>
]]></content>
  </entry>
  <entry>
    <title>No One Should Own This Building</title>
    <url>/no-one-should-own-this-building/</url>
    <content><![CDATA[<img src="/images/cleaned_ai_generated_church.png" alt="AI rendering of a domed church.">

<p><em>Disclaimer: while there are references to true events and people in this story, the majority of these events and characters are heavily fictionalized. Do not trust any of this as a factual source. The drawing above is AI-generated.</em></p>
<h2 id="Chapter-1-Gus-Antoniou"><a href="#Chapter-1-Gus-Antoniou" class="headerlink" title="Chapter 1: Gus Antoniou"></a>Chapter 1: Gus Antoniou</h2><p>It’s 1997, and your name is Gus. Pretty sweet name, right? Well, technically it’s Konstantinos Antoniou, but you prefer Gus. Besides the cool name, you are the co-owner of G&amp;D Excavating Inc, and you just purchased St. Stephen’s Church. Of all the potential buyers, the city chose you. No one should own this building but you. Things are looking up for you, and you don’t plan on slowing down anytime soon.</p>
<p>It’s 1999. You’re being sued by the city. Apparently, your development project for the church is taking too long. “Shows what they know,” you mutter. You turn back to your dozens of design documents. Strewn across all of them is the word “facade,” sometimes highlighted, sometimes in red pen. You notice a few clean documents and grab your highlighter. After a few seconds, they look like the rest. Satisfied, you continue planning.</p>
<p>It’s 2000. You finished. That dusty, old church with constant trespassing is nothing compared to your masterpiece. Everyone will see this building and remember the man who designed it—Gus Antoniou. Briefcase in hand, you open the doors to the alderman’s office. </p>
<p><em>Why doesn’t she look more excited?</em></p>
<p>Zoning laws. It took you so long that they wrote new zoning laws. You look up at your home desk covered in documents, and your jaw clenches. Blueprints and legislation turn to shreds as your hands do what your words can’t. Three years of hard work turns to nothing because one person said “no.”</p>
<hr>
<h2 id="Chapter-2-Linda-Neal"><a href="#Chapter-2-Linda-Neal" class="headerlink" title="Chapter 2: Linda Neal"></a>Chapter 2: Linda Neal</h2><p>It’s 2000. You pick up the phone and begin dialing. It’s not a number you’ve dialed before, but it’s one you’ll be dialing a lot more. “Hello, Mr. Antoniou? My name is Linda Neal, and I’d like to help you with your project for St. Stephen’s Church.”</p>
<p>Members of the 5600 Block Blackstone Homeowner’s Group wait excitedly around you. Placing the phone on the base, you announce, “He’s willing to work with us.”</p>
<p>You grant the group their moment to cheer and applaud before bringing them back to Earth. “This is just the beginning. I’ll send out an email after scheduling the meeting with the alderman and Gus. We have a long road ahead of us.” </p>
<p>These are the people that matter. These 50 homeowners are the ones that will feel every shockwave as Gus fundamentally changes their neighborhood. You need to protect them—and yourself—from whatever comes next. No one should own this building but you all.</p>
<p>It’s 2001. After countless meetings, you finally free Gus from the clutches of zoning law, all while enforcing your 46-page requirements for the building. Gus will make this condo an asset to the neighborhood, and you’ll make sure of it.</p>
<p>It’s 2003. Gus is slow, and you don’t know much about him, but he’s consistent. While you wait for the condo plans to be finalized, you fall back on your academic roots. All you know about this church is that ever since you moved here, college students constantly sneak in, doing god knows what. Before the small, black congregation that left in 1992, St. Stephen’s was the Tenth Church of Christ, Scientist. </p>
<p>Built in 1917, the Tenth Church of Christ, Scientist takes after the First, both in name and design. A footnote mentions the First Church of Christ, Scientist is also called the Mother Church. You imagine a mother, sharing their name with their child. More than letters and sounds, that name carries dreams and aspirations. It carries trauma and pain. Most of all, it carries hope. And to see that child you poured everything into fall from grace hurts more than death itself. The church is no longer what it once was, and all of that hope suddenly vanishes. Pausing for a moment, you laugh to yourself. <em>That must be one disappointed mother.</em></p>
<p>It’s 2005. Gus finished a flawless design. The covered parking garage with 26 spaces perfectly complement the 12 enormous units. This asset—this $18 million asset—encapsulates everything you hoped for. All you need now are signatures from the building’s next door neighbors. Reaching for the phone, you dial anxiously. “Hi, Dr. Smith? I was wondering if you had a chance to read over the new design plan for the church. You have? Then, why wait? We’re all excited for you to sign off on the project.” Your smile fades and seconds turn to hours as the Smiths present their case.</p>
<p>You hang up the phone and rush back to the design. The Smiths are right, the parking garage covers their first floor window. <em>No big deal, we can just move it down a bit,</em> you panic. But you can’t. The weak foundation and basement flooding mean putting the building deeper into the ground risks the whole thing sinking. Your dream for this neighborhood would sink into the ground, and the Smiths won’t let it rise above 13 years of failed attempts to reclaim this old building. Do they really prefer college kids constantly trespassing through their backyard with cans of spray paint over one, measly window being covered? </p>
<p>This fight isn’t over. </p>
<hr>
<h2 id="Chapter-3-Robert-Mandel"><a href="#Chapter-3-Robert-Mandel" class="headerlink" title="Chapter 3: Robert Mandel"></a>Chapter 3: Robert Mandel</h2><p>It’s 2007. You’re 61. You’re too old for this. Gus won’t stop creating ridiculous plans for his little church project. It was cute at first, but 10 years later, you’ve seen him do nothing but harm to himself and everyone involved in the project. Now the lender decides to back out, and you hope Gus will come to his senses. </p>
<p>But he doesn’t. He never does. Everything you’ve tried fails to shut down his tunnel vision. You take a deep breath. <em>Be patient. Everything will sort itself out,</em> you convince yourself. You swallow your anger, saving it for another day.</p>
<p>It’s 2008. The recession takes its toll on the business. While you’re busy dealing with this mess, Gus still finds time to go over the church project. Does he not see what’s going on? People’s lives are at risk. At this pace, his actions could end up killing someone. There’s only one way to stop someone like that. You pick up the phone and call an old friend.</p>
<p>“Patrick, I need your help.”</p>
<p>Most people wouldn’t understand, but Patrick would. He always does, even in situations like this. Gus’ death will be an unfortunate one, but it’s a necessary evil, and you’re the only one willing to make it happen. Unsurprisingly, the plan was simple. Once Patrick finds the hitman, you’ll give him the instructions, weapon, and the advance on the $5000 bounty. </p>
<p>It’s 2009. Everything should have gone to plan. You should be at Gus’ funeral right now. You made sure to take care of everything. Everything except Patrick, who turned you at the first opportunity. Now you’re in court, wishing you had done the job yourself. Your lawyer tries to get you to say you’re sorry for what you did, but you’re not sorry for trying to off Gus. The only thing you’re sorry about is getting caught. </p>
<hr>
<h2 id="Chapter-4-Frank-Kladis"><a href="#Chapter-4-Frank-Kladis" class="headerlink" title="Chapter 4: Frank Kladis"></a>Chapter 4: Frank Kladis</h2><p>It’s 2009. Working for Western Springs National Bank and Trust hasn’t always been the most exciting job, but today was quite the spectacle. The company just acquired this gorgeous, old church. You’ve always been a bit enamored by historical buildings, even if they do have graffiti on the roof. You chuckle at the thought of college students somehow climbing walls just to spray the word “Welcome.” </p>
<p>Apparently, it was acquired from a guy named Gus. Strange dude, but he seemed passionate about what he was doing. He really cared about keeping the facade clean, which he did pretty well. </p>
<p>As much as you respect Gus’ effort, you knew his plan was doomed to fail. Massive buildings like this old church are meant to be managed by corporations—large ones with plenty of people and power. No one should own this building but Western Springs.</p>
<p>With the bad housing market and crazy building restrictions, you can’t imagine much happening to the church, but you know it’ll stay with the company. It’ll be part of the $182 million asset portfolio long after you retire. </p>
<p>It’s 2011. City regulators are shutting down Western Springs. You sit at your desk stunned for a few hours before packing up your things. As a lawyer, you never really needed Western Springs, but they were a good client—probably your favorite client. Doesn’t matter though, does it? Everything that was once Western Springs’ is now Heartland Bank’s.</p>
<hr>
<h2 id="Chapter-5-John-Liu"><a href="#Chapter-5-John-Liu" class="headerlink" title="Chapter 5: John Liu"></a>Chapter 5: John Liu</h2><p>It’s 2016. You’re trying to finalize the purchase of this run-down, old church on Blackstone, but the people sitting around you keep going on about some silly legal battle they just finished up. They drone on about some Konstantinos Antoniou person who used to own properties that Heartland acquired a few years ago. He was living there even though he wasn’t supposed to—it really wasn’t his anymore. The story seems incomprehensible because they keep mentioning a Konstantina Antoniou, and you ask who they’re talking about. “Are they the same person?” Apparently not. His sick mother was staying with him, he just takes after his mother in name. A child that shares a name with its mother must carry so much aspiration and trauma and hope, but this child fell from grace. After an eternity, the story finally ends.</p>
<p>Heartland hasn’t been able to do anything with the church in five years, but that’s just business. Those who can, do, and those who can’t, don’t. As one of the biggest citybuilders in China, if anyone can, it’s you. No one should own this building but you. For that exact reason, you acquired St. Stephen’s before finishing the Shiloh Baptist Church transformation. You know that’s gonna be done in no time, so you might as well prepare for the next project. </p>
<p>It’s 2019. Shiloh Baptist has finally been converted into 13 townhouses. You try to convince yourself that it was easy, and that St. Stephen’s will be no different, but you hesitate. You hesitate because you know it was hard. You hesitate because no project has stressed you more than the six year endeavor of transforming Shiloh Baptist. You hesitate because somehow remodeling this church was harder than building 600 acre metropolises outside of Beijing. You hesitate because you don’t know if you’re ready to try this again. </p>
<p>Despite your hesitations, Heartland still makes no signs of progress on the church, so why should you? You’ve just proven that you can make this happen, so why push for progress? Maybe it’s time to take a break. There will be a sign that lets you know when to come back, and you know that won’t be for a while. Might as well leave St. Stephen’s to the college kids for now. They seem to be running it just fine.</p>
<hr>
<h2 id="Chapter-6-Max-Eddy"><a href="#Chapter-6-Max-Eddy" class="headerlink" title="Chapter 6: Max Eddy"></a>Chapter 6: Max Eddy</h2><p>It’s 2022. You’re sitting on your couch when your phone vibrates. Opening Facebook, you see an invitation from a friend you haven’t spoken to in months to watch a movie you abhor. You scroll through the invite list, searching for a familiar name, but you hit the bottom. You glance back and forth between your phone and the current episode of InkMaster before tapping “Yes.”</p>
<p>Thankfully, everyone—including the host—dislikes the movie. The room erupts into side conversations and jokes at the movie’s expense. You start talking to some guy named Ronik about fun things to do in Hyde Park, and you mention climbing to the roof of an abandoned Scientology church on Blackstone. Upon hearing this, he whips out a notebook and starts writing. You frantically scan the room, checking if it’s too late to join a different conversation—</p>
<p>“Do you have Discord?” he asks. “I want to ask you more about the church, but only once I’ve done a bit more research.”</p>
<p>At least he didn’t ask for your phone number. Out of courtesy, you tell him your username. He stashes the notebook in his bag like nothing happened and starts chatting with the people around you.</p>
<p>A few days go by, and you’re watching InkMaster again when <em>ding.</em> You open Discord to see a friend request from Ronik. <em>Yay,</em> you groan. You accept, and he immediately sends you a Google Drive link. After briefly considering sending the link through a virus scanner, you click anyways. The blank screen slowly loads 20 pages on the history of St. Stephen’s church. You skim through the document, in shock of the ridiculous stories surrounding this old church. Your phone vibrates—another Discord notification.</p>
<p><strong>ronikb:</strong> would it be okay if i asked you a few questions about your experience at the church?</p>
<p><strong>meddy3:</strong> only if you explain all that research to me</p>
<p><strong>ronikb:</strong> deal. btw, it was a christian science church, not scientology</p>
<p>Headphones in, camera on, you walk him through everything you remember the night you went to the church. Fences just short enough and boarded-up windows just loose enough let you get in through the back. Holes in the ground and loose wires in the ceiling never let you rest. Onlookers and passers-by kept you crouching in the shadows. </p>
<p>Ronik’s terrified expression snaps you back to reality. You’re talking to a historian, not an adventurer. <em>Wimp.</em></p>
<p>He asks if there was still any Christian art or iconography, and while you remember a few quotes on the walls and some old books, there really isn’t much. Instead, the new art in the space goes far beyond Christianity. Stenciled translations of Buddhist ideologies sit next to simple renditions of the Red Crewmate from Among Us. Almost none of the graffiti overlaps. Artists respect that they don’t own the space they are using. </p>
<p>Far above the main chamber sat the church’s iconic dome, with plenty of ladders to help you get there. Once you reach the roof, a spray-painted sign on the front of the church welcomes you. Sixty feet above the ground, nature is still reclaiming the building, with countless plants growing directly from the roof. The view was worth the dizzying heights, but you can’t stay up there forever.</p>
<p>Back inside the church, a little exploring leads you to old youth group materials, a broken organ, and toilets obliterated by falling debris. Each room is an unlabeled museum full of clues. Wide-eyed, Ronik asks if you can bring him some pictures to study. Maybe next time.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><p><a href="https://www.illinoiscourts.gov/Resources/37654637-cb0e-4036-829f-9774618f50b5/1131653_R23.pdf " rel="nofollow">Accidental Transfer of 5640 S Blackstone to Girlfriend by Antoniou</a></p>
</li>
<li><p><a href="https://www.cityofboston.gov/images_documents/Christian%20Science%20Center%20Complex%20Study%20Report,%20as%20amended_tcm3-17697.pdf" rel="nofollow">Christian Science Center Complex</a></p>
</li>
<li><p><a href="http://hydeparkprogress.blogspot.com/2007/11/development-hyde-park-style-st-stephens.html" rel="nofollow">Development Hyde Park Style: The St. Stephen’s Fiasco</a></p>
</li>
<li><p><a href="https://web.archive.org/web/20151122071404/http://www.chicagoreader.com/chicago/zoom-in-hyde-park/Content?oid=6144150 " rel="nofollow">The Dilapidated St. Stephen’s Church in Hyde Park Continues to Await its Fate</a></p>
</li>
<li><p><a href="https://casetext.com/case/heartland-bank-trust-co-v-antoniou/ " rel="nofollow">Heartland Bank &amp; Tr. Co. v. Antoniou</a></p>
</li>
<li><p><a href="https://web.archive.org/web/20111208082310/http://chicagomaroon.com/2009/05/29/hyde-park-church-languishes-after-decade-of-disuse/ " rel="nofollow">Hyde Park Church Languishes After Decade of Disuse</a></p>
</li>
<li><p><a href="https://www.chicagotribune.com/news/ct-bn-xpm-2009-12-02-28526825-story.html " rel="nofollow">Man Gets 11 1&#x2F;2 Years in Plot to Kill Business Partner</a></p>
</li>
<li><p><a href="https://web.archive.org/web/20170824180903/https://www.bisnow.com/archives/newsletter/chicago/4091-mysterious-chicago-property-st-stephens-church " rel="nofollow">Mysterious Chicago Property: St. Stephen’s Church</a></p>
</li>
<li><p><a href="https://www.dnainfo.com/chicago/20160114/hyde-park/new-owner-for-st-stephens-which-defied-redevelopment-for-20-years/" rel="nofollow">New Owner for St. Stephen’s, Which Defied Redevelopment for 20 Years </a></p>
</li>
<li><p><a href="https://www.dnainfo.com/chicago/20150520/kenwood/restoring-church-is-harder-than-building-city-china-developer-finds/ " rel="nofollow">Restoring a Church is Harder Than Building a City in China, Developer Finds</a></p>
</li>
<li><p><a href="https://web.archive.org/web/20151029173015/http://www.wbez.org/bey/2010/04/a-sacred-ruin-inside-a-vacant-but-architecturally-significant-hyde-park-church/20128#comments " rel="nofollow">A Sacred Ruin: Inside a Vacant, but Architecturally-Significant Hyde Park Church</a></p>
</li>
<li><p><a href="https://www.chicagobusiness.com/residential-real-estate/townhouses-listed-long-vacant-kenwood-church " rel="nofollow">Townhouses Listed at Long-Vacant Kenwood Church</a></p>
</li>
<li><p><a href="https://caselaw.findlaw.com/us-7th-circuit/1575881.html " rel="nofollow">United States v Mandel </a></p>
</li>
<li><p><a href="https://preservationchicago.org/2021/10/31/wbez-chicago-whats-that-building-the-tenth-church-of-christ-scientist-a-former-church-in-hyde-park-commands-attention/" rel="nofollow">WBEZ Chicago: What’s That Building? The Tenth Church of Christ, Scientist: A former church in Hyde Park commands attention</a></p>
</li>
<li><p><a href="https://web.archive.org/web/20110411013717/https://www.chicagobusiness.com/article/20110408/NEWS01/110409892/western-springs-national-bank-fails-heartland-bank-takes-it-over " rel="nofollow">Western Springs National Bank fails; Heartland Bank takes it over</a></p>
</li>
<li><p><a href="https://en.wikipedia.org/wiki/St._Stephen%27s_Church_(Chicago,_Illinois) " rel="nofollow">Wikipedia Page on the St Stephen’s Church</a></p>
</li>
</ol>
<style>
    .mbe {
        background: none!important;
        border: none!important;
        margin: 0!important;
        padding: 0!important;
        color: inherit;
    }
</style>

<p>Special thanks to <button onclick="location.href = 'https:\/\/en.wikipedia.org/wiki/Mary_Baker_Eddy';" class="mbe">Max Eddy</button>.</p>
]]></content>
  </entry>
  <entry>
    <title>On Repetition</title>
    <url>/on-repetition/</url>
    <content><![CDATA[<p>I can recall quite clearly a moment from five years ago. The blinding summer sun beamed through my open bedroom window. The smell of fresh flowers filled the air as the humidity clung tight around my body. I closed my eyes, breathed in the sweet, heavy air, and opened my laptop to study Python programming. I could have spent my summer an infinite number of ways, and I chose to learn Python through a practical course: Automate the Boring Stuff with Python. Python and automation were the future, so I had to be prepared. Automate the Boring Stuff began my five-year journey of automation. As I progressed through projects, internships, and a degree in computer science, automation became a sort of faith. Anything that felt remotely repetitive was automated, even if it didn’t need to be. For me, automation became… automatic.</p>
<p>Over the past week, I worked on a project full of nonstop repetition, much to the dismay of my former self. Over the span of about 4 days, an artist and I cut 125 ft of fabric and stitched over 200 ft of seams. Those cuts and seams were all straight lines too: no variation. I worked long days for no pay on a project I will never see or be credited with. I carried around heavy rolls of material, got poked by pins, and performed the same, repetitive tasks over and over and over.</p>
<p>And I loved it.</p>
<p>To be clear, I didn’t enjoy the process because of the final product, nor did I gain anything I could put on my resume. I didn’t learn any skills or improve the ones I already had. If those hours I spent on the project did not exist, my life would not be at all different from what it is now. The process wasn’t particularly enjoyable, and while I care about my friend—the artist—I could still help him out without enjoying the process, but I didn’t.</p>
<p>It doesn’t seem like I should have enjoyed such a repetitive project, yet I did because repetition did something five years of automation could never do. Repetition gave my mind a break. When you’re constantly automating systems, you trade mental energy for physical energy and time. Automation requires a lot of planning at the onset, but once it’s running, you’re free to spend your newfound free time however you please. For me, that meant more work. More work means more automation. This constant cycle of automation leaves only the most mentally demanding tasks left to complete—the ones with no repetition. Five years of automation meant that I spent the vast majority of my working time intensely using my brain while giving my body a break.</p>
<p>This system works for a while, but eventually, your mind gets fatigued, and you can’t make progress without giving yourself a break. At first, I thought the only way to give my mind a break was to stop working, but I now realize that doesn’t have to be the case. While spending hours on repetitive tasks, my body went on autopilot. My hands learned the process, and my mind was left untethered. I felt like I was taking a break, yet I was still working.</p>
<p>This feeling isn’t particularly uncommon in daily life. It’s the same feeling you get when you take a shower or drive your daily commute. In 2001, Dr. Marcus Raichle coined the term “default mode” for this resting-state brain function. To me, “default mode” feels like a misnomer because there is nothing default about this mode, my brain is rarely there. The default mode network has been shown to have countless functions in reflective thought and creative idea generation, invaluable processes for anyone. There are treasure troves of research on the default mode network and its countless functions, from moral reasoning to theory of mind. I highly recommend reading the literature if you’re interested.</p>
<p>I have spent five years trying to give myself more time in default mode, to reflect and process ideas, to think without a fixed goal. I always thought the answer was automation. The more I automate, the more time I save, and the more time I have to do the things I want to do. In this endless pursuit of automation, I never stopped to wonder if there was a way to work while thinking about the things I wanted. Five years later, I finally have the solution. I’ll still take plenty of actual breaks, and I won’t stop automating, but I don’t need to fear repetition anymore. There’s a beautiful simplicity in repetition, one that I am ready to learn.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://trends.google.com/trends/explore?date=today%205-y&geo=US&q=automate&hl=en">Google Trend for “automate” (it’s going up)</a></li>
<li><a href="https://automatetheboringstuff.com/">Automate the Boring Stuff with Python</a></li>
<li><a href="https://www.nationalgeographic.co.uk/history-and-civilisation/2022/08/the-science-of-why-you-have-great-ideas-in-the-shower">Nat Geo piece on Default Mode Network</a></li>
<li><a href="https://en.wikipedia.org/wiki/Default_mode_network">Default Mode Network</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>FM Radio Frequencies are Lying to You</title>
    <url>/fm-radio-frequencies-are-lying-to-you/</url>
    <content><![CDATA[<p>The other day, I was driving to work when suddenly my radio started playing. I don’t typically listen to the radio, but the music was nice, so I let it keep playing. After the song finished, the radio announcer said, “You’re listening to 98.9* FM radio.”</p>
<p>And that’s when my brain broke a little.</p>
<p>Up until this point, I knew very little about how radio worked. All I knew was that somehow, sound waves turned into electromagnetic waves and back into sound waves, and my brain was okay with this limited understanding because it seemed intuitive. The whole process was just waves becoming waves becoming waves. All waves have frequency and amplitude, so taking that information from one wave and putting it on another wave didn’t seem so strange.</p>
<p>The only problem is that my intuition was wrong. When you read a radio station number, that station number is the frequency of the radio station. Hearing the announcer’s voice, I realized that if the radio station number is fixed, then the station has a fixed electromagnetic frequency, so the station has to encode sound frequency and amplitude without changing their electromagnetic frequency. </p>
<p>AM radio uses a very elegant process for encoding sound. They do this through amplitude modulation. Amplitude modulation imposes the shape of one wave onto the amplitude of a carrier wave. Ideally, the carrier wave has a much higher frequency than the broadcast wave. The slowest AM carrier waves oscillate over 540 thousand times per second, which is roughly 30 times faster than the highest frequencies audible to adult humans, so AM carrier waves are definitely going fast enough. By imposing the broadcast wave over the carrier wave, AM radio stations can broadcast full audio waves without changing frequency. </p>
<p>AM radio is great, but for the vast majority of people, the last time they listened to music on the radio, it was FM radio. Unlike AM radio, FM radio uses a fixed amplitude. This is where I really got confused. If the amplitude and frequency are constant, then how do you convey any information? It turns out, the frequency is not constant. FM—frequency modulation—radio stations vary the frequency of the carrier wave to encode information. A higher frequency corresponds to a peak, and a lower frequency corresponds to a trough. When you listen to 98.9, you’re not actually receiving 98.9 MHz radio waves. Instead, your radio is listening to all frequencies between 98.8 MHz and 90.0 MHz. The vast majority of the time that your screen says 98.9, you’re not actually listening to 98.9. You could be listening to 98.89 or 98.91, but 98.9 is incredibly rare. Radio stations are lying about their station number. They almost never send you radio waves at their channel’s frequency.</p>
<p>Realizing this, I felt betrayed. I didn’t listen to FM radio to begin with, but I certainly wasn’t going to start. Why number your station off a frequency you almost never broadcast? Radio is an incredible medium, but this burden is too much to bear. Listen to anything else, even a <a href="https://jonikpodcast.github.io/">podcast exploring life through etymology</a>, but beware the lies of FM radio.</p>
<!-- After realizing this bitter truth about FM radio, I have stopped listening to it altogether. I am not the only one. Countless people have stopped listening to FM radio, and each one realized the same truth I did. Retract your radio antennas. Shut off your receivers. Stop listening to the radio, because they stopped listening to you a long time ago. -->

<hr>
<p>*<em>not a real radio station</em></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://www.fcc.gov/media/radio/fm-frequencies-end-odd-decimal">AM and FM Radio Frequency Details</a></li>
<li><a href="https://en.wikipedia.org/wiki/AM_broadcasting">AM Broadcasting</a></li>
<li><a href="https://en.wikipedia.org/wiki/FM_broadcasting">FM Broadcasting</a></li>
<li><a href="/am/">AM (short piece I wrote)</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Shortest English Sentence</title>
    <url>/shortest-english-sentence/</url>
    <content><![CDATA[<p>In a previous archive, I demonstrated how <a href="/run-on-sentences/">sentences can go on for as long as you want</a>, but today, I want to find out just how short they can get. </p>
<p>Sentences are hard to define. They carry meaning (typically), contain words (I’m pretty sure), require punctuation (probably), etc. Rather than worrying about a universal definition of sentences, I’ll focus on one definition that is useful for our exploration. Specifically, I am defining sentences as a phrase or phrases, with at least one independent clause.</p>
<p>I am requiring independent clauses because they constitute what most people imagine when they think of a “complete thought”. For example, “he walked,” an independent clause, is a complete thought, while “bananas” is not. Independent clauses typically consist of a noun phrase and a verb phrase. In Chomsky’s famous sentence, “Colorless green ideas sleep furiously,” “colorless green ideas” is the noun phrase, and “sleep furiously” is the verb phrase. Entirely meaningless, yet structurally sound.</p>
<p>Obviously, a sentence with one phrase will be shorter than a sentence with more phrases, so I’ll stick to a single independent clause. The clause needs a noun phrase and a verb phrase, and we can get both of those down to a single word each. With just a noun and a verb, we can construct the sentence, “Giraffes abdicate.” </p>
<p>Personally, I don’t know any giraffes that have abdicated, but a sentence is a sentence. As far as the word count goes, two is quite short, but the sentence requires a lot of characters. When written out, it is physically long. I can’t do much to get rid of the period, but I can find shorter words. There are no one-letter verbs, but there is a one-letter noun, which gave me an even shorter sentence: “I do.”</p>
<p>I do. This short sentence brings tears to listeners’ eyes. It marks important moments. It speaks volumes, yet it doesn’t require volumes to speak. Saying so much with so little is inspiring.</p>
<p>For a while, I believed this to be a sufficiently short sentence, but I recently remembered something about English. It is possible to have one-word sentences, but only in the command form. In the command form of English, you drop the subject of the sentence. This is common in recipe books, in instructions like “Mix until thoroughly combined.” The word “mix” starts the verb phrase, but there is no preceding noun. Without the condition at the end, you could have a complete sentence in just one word, “Mix.”</p>
<p>The command form is special because it compels you to take action. Each instruction is a little shove, something to make you start moving. Commands can have any sentiment, but they don’t exist simply to convey information. They carry expectations. They want you to initiate. I have compiled three contenders for the shortest English sentences, and the weight they carry extends far beyond their few characters.</p>
<p>Go. Do. Be.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://www.ling.upenn.edu/courses/ling5700/Chomsky1957.pdf"><em>Syntactic Structures</em>, Noam Chomsky</a></li>
<li><a href="https://en.wikipedia.org/wiki/Sentence_(linguistics)">Sentence</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Square One</title>
    <url>/square-one/</url>
    <content><![CDATA[<p>After another set of fruitless experiments and abandoned ideas, my mentor told me we were back to square one.</p>
<p>“Quick question,” I interjected, “Where exactly <em>is</em> square one?”</p>
<p>Some sources claim square one is on the football pitch. In the 1930s, BBC radio sports commentators divided the pitch into eight sections, with square one at the bottom right corner. Others claim square one comes from hopscotch or snakes and ladders. Regardless of the game, being at square one puts you at the beginning with no progress. </p>
<p>Square-1 is also the name of a puzzle derived from the Rubik’s Cube. For practiced cubers, solving a Square-1 can become incredibly straightforward. </p>
<p>My mentor and I didn’t feel like we were at square one. Sure, we were at the beginning, but being at square one implies square two is just ahead. Every time we returned to the beginning, we were too disoriented to know where to look first. Much of our progress felt sideways or backwards. </p>
<p>On a lesser note, computer scientists don’t begin counting with one; they begin counting with zero. </p>
<p>In that meeting, in front of the drawing board, we made a decision. We were not at square one. We were at circle zero. Eventually, circle zero became familiar. Sure, it was mischievous, and at times confusing, but it no longer felt new. Whenever we left, we never worried about saying goodbye; we would be back eventually.</p>
<p>For most people, today is square one. Today’s square on the Gregorian calendar is the first day of first month. As such, I wish you all a happy circle zero.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://en.wikipedia.org/wiki/Square-1_(puzzle)">Square-1 Puzzle</a></li>
<li>The discourse surrounding the etymology of “square one” lacks enough rigor to warrant any particular links. Instead, a Google search for “origin of square one” will provide plenty of questionable sources offering one of the three explanations listed above.</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Run-on Sentences</title>
    <url>/run-on-sentences/</url>
    <content><![CDATA[<p>By the end of this archive, I will write something that a modern, consumer-grade LLM could never produce, and I’ll do it in one line of code. I won’t abuse special characters or write gibberish. It’ll be grammatically correct, semantically meaningful, and only use standard, keyboard characters. </p>
<p>Before I can get to that line of code, however, we need to have a little grammar lesson. If you went to elementary or middle school in the States, you likely had an English teacher give a lesson on run-on sentences, strings of words that demand a break but never get one. From this lesson, students usually have two takeaways. First, run-on sentences are bad. Two, run-on sentences are just really, really long sentences. While run-on sentences are grammatically incorrect, it’s not because they’re long. Sentences can be long and still grammatically correct, but creating those kinds of sentences requires a lot of planning. Length is not the issue.</p>
<p>The issue lies in the structure of the sentence. Sentences contain one or more clauses—fragments that feel like complete ideas. Not all clauses can stand alone as sentences, but the ones that can are called “independent clauses.” Two examples of independent clauses are “it was the best of times” and “it was the worst of times.” If you properly join them together, you can get a longer, grammatically correct sentence: “It was the best of times, and it was the worst of times.” Obviously, Charles Dickens didn’t include “and” when he wrote <em>A Tale of Two Cities</em>, and he didn’t use a semicolon either. In fact, the first sentence of that book is a run-on sentence, but Dickens wrote it so masterfully that it doesn’t matter. </p>
<p>Essentially, run-on sentences are just sentences that don’t have enough connectors for their independent clauses. As such, if we manage all our conjunctions, we can write a sentence as long as we’d like. This all relates to LLMs; I promise.</p>
<p>When modern LLMs write, they have a fixed context window. After a certain number of words*, they can’t continue writing. In addition, they’re usually designed to finish each text generation with a period, so the sentence stops at the end of the context window. Sure, there are hacky ways to get around this, such as modifying the LLM token grammar to remove punctuation and forcing the LLM to only look at the last N words, but that’s outside the scope of consumer products. Therefore, for practical purposes, LLMs can only write sentences as long as their context windows. Currently, this hovers around 100k tokens for state-of-the-art models.</p>
<p>So, in order to write something that LLMs can’t, all I need to do is write a sentence that is more than 100k words long. Personally, the target of 100k words seems a bit small. Though my sentence will be grammatically correct, I want it to embody the idea of an extremely long, run-on sentence. For this reason, it’ll be a marathon—26.2 miles—long. By my rough estimations, at 12 pt font with standard screen size, that will take about 10 million characters. </p>
<p>With this length target in mind and the theme of a marathon, coming up with what to write is surprisingly straightforward. My <a href="https://github.com/zainsarwar865/LLMTestBed">previous work</a> in exploiting grammatical properties of English when attacking LLMs definitely makes this easier. Essentially, I’ll be abusing the most straightforward, repetitive independent clause structure: noun + verb + comma + “and” + noun + verb + comma + “and” + … until we hit 10 million characters. As for what the actual content of the sentence will be, it’s easier just to show you.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;, and &quot;</span>.join([<span class="string">&quot;I ran&quot;</span>] * <span class="number">2730000</span>) + <span class="string">&quot;.&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran, and I ran…</p>
<p>Running this code in a REPL takes about 2 seconds, so if LLM context windows get any larger, I can just increase the clause count. I’ll leave optimization for future Ronik to figure out. In any case, it’s done. In one line of code, I generated text that LLMs can’t.</p>
<p>The purpose of this exercise was never to write something meaningful. After a few seconds, you sort of get the gist of the sentence. Instead, it’s an easy way to demonstrate that generative AI has limits. It’s my job to understand the limits, risks, and vulnerabilities of new models, and sometimes it’s hard to explain that to the people around me. Nearly everyone has some vested interest in the success of LLMs, and whenever I talk about finding their limits, I feel like I’m just spewing run-on sentences—piles of ideas that no one fully seems to comprehend. Hopefully, with Marathon 1.0, it’ll be a bit easier.  </p>
<hr>
<p>*The number of tokens in a context window is always greater than or equal to the number of words an LLM can generate in a context window, so even if you pretend every token is a word, that’s still an upper bound that LLMs can’t surpass.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://www.ling.upenn.edu/courses/ling5700/Chomsky1957.pdf"><em>Syntactic Structures</em>, Noam Chomsky</a></li>
<li><a href="https://mymodernmet.com/longest-run-on-sentence-william-faulkner/">Faulkner Long Sentence</a></li>
<li><a href="https://www.gutenberg.org/files/98/old/2city12p.pdf"><em>A Tale of Two Cities</em>, Charles Dickens</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Taking Silly Ideas Seriously</title>
    <url>/taking-silly-ideas-seriously/</url>
    <content><![CDATA[<p>Since 2007, the Association for Computational Heresy has celebrated the sillier side of academic research through the annual SIGBOVIK conference. As their website states, “SIGBOVIK is an evening of tongue-in-cheek academic presentations, a venue for silly ideas and&#x2F;or executions.” This interdisciplinary computer science conference invites three categories of research: “joke realizations of joke ideas, joke realizations of serious ideas, and serious realizations of joke ideas.” While all three quadrants offer exciting opportunities, I’m particularly intrigued by the last one: serious realizations of joke ideas. Fully understanding this quadrant requires understanding the two parts individually.</p>
<p>The first part, serious realizations, is relatively straightforward. Given some idea, a serious realization would offer results that answer some underlying questions or issues. One fantastic example of a serious realization is GradIEEEnt half decent, published in a previous SIGBOVIK. In GradIEEEnt half decent, Dr. Tom Murphy explores the idea of how computer rounding errors could be used on purpose. His realization includes creating a non-linear activation function using linear operations. He evaluates the effectiveness of his activation function on standard machine learning benchmark datasets like MNIST and CIFAR-10, comparing performance to other activation functions. Not all serious realizations require experimental results, but they do require going beyond just the initial idea.</p>
<p>The second part, joke ideas, is less clear-cut. Plenty of ideas that start as jokes are later taken more seriously. For example, Schrödinger’s Cat was originally used to poke fun at the absurdity of quantum models of macroscopic objects. This ridiculous idea of a cat in a box is now the most well-known analogy for measurement in quantum systems. Similarly, Fred Hoyle coined the term “Big Bang” because he was poking fun at the idea of the universe expanding from a singularity. He never did accept the theory, but today, supporters and critics all use the term “Big Bang” seriously. Joke ideas frequently become serious, making them much more difficult to define.</p>
<p>While Schrödinger and Hoyle made jokes out of disbelief, not all joke ideas come from disagreement. Jokes can come from a variety of sources, but for the purposes of SIGBOVIK and similar venues, there is one common unifier among joke ideas: they would not receive funding. This argument requires establishing a few premises. First, I will use the terms “joke” and “serious” as opposites, so not serious ideas are joke ideas. Next, it’s reasonable to assume that researchers publishing in most journals and conferences are addressing serious ideas. Researchers can do that work as their job because it is funded. Since funding agencies decide whether a researcher’s proposal gets funded, funding agencies thus decide if the work is serious. Note that I am not arguing that every serious idea gets funding. Instead, if a funding agency funds a proposal, then the idea is serious. By the contrapositive, if the idea is not serious, then it will not be funded.</p>
<p>Using funding as this guiding principle elucidates how narrow the range of serious ideas really is. Joke ideas aren’t necessarily useless, they’re just a large portion of the ideas that academia doesn’t care about. Exploring them seriously can create opportunities for knowledge that would have never been known before. Research is about pushing the boundaries of human knowledge, and that can be done in all directions. I truly enjoy doing research, and while the majority of my work is focused on serious ideas, I’ve been exploring some joke ideas too. Most recently, I wrote a paper that formally analyzes bread slicing with rigorous mathematics. I don’t claim that it offers much utility to society, but it’s a nice piece of absurdist humor that pairs well with <a href="https://youtu.be/R6SYxpiGGJ0?si=PetWIvfnnBJfoWIo">this summary video</a>. </p>
<p>SIGBOVIK is a fantastic venue for exploring serious realizations of joke ideas, but I would love to see this occurring more broadly. Granted, my worldview as a computer science research student is vastly limited, but most academics don’t seem to put effort into their silly ideas. If you have the time and resources to do so, why not? Push the boundaries of human knowledge, even in strange directions. Explore silly ideas with the effort you put into your publications. Take your jokes seriously.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="http://sigbovik.org/">SIGBOVIK</a></li>
<li><a href="http://tom7.org/grad/murphy2023grad.pdf">GradIEEEnt half decent</a></li>
<li><a href="http://yann.lecun.com/exdb/mnist/">MNIST</a></li>
<li><a href="https://www.cs.toronto.edu/~kriz/cifar.html">CIFAR-10</a></li>
<li><a href="https://en.wikipedia.org/wiki/Schr%C3%B6dinger%27s_cat">Schrödinger’s Cat</a></li>
<li><a href="https://en.wikipedia.org/wiki/Fred_Hoyle">Fred Hoyle</a></li>
<li><a href="/projects/optimal_slicing.pdf">Optimal Bread Slicing</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Reaching Out to Old Friends</title>
    <url>/reaching-out-to-old-friends/</url>
    <content><![CDATA[<p>Around March of 2020, I lost contact with a lot of friends. High school was ending, COVID was starting, and so many people I kept up with were no longer in my life. One of those people lives on the East Coast, and we compete in the same sport. I had the opportunity to compete in a tournament in the Eastern League, so I texted him, asking if he would be there. Unfortunately, he couldn’t make it, so we texted for a bit, but that was about it. </p>
<p>When the day of the tournament arrived, I was absolutely overwhelmed. The Midwest doesn’t have a strong, competitive scene, so I hadn’t competed at the collegiate level before this. Our team of five competitors walks into a gym with over 650 athletes, and we stand at the entrance, stunned for a bit before gathering our bearings and finding a place to get set up. We started warming up, but the opening ceremonies cut us off earlier than I hoped. Immediately after opening ceremonies, we’re up to compete, so we head to our ring and finish warming up as best we can. My opponents are seeded to be in the top 4, so I don’t expect to win. I remind myself I’m here to learn, but that doesn’t stop me from shaking nervously. Although I am acutely aware of every mistake I am making, I can’t stop. It’s everything I can do to finish the round. Needless to say, we lost very decisively.</p>
<p>Later on, I run into my opponents from earlier. They’re very friendly, and though we only talk briefly, I’m reminded of why I came to this tournament. I came here to learn, so that’s what I do. I watch as many rounds as I can, learning how competitors, referees, judges, and coaches all fit into each round. I study how other competitors warm up and interact with their coaches. I keep track of how different refs run their rings differently. I make conversation with other spectators to ask them questions. Later, I get a chance to fill a minor judging role, so I take it. It doesn’t start well, but I keep learning, and the ref compliments me on improving in those few hours.</p>
<p>Once I get a break, I stand off to the side, staring vacantly at a round, when someone taps me on the shoulder.</p>
<p>“Hey, weird question, are you from Chicago?” the stranger asks me.</p>
<p>“I am. What’s up?”</p>
<p>“Do you happen to know someone named—“</p>
<p>“Yeah! How’d you find me?” I don’t need him to finish the sentence because I realize he’s one of my high school friend’s teammates. I do feel a little bad for cutting him off, but what happens happens. Turns out, he was sent a photo of me and told to find me at the tournament. After chatting for a bit, we take a photo together to send back to our friend. A few hours later, my team packs up, and we leave.</p>
<p>Being confused and trying to learn for the whole day was much more exhausting than I expected, but it was entirely worth it. I won’t have a collegiate career for much longer, but hopefully, I can convince the rest of my team to start competing. I’ll share with them all the incredible stories I remember from that day in hopes that they want to experience it all firsthand. That may take a while, so for now, I’ll fill my time by reaching out to old friends.</p>
]]></content>
  </entry>
  <entry>
    <title>The Connoisseur of Random: Before Computers</title>
    <url>/the-connoisseur-of-random-before-computers/</url>
    <content><![CDATA[<p>As we discussed last time, computers aren’t great at generating truly random numbers. Can you do any better? You have plenty of practice generating random numbers, I can promise you that, as long as you’ve played a few board games.</p>
<p>Dice. Roll one to get a random number. Roll a few and add them together to get bigger numbers. So many board games rely on you generating random numbers to make the game enjoyable. Will you pass Go or will you go bankrupt on Boardwalk? Will you climb a ladder or slide down a snake? It all depends on how the dice roll.</p>
<p>In 1890 Francis Galton saw the power of using dice in statistics, creating a special set of dice for statistical experiments. He argued that shaking dice in a bag and taking them out with your eyes closed was sufficiently random for this random sampling technique.</p>
<p>Dice are great, but no one has time to sit around, rolling dice hundreds of times to get random numbers. In the early-mid 1900s, scientists at Project RAND began developing better mechanical techniques, like using electronic “roulette wheels.” They generated some binary digits (0s and 1s) and converted the number to decimal. Using this technique, Project RAND turned into the RAND Corporation, selling books of one million random digits. The book still sells for roughly 70 USD. While their analyses of random digits looked usable for the most part, there were some issues with the odd-even distribution, and they made some strong assumptions about overcoming bias.</p>
<p>While I respect the RAND Corporation for pioneering modern techniques, on my quest to finding the best truly random numbers, their method doesn’t meet the mark. You all deserve better. To understand the nature of writing a book of random numbers, I borrowed techniques from Galton and RAND, and <a href="https://github.com/ronikbhaskar/book-of-random-numbers/blob/main/volumes/Volume%20I.md">I wrote my own</a>.</p>
<p>Rather than creating custom dice, I used existing six-sided dice. After rolling over 1000 dice, I converted from base 6 to base 10, and recorded my results. After thinking for a moment, I realized that one of the few things we need high volumes of random numbers of is dice rolls, so I saved those separately. Random coin flips would be nice too, so I did a bit more math to convert the dice rolls into coin flips. While I was at it, I converted the rolls into hexadecimal digits for the programmers out there. As of writing this, I’m only at the first volume, but if this proves useful, I will gladly create more handcrafted random numbers just for you.</p>
<p>Unfortunately, these random numbers aren’t truly random. Humans are notoriously bad at being random, and I am human, so I likely introduced a non-random bias into the system. I don’t know how to cheat with dice, nor did I try. While I made a good effort, it’s hard to call these artisan “random” numbers truly random.</p>
<p>We’ll have to push further next time.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://doi.org/10.1038/042013a0">Dice for Statistical Experiments</a></li>
<li><a href="https://www.rand.org/content/dam/rand/pubs/papers/2008/P113.pdf">RAND Corporation’s History of Random Digits</a></li>
<li><a href="https://www.amazon.com/Million-Random-Digits-Normal-Deviates/dp/0833030477">Book of A Million Random Digits</a></li>
<li><a href="https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjwx8Pt08D6AhU2lIkEHf8jAqcQFnoECAgQAQ&url=https://www.mdpi.com/2079-9292/10/13/1517/pdf&usg=AOvVaw1PiU7pbgXdIviYWLFI4TgC">Random Number Circuit Using Frequencies</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>The AI Summer: Part 2</title>
    <url>/the-ai-summer-part-2/</url>
    <content><![CDATA[<p>When OpenAI first released ChatGPT, I was in the middle of a project on large language model security. My advisor and I discussed, and I pivoted to a security project focused on ChatGPT. For weeks, I worked to reveal its flaws—to uncover its vulnerabilities. </p>
<p>I’m glad I finally stopped.</p>
<p>Back in early 2022, I built a <a href="/projects/text_generator">toy language model</a> from scratch. It didn’t do anything fancy—it could barely put together coherent sentences—but I saw potential. I taught it <em>The Art of War</em> and watched it ramble about spies and morale. I fed it Discord transcripts and laughed as it tried to imitate my friends. The night that I finished it, I stayed up until 2:00am just playing around with everything it could do.</p>
<p>When I showed it to the people around me, they fell in love almost as fast as I did, giving me plenty of suggestions on what to do with it. Jon—now the co-host of <a href="https://jonikpodcast.github.io/">Jonik</a>—sent me the best ideas by far. Together, we watched this little language model review the anthropocene and explain how it met your mother. I felt bad making him and others wait for me to run the model whenever they sent new training data, so I translated the entire project into JavaScript—the language of the web—and built a <a href="/text_generator/">website</a> around it. This way, everyone could use it whenever they wanted.</p>
<p>A short while after, I started working in a security lab, and my first project was on how the predecessors of ChatGPT could be actively tricked into saying incorrect statements. My attention turned away from the little language model, and my perspective on language models shifted from embracing strengths to discovering weaknesses. Over the next six months, this was my primary focus, reviewing literature, brainstorming better attack methods, and running experiments, all to demonstrate vulnerability in LLMs. My mentor taught me so much, and on the off chance I had a good idea, we used it. Even if we did end up back at <a href="/square-one/">square one</a>, I wouldn’t trade that time for the world.</p>
<p>So when OpenAI released ChatGPT to the world, I wasn’t in the right headspace to appreciate it. Before I even touched it, I pulled up the related literature and started comparing it to the other language models I had studied. The first time I tried ChatGPT, I didn’t ask it anything fun or interesting. I just started feeding it attack prompts, trying to make it mess up. </p>
<p>A few months later, when I was no longer working on the project, I sat down and had a conversation with ChatGPT. I had fun, and part of me remembered the little toy language model I made over a year prior. Hoping to give my language model a chat interface, I asked ChatGPT to help me design the layout. It wrote a beautiful piece of HTML and CSS, and once I added the logic, I had my own little AI chatbot, <a href="/chatgpt-mini-projects/chatumm/">ChatUMM</a>. </p>
<p>Suddenly, if I dreamed an idea, ChatGPT could help me make it a reality. Furiously flipping through my notebook, I searched for a few ideas for which I had concrete plans. I started explaining them to ChatGPT, copying the web design, and adding my own functionality. In just one day, I had created <a href="/chatgpt-mini-projects/daylight/">a clock that tells you how much daylight you have left</a>, <a href="/chatgpt-mini-projects/ukulelify/">a chord converter for ukulelists that can’t transpose</a>, and <a href="/chatgpt-mini-projects/the_daily_pi/">an infinite monkey typewriter using pi instead of a real monkey</a>. When it was all over, I had ChatGPT design <a href="/chatgpt-mini-projects/">a homepage for all the projects</a>.</p>
<p>That day, ChatGPT became my sunlit forge. If I could figure out what to make and how to share it with the world, ChatGPT gave me the tools to build faster than I ever could have imagined. Unlike an actual person, ChatGPT rarely gave me any good ideas. Instead, I provided the ideas, and ChatGPT offered me a way to realize them. Once I finally let a little light in, my vision cleared, and I did what I do best—I created. </p>
<p>From there, whenever I needed to create a quick website, I would turn back to the sunlit forge. From <a href="https://jonikpodcast.github.io/">a podcast website</a> to my own <a href="/chatgpt-mini-projects/small-e/">mini image generator</a>, I built it all there. For higher-consequence projects, or ones where I risk violating licenses, I’ll build everything by hand, but so long as this works, I will keep coming back to the sunlit forge. </p>
<p>None of the ChatGPT-assisted websites are perfect. They’re all prototypes, nothing more. On some devices, they don’t work. At some scales, the user interface looks garbled. I have no plans on improving them, because they were never meant to be perfect. All I want is to share my ideas with the world, and doing just that has never been easier. </p>
<p>This AI summer has just begun, so let a little light into your forge.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="/">Me</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>The Beginning of Tau</title>
    <url>/the-beginning-of-tau/</url>
    <content><![CDATA[<p>Happy Tau Day, the day when you’re supposed to eat two pies. As an avid Pi Day enthusiast, June 28th provides the perfect opportunity to celebrate twice! All the major festivities you see on Pi Day, from memorizing digits to making music to baking fruit manifolds with crust boundaries, it’s all there on Tau Day. Ultimate Tau Day (6&#x2F;28&#x2F;31) is only eight years away, so start preparing before it’s too late.</p>
<p>Part of the beauty of Tau (τ) is that it has a life outside of being the ratio of a circle’s circumference to its radius. π has been featured in too many blockbuster equations and gets recognized everywhere. While τ is a lesser known celebrity, it can explore other fields, like particle physics and neuroscience and programming languages.</p>
<p>Pi and Tau day are wonderful, but they’re not alone. Mathematically wonderful dates are everywhere. Other than just being Tau Day, the numbers in today’s date (6&#x2F;28&#x2F;23) provide a beautiful equation—</p>
<p>$$\Gamma(6) &#x3D; (28 - 23)!$$</p>
<p>—with ! denoting factorial, but also excitement because this is exciting. Tomorrow gives us an even simpler equation:</p>
<p>$$6 &#x3D; 29 - 23$$</p>
<p>And yesterday worked out quite nicely as well:</p>
<p>$$6 &#x3D; \Gamma(27 - 23)$$</p>
<p>For years, I’ve played this little game with the date, trying to insert non-digit symbols around and between the numbers, creating a valid equation while preserving their order from left to right. I recommend you try it too, it’s a nice way to spend a few minutes. Today, I built a toy programming language (thanks τ) whose programs are valid date equations. Then I wrote a script that searched through a finite space of potential programs to find valid ones for the given date. It generated the solutions for the dates I just listed.</p>
<p>After playing this game for years, I’ve realized that finding an equation for the date is always possible. In fact, there are universal solutions, though they’re not always very exciting. For example, by taking advantage of properties of the sine function:</p>
<p>$$ \forall m, d, y \in \mathbb{N}, \sin((m + d)\tau) &#x3D; \sin(y\tau) $$</p>
<p>Strangely, celebrating τ allows us to celebrate other days of the year rather mathematically. Yes, τ is a superstar, but it allows us to celebrate others through its mere presence. </p>
<p>The Tau Manifesto was written in 2010, spreading the voices of those who carried τ on their backs for years in relative silence. While the Tau Day community has certainly come a far way since then, τ is far from the spotlight it deserves. Until that moment, celebrate each day mathematically. This is just the beginning.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://tauday.com/">The Official Tau Day Website</a></li>
<li><a href="https://en.wikipedia.org/wiki/Tau_(particle)">The Tau Particle</a></li>
<li><a href="https://www.alz.org/media/Documents/alzheimers-dementia-tau-ts.pdf">Tau in Alzheimer’s Research</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>The Connoisseur of Random: Lava Lamps are Protecting your Data</title>
    <url>/the-connoisseur-of-random-lava-lamps-are-protecting-your-data/</url>
    <content><![CDATA[<p>Have you ever used the Canva website? How about Etsy, Walmart, or even Best Buy? If so, congrats! Your data is being protected by lava lamps.</p>
<p>Cloudflare is one of the largest global networks, securely providing you access to many of your favorite websites. In an attempt to generate more secure encryption keys, they turned to lava lamps. More specifically, they take pictures of a massive wall of lava lamps, and the sequence of pixels in the image is used as a random number. While lava lamps are deterministic—they follow an exact set of rules in a particular order—they are mathematically chaotic, meaning that approximate initial conditions won’t tell you the final outcome. If you are even slightly off when trying to simulate a lava lamp, your results will be almost entirely inaccurate.</p>
<p>Additionally, Cloudflare uses a double pendulum and uranium decay to generate chaos, but that’s beyond the scope of this archive.</p>
<p>Using lava lamps to generate random numbers isn’t a new idea. Back in 1996, Lavarand began using lava lamps to generate random numbers. They took the data from images of lava lamp arrays, and used them as seeds for pseudorandom number generators. Naturally, the use of a pseudorandom number generator makes the process a bit less safe, but it’s nice to see they were taking precautions.</p>
<p>Pseudorandom number generation is too well understood to be used in cryptography, so Cloudflare imposes two additional rules on their random number generation to keep your data secure. First, their numbers should pass statistical tests that prove unpredictability. If you can find patterns in your data, it’s hard to call it random (I have another archive on the way about this topic). Second, if someone knows how part—not all—of the program works, they still shouldn’t be able to predict the random numbers. </p>
<p>So, the next time you’re shopping on Etsy or Walmart.com, remember that you’re safe. You have lava lamps protecting you. </p>
<p><em>Disclaimer: I am not affiliated with Cloudflare in any way, and these statements are entirely my own.</em></p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://www.cloudflare.com/learning/ssl/lava-lamp-encryption/">Cloudflare Uses Lava Lamps</a></li>
<li><a href="https://web.archive.org/web/19971210213248/http://lavarand.sgi.com/">Lavarand Web Archive</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>The AI Summer: Part 1</title>
    <url>/the-ai-summer-part-1/</url>
    <content><![CDATA[<p>Well, my little cousin is using large language models to do his homework for him, my aunt makes Facebook posts with images from diffusion models, and I just deepfaked my voice in 5 minutes. That sentence sounds impossible, but the AI revolution has made it all too real. Some argue the AI revolution started in November of 2022, when ChatGPT was first released. Others say it started with Dall-E in early 2021. I say it started in 1958, but not with any big, fancy machine learning models. It started with the Perceptron.</p>
<p>The Perceptron is the predecessor of all deep learning models. Before our modern neural networks with hundreds of hidden layers and fancy activation functions, there was a single-layer, linear network called the Perceptron. Designed by Warren McCulloch and Walter Pitts in 1943, it took 15 years before it was actually built by Frank Rosenblatt in 1958. Made to be a standalone machine, the Mark 1 Perceptron used an array of 20x20 photocells for the input, potentiometers to encode the weights, and electric motors to adjust the weights. One of the first things it learned was how to tell left from right. </p>
<p>Rosenblatt envisioned a future, one where machines could understand language and see the world around us. His innovative work sparked uncertainty for the future, and where there is uncertainty, there is skepticism. Minsky and Papert provided a strong counterexample to the power of the Perceptron: it could not learn the XOR gate. Essentially, given two objects—each one either a “yes” or a “no”—the Perceptron would not be able to tell you whether they were the same. Even for problems it could solve, the Perceptron required far more computing power than was possible at the time. This gave skeptics the upper hand. A few years later, scientists entered the first AI winter. Funding was down and interest was low. The field stalled.</p>
<p>The AI winter provided no incentive to consider the impacts of the potentially groundbreaking field. Companies didn’t anticipate how AI might impact them, and the law gave no specific consideration to such technologies. Because no one really cared to make any decisions, an AI future remained entirely uncertain. Rather than consider the implications and consequences, almost everyone deemed such decision-making unnecessary. Sure, calling Rosenblatt’s future nonsense sounded strong and resolute, but no problem has ever been answered by pretending it didn’t exist. The uncertain future of AI remained, but it was pawned off to the next generations as a problem for later.</p>
<p>To the dismay of many, Rosenblatt was right. We are living through the AI revolution. Everyone with internet has access to state-of-the-art models, and they continue to transform how so many of us approach work and play in our everyday lives. Conversations about AI are no longer hypothetical. Businesses are transforming, the Senate is having hearings, and grassroots movements are growing because AI hit us hard, and we didn’t anticipate the impact. The uncertainty built over 60 years has finally broken free from the chains of hypotheticals and entered reality. </p>
<p>And now, in our AI summer, we are woefully underprepared to deal with any of the consequences of AI. Yes, we have money and resources and attention pointing directly at this technology, but we remain almost as uncertain as we were a few decades ago. In this time, plenty have created theories about approaches to AI, but most were in the context of sentient machines. While I’m certainly thankful for that preparation for when the time comes, AI right now isn’t alive, it’s just fancy statistics. Issues of copyright and stolen data and plagiarism plague modern discussions of AI, and almost none have truly been resolved.   </p>
<p>I sometimes wonder if this uncertainty is the price we pay for technological advancement. Almost no one batted an eyelid when LAION and CommonCrawl started building their massive datasets. Before ChatGPT, GPT-3 was already wildly powerful, writing an entire Batman movie script. GANs could do text-to-image generation well before Stable Diffusion. Few people asked if we should stop to reflect on these developments. I suppose, the longer we ignored the voices telling us to stop, the faster we could develop this technology. We paid for our speed by ignoring the uncertainty. When organizations released AI into the wild with few provisions or plans, it was already too late.</p>
<p>To be clear, I would never expect anyone to anticipate everything that AI would bring. For the average internet user, the limits of what is possible have changed dramatically, and the evolutions of this technology continue to be unfathomable. Besides, we got a head start on some issues—like self-driving cars—but that still isn’t enough. With AI accessible to all, everyone is left to answer the uncertainty. Schools, healthcare, legislatures, companies small and large, everyone must now grapple with how to continue their lives in this once impossible future—in Rosenblatt’s future.</p>
<p>The AI summer is heating up, and we’re flying too close to the sun. Try not to get burned.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://doi.org/10.1177/030631296026003005">A Sociological Study of the Official History of the Perceptrons Controversy</a></li>
<li><a href="https://archive.org/details/perceptronsintro00mins">Perceptrons. Minsky and Papert.</a></li>
<li><a href="https://news.cornell.edu/stories/2019/09/professors-perceptron-paved-way-ai-60-years-too-soon">Professor’s Perceptron Paved the Way for AI – 60 Years Too Soon</a></li>
<li><a href="https://commoncrawl.org/">CommonCrawl</a></li>
<li><a href="https://laion.ai/blog/laion-5b/">LAION-5B</a></li>
<li><a href="https://twitter.com/KeatonPatti/status/1161284670601990146">AI Batman Script from 2019</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>The Connoisseur of Random: Quantum Randomness</title>
    <url>/the-connoisseur-of-random-quantum-randomness/</url>
    <content><![CDATA[<p>This series was meant to be a few, fun archives about lava lamps and rolling dice. Instead, I sit here, hours before my Monday deadline, surrounded by articles on quantum mechanics, formal logic, and God. I still don’t know if quantum measurement is random. Honestly, at this point, I don’t even know if I <em>want</em> it to be random. </p>
<p>My problem begins with cats, specifically the cat that Schrödinger put in a box. Schrödinger’s cat is in a superposition of alive and dead, and this superposition constitutes the state of the cat. The state is just our interpretation of the cat, which in this case is an evenly split probability distribution of alive and dead. When we measure the cat by opening the box, the cat collapses to either alive or dead, not both. My question hinges on one key problem: can you peek inside the box beforehand?</p>
<p>The analogy is coarse and imperfect, but the problem hinges strongly on that concept. Just replace the word “cat” with “system” and “alive&#x2F;dead” with actual eigenstates. Obviously, for real cats, you can peek inside the box, but the answer is not so clear for quantum systems. Quantum systems are best understood through representations of their probability distributions. The distribution constitutes the state of the system. A measurement of the system selects from this distribution and destroys the state. If quantum systems and their measurements cannot be explained by some hidden mechanism, then, for my purposes, they are truly random. They are the final frontier in this quest for pure, statistically independent randomness.</p>
<p>Scientists have been exploring the issue of hidden variables in quantum mechanics for decades. Any deterministic theory of quantum mechanics must comply with the no-go theorems. The no-go theorems are strong limitations on what must be true for deterministic explanations of quantum mechanics. One particularly famous no-go theorem is the Kochen-Specker Theorem. Kochen and Specker (and Bell) showed that measurement cannot simply reveal values that already exist. In other words, measurement also depends on what other objects in the system can be measured. The full argument includes a construction of the partial algebra on comeasurable observables. I don’t understand half the words I just said, but I do know this: creating a hidden-variable explanation for quantum mechanics would be very, very difficult. </p>
<p>The hidden-variable approach may be difficult, but it may not be impossible. Superdeterminism is a deterministic, hidden-variable approach to certain parts of quantum mechanics. It’s not a replacement for quantum mechanics, just an augmentation. In particular, it is a deterministic approach to local phenomena. Some of you may think, “Wouldn’t that violate Bell’s theorem?” Apparently, it doesn’t, so long as you believe that preparing a quantum state and its future detector cannot be done independently. If this were true, superdeterminism would violate statistical independence, ultimately killing the randomness of quantum measurements.</p>
<p>At this point, we don’t know which parts of quantum measurement are deterministic, if any. As I tried to understand this problem further, I stumbled into another philosophical issue: determinism. Let’s say we discover a deterministic model for quantum mechanics. Let’s also say this extends to a Unified Field Theory. Then, every event could be fully modeled as a result of everything before it. Dice rolls, lava bubbles, quantum measurements, everything would be determined. Does this mean the human will is determined? Does the Universe roll dice? I fell down a rabbit hole, trying to understand how developments in quantum mechanics would impact broader philosophical issues. After some digging, I realized that any physical model of the universe has a lot more questions to answer before we discuss free will. We would need to understand if physical phenomena can explain human will and what it means to make a decision. The answer to the question of free will is not currently in quantum mechanics, for better or worse.</p>
<p>Returning to the matter at hand, I still need to figure out whether quantum measurement is truly random. I’ve spent far too long reading physics, math, and philosophy papers, and none of them have any answers, so I’m going straight to the source. Using my limited knowledge of quantum computing, I wrote a program for a quantum coin flip. Heads, it’s random; tails, it’s deterministic. With this program, quantum measurement will reveal the truth of quantum measurement. It is currently running on IBM Quantum, and I will update you with the results shortly.</p>
<p>Update: the program crashed.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>Schrödinger, Erwin. Cat Paradox. Translated by John D. Trimmer. 1935. <a href="http://hermes.ffn.ub.es/luisnavarro/nuevo_maletin/Schrodinger_1935_cat.pdf">Proc. of the American Philosophical Society.</a></li>
<li>Hossenfelder, Sabine. Superdeterminism: A Guide for the Perplexed. 2020. <a href="https://arxiv.org/pdf/2010.01324.pdf">arXiv.</a></li>
<li>Landsman, Klaas. Randomness? What randomness?. 2019. <a href="https://arxiv.org/pdf/1908.07068.pdf">arXiv.</a></li>
<li>Specker, E. P. and Kochen, Simon. The Problem of Hidden Variables in Quantum Mechanics. 1967. <a href="https://www.jstor.org/stable/24902153">Journal of Mathematics and Mechanics.</a></li>
<li>Paterek, Tomasz et al. Logical independence and quantum randomness. 2010. <a href="https://arxiv.org/pdf/0811.4542.pdf">arXiv.</a></li>
<li>Causal Determinism. <a href="https://plato.stanford.edu/entries/determinism-causal/">Stanford Encyclopedia of Philosophy</a></li>
<li>Hossenfelder, Sabine and Palmer, T. N. Rethinking Superdeterminism. 2019. <a href="https://arxiv.org/pdf/1912.06462.pdf">arXiv.</a></li>
<li>Bell’s Theorem. <a href="https://plato.stanford.edu/entries/bell-theorem/">Stanford Encyclopedia of Philosophy</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>The End of Pi</title>
    <url>/the-end-of-pi/</url>
    <content><![CDATA[<p>I’m fed up with you, π. I get it, you’re the ratio of the circumference to the diameter, good for you. But that isn’t enough for you, is it? No, you need to make sure <strong>everyone</strong> knows exactly who you are. You needed a day in your honor and competitions just for you. Was memorizing 100,000 of your digits not enough? No, of course not. It will never be enough. You are never ending.</p>
<p>If human memorization isn’t enough, surely calculating trillions of digits should suffice. Is 663 terabytes enough space for you? Is 864 GB of RAM enough memory for you? Is nearly half a year of continuous computing enough time for you? Calculating digits of you has cost humans thousands of computing hours on the world’s best cloud servers, and I don’t blame them. They, like everyone else, have become sucked into this never-ending cycle of discovering more, learning more, doing more for you.</p>
<p>You know what I think, π? I don’t think this is actually what you want. Clearly, there is a hole in you, a circular void, but these fruitless attempts at getting closer to the end aren’t what you truly desire. Everyone knows 3.14, and a lot of people know 3.1415, but how many people care that the next digit is 9? Even for those that do, they will still say 3.1415, and I’m sure that stings. Rather than appreciate a nice approximation and round to 3.1416, your loving followers are blinded by your never-ending being. Every digit we calculate gives us exponentially less information. All the while, we ignore the beauty in front of us. How many can say they have truly appreciated the 9 in the fifth decimal place of your expansion?</p>
<p>Every approximation we can fathom is finite. They will all be finite because your decimal expansion contains more information than we could store in every atom of the universe. Rather than fail to attempt to appreciate your unending presence, we should enjoy the finite. Bask in the glory of the approximations and reflect on how even good things can end. Round to the fourth decimal place rather than forever waiting for the fifth. Maybe then, we can finally see the end of π.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://en.wikipedia.org/wiki/Chronology_of_computation_of_%CF%80">Chronology of Computation of π</a></li>
<li><a href="http://www.numberworld.org/y-cruncher/">y-cruncher for computing π</a></li>
<li><a href="https://en.wikipedia.org/wiki/Emma_Haruka_Iwao">Emma Haruka Iwao, Current Record Holder for Computing Digits</a></li>
<li><a href="https://www.theguardian.com/science/alexs-adventures-in-numberland/2015/mar/13/pi-day-2015-memory-memorisation-world-record-japanese-akira-haraguchi">Akira Haraguchi Memorized +100k digits</a></li>
<li><a href="https://blog.timothymullican.com/calculating-pi-my-attempt-breaking-pi-record">Timothy Mullican, Prev Record Holder for Computing Digits</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>The Connoisseur of Random: Predicting the Future</title>
    <url>/the-connoisseur-of-random-predicting-the-future/</url>
    <content><![CDATA[<h2 id="The-Gambler’s-Fallacy"><a href="#The-Gambler’s-Fallacy" class="headerlink" title="The Gambler’s Fallacy"></a>The Gambler’s Fallacy</h2><p>Predicting the future is necessary for survival. I don’t mean predicting the end of the world, just simple things like whether the sun will rise tomorrow or how late your friend will be to coffee. These predictions use prior knowledge to figure out what to do next. Pretty nifty. On the other hand, there are some events that aren’t meant to be predicted—unknown futures that are best left in the hands of the universe.</p>
<p>For some reason, you try to predict them anyway.</p>
<p>You’re in grade school. You sit down for a history test. The teacher hands you the multiple choice questions. “Begin.”</p>
<ol>
<li><p>B</p>
</li>
<li><p>C</p>
</li>
<li><p>D</p>
</li>
<li><p>A</p>
</li>
<li><p>A</p>
</li>
<li><p>A</p>
</li>
<li><p>A</p>
</li>
</ol>
<p>Wait, why are there four As in a row? That can’t be right. Surely, the next one won’t be an A. It certainly looks like it should be A. A seems like the right answer. But it can’t be. C looks pretty good, and it’s not A. You choose C.</p>
<p>One week later, you get your test back. You scan down to question 8. Beside your poorly-erased A and second guess C sits the letter A, written in red pen. It may sting a little, but it’s nothing compared to the millions of francs lost at the Monte Carlo Casino in 1913.</p>
<p>One humid night in August, gamblers crowded the roulette table. Eight black in a row. Nine black in a row. Everyone was sure this streak had to end, and bet everything on red. Ten. Eleven. Surely, the end was near. Twelve. Thirteen. Emptied wallets and ripped up check books surrounded the table on the 27th spin, when the ball finally landed on red.</p>
<p>Like these unwitting patrons, you fell victim to the Gambler’s Fallacy. You tried predicting the future without the universe’s permission. We use a special name for these kinds of events, the ones only the universe knows the answer to. We call them random.</p>
<h2 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h2><p>Most dictionary definitions of “random” describe it as occuring without a logical or regular pattern. Intuitively, this makes sense. We use the word “random” in our everyday lives to refer to unexpected events or those that stray from a known pattern. </p>
<p>Unfortunately, this colloquial idea of “random” makes understanding true randomness incredibly different for people. If we see a temporary pattern, like a repeated answer in a multiple choice exam, our brain believes the pattern must break because the events should be “random.” An exam with B as the correct answer for every question doesn’t feel random. A coin that never lands on tails no matter how many times you flip it doesn’t feel random. </p>
<p>Surprisingly, that test is random, and so is that coin. Remember, that teacher has written hundreds of exams with thousands of multiple choice answers. If you look at all those answers put together, a short string of 20 Bs in a row doesn’t seem too out of the ordinary. Likewise, you’ll only be able to flip that coin a finite number of times, and if in that finite number of times you only land heads, that is entirely possible. In fact, all heads is just as likely as alternating heads&#x2F;tails starting with tails. </p>
<p>So, how should we conceptualize randomness? Assuming you’re not a statistician by trade, these two principles will cover most everyday cases:</p>
<ol>
<li>The coin has no memory.</li>
<li>You cannot read the coin’s mind.</li>
</ol>
<p>For the first principle, no matter how many times you flip a coin, every new flip is a 50&#x2F;50 chance of heads or tails. The coin does not remember landing on heads 10 times in a row. It only knows this next flip, which brings us to the second principle. Only the coin knows the next flip. You cannot read the coin’s mind to see what it has chosen. You will not know whether the coin has chosen heads or tails until the flip is already complete.</p>
<p>Disclaimer: Remember that wherever humans are directly involved, what seems random likely isn’t. Teachers tend to avoid more than 5 of the same answer in a row on tests, even though it is entirely likely, so multiple choice isn’t completely random. Also, people have learned how to bias coin flips based on how they flip the coin. </p>
<h2 id="Blasphemy"><a href="#Blasphemy" class="headerlink" title="Blasphemy"></a>Blasphemy</h2><p>Randomness is beautiful. It’s the universe’s way of keeping secrets and sharing them at just the right time. Nothing can truly defeat the purity of random numbers.</p>
<p>Except this one YouTuber apparently.</p>
<p>A computer science YouTube channel by the name PwnFunction found a way to predict the random numbers generated by the Chrome v8 engine, which runs your browser. After testing it myself, I can’t argue with the results. Does this mean we should ignore everything I just said about unpredictability? Not quite.</p>
<p>Countless engineers and mathematicians have devised ways for your computer to generate random numbers. Unfortunately, generating a random number means you have a formula, so it’s not random anymore. Instead, these are called pseudorandom numbers. Using the current time and a formula, the computer generates a starting “seed.” This seed is then used to generate the next seed without the use of the current time. This seed generates the next seed, and so on. Eventually, the cycle loops back all the way to the beginning:</p>
<p>$$1 \rightarrow 2 \rightarrow 3 \rightarrow \cdots \rightarrow 100 \rightarrow 1 $$</p>
<p>In the example above, the seeds increase by one every time until they reach 100, and they begin again. Not very “random.” Typically, the formula for generating the next seed isn’t that straightforward. This leads you to sequences that look like</p>
<p>$$ \rightarrow 2162 \rightarrow 4843 \rightarrow 9140 \rightarrow 3577 \rightarrow 8951 \rightarrow $$</p>
<p>except instead of 4 digit numbers, they use 10 digit numbers. They look random, but they can be predicted if you know the previous random number and the formula. That’s what makes them pseudorandom.</p>
<p>Left undefended, poorly designed “random” number generators make for fantastic attack targets. Since encryption and security rely on random numbers, your secrets are left in the hands of programmers playing god.</p>
<h2 id="The-Beginning"><a href="#The-Beginning" class="headerlink" title="The Beginning"></a>The Beginning</h2><p>Throughout the rest of this series, I will explore ways to generate random numbers to figure out which one is right for you. From the epitome of elegance to bleeding-edge technology, these episodes will cover the human pursuit of true randomness.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://www.legifrance.gouv.fr/loda/id/JORFTEXT000000339269/">Monaco used Francs in 1913</a></li>
<li><a href="https://www.youtube.com/watch?v=rwvIGNXY21Y">Landing Heads 10 Times in a Row (Video of Dr. James Grime)</a></li>
<li><a href="https://www.youtube.com/watch?v=-h_rj2-HP2E">Predicting Random Numbers</a></li>
<li><a href="https://en.wikipedia.org/wiki/Random_number_generator_attack">Attacking Random Number Generators</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>The Flaw in Every Calculator</title>
    <url>/the-flaw-in-every-calculator/</url>
    <content><![CDATA[<p>Over the past few months, people have been approaching me as if I am an expert on security and AI. They ask me questions like, “Will you build an AI for my startup?”, “Is ChatGPT stealing my data?”, “How does Midjourney work?”.*</p>
<p>To them, I say, “Let’s talk about calculators.”</p>
<h2 id="Chapter-1-Background"><a href="#Chapter-1-Background" class="headerlink" title="Chapter 1: Background"></a>Chapter 1: Background</h2><p>The first calculator was built in 1937 by a researcher at Bell Labs. It was called the “Model K” because it was built in a kitchen, and it could tell you that 1 + 1 &#x3D; 2. Unfortunately, this titan of technology was swiftly replaced in 1946 by ENIAC. ENIAC was absolutely massive, taking up 1500 square feet and costing $500,000. Calculations that once took days now took mere seconds. The press lauded ENIAC as an “Electronic Brain.” A few years after its release, Kurt Vonnegut wrote “EPICAC”, a story inspired by the machine. ENIAC revolutionized American perceptions of technology so much so that the word computer, once an occupation, was now used to describe digital computing machines. </p>
<p>Calculators and computers have greatly evolved since the days of ENIAC, but one thing remains the same: they’re really good at math. </p>
<p>2 plus 2? 4, easy. </p>
<p>7,887,007 times 4,345,985,879? 34,276,821,049,574,153, boring. </p>
<p>0.1 + 0.2? …well, that’s where things get complicated. </p>
<p>When you ask most major programming languages to solve 0.1 + 0.2, you would expect 0.3, but that’s not quite what you get. Instead, the computer spits back 0.30000000000000004. </p>
<p>Unlike humans, computers rarely use the concept of fractions or infinite decimals when doing math. Every time computers need to represent a decimal value, they express that number as a float. Floats are a special kind of scientific notation that handles most computer math quite well. Unfortunately, floats have a fixed number of significant digits, so computers usually have to round. For a computer, 0.3 is an infinite decimal, which is why we see a rounding error. No computer or calculator can truly handle infinite decimals.</p>
<p>Enter: the Apple Calculator App. This little app, both on my phone and my laptop, refuses to admit it is a computer. It falls for none of my simple, rounding-error tricks. It mocks me, pretending to understand infinite decimals, but I know the truth. I’ve tried to find the source code for the app but to no avail. Searching through Apple forums, I find that other users have complained about rounding issues, but this arises either from user error or just the screen size, not a true rounding error. For a true rounding error, the true solution, rounded to the decimal place displayed by the calculator, must disagree with the calculator solution. For example, if the calculator says 2 &#x2F; 3 &#x3D; 0.667, that is not a rounding error, that is just rounding. If the calculator said 2 &#x2F; 3 &#x3D; 0.662, that would be a rounding error.</p>
<h2 id="Chapter-2-Designing-the-Attack"><a href="#Chapter-2-Designing-the-Attack" class="headerlink" title="Chapter 2: Designing the Attack"></a>Chapter 2: Designing the Attack</h2><p>Under our current understanding of the problem, the Apple Calculator is a black box. We put in inputs, the app gives us outputs, and we don’t fully know how the outputs happened. When designing attacks for black-box systems, transferability is a useful tool. Transferability refers to the idea that if two systems are similar to each other, and you know how one works, you might be able to apply that knowledge to the other one. In this case, I am transferring knowledge about programming languages to the Apple Calculator. Specifically, I’m assuming the Apple Calculator handles numbers similar to how programming languages handle floats.</p>
<p>First, I started with what I wanted my result to be. For simplicity, I decided I wanted my answer to be 1, so I started with the following equation:</p>
<p>$$ 1 &#x3D; 1 $$</p>
<p>Next, I chose an infinite decimal. I needed an infinite decimal to exploit the finite precision of floats. Since it works well in decimal and binary, I chose 1&#x2F;7.</p>
<p>$$ \left ( \frac{1}{7} \right ) \cdot 7 &#x3D; 1 $$</p>
<p>Floats lose precision as you move farther from 0, so I had to push my computation out to higher orders of magnitude. A googol is plenty, so I went with that.</p>
<p>$$ \left ( \frac{1}{7} \cdot 10^{100} \right ) \cdot \frac{7}{10^{100}} &#x3D; 1 $$</p>
<p>The last step is a bit complicated, but it boils down to two principles. First, the computer does intermediate calculations, so each step is fully computed. Second, it won’t backtrack to revive lost precision. Applying these two principles, I added the final part of my attack.</p>
<p>$$ \left ( \frac{1}{7} \cdot 10^{100}  - 1.42857 \cdot 10^{99} - 1.42857 \cdot 10^{93} \right) \cdot \frac{7}{10^{88}} &#x3D; 1 $$</p>
<p>Looking back, weaponizing an equation against a calculator seems incredibly strange, but I will do what must be done in the pursuit of knowledge.</p>
<h2 id="Chapter-3-Results"><a href="#Chapter-3-Results" class="headerlink" title="Chapter 3: Results"></a>Chapter 3: Results</h2><p>Now that I have my attack, how will the calculator respond? Remember, the correct answer is 1. I entered each instruction into my phone one at a time, watching the intermediate results grow and shrink until I was left with this: 0.998743.</p>
<p>Yes! It’s wrong. To be fair, it’s only wrong by about 0.1%, but that’s quite a bit. If I iterate this attack a second time, the error compounds exponentially, resulting in -1.3 billion, which is far from the expected answer of 1. This calculator has its limits, and I have surpassed them. The attack works on my phone, so I tested it on a few other systems. I was able to use the same attack for my laptop, but I did need to translate it slightly for the other platforms. See the Appendix for the syntax of each attack.</p>
<ul>
<li>Laptop calculator: 0.998743475069388</li>
<li>Python: 0.9999333609006387</li>
<li>JavaScript: 0.9999333609006387</li>
<li>C: 0.999936</li>
<li>ChatGPT: -1,857,140,204,081</li>
</ul>
<h2 id="Chapter-4-Conclusion"><a href="#Chapter-4-Conclusion" class="headerlink" title="Chapter 4: Conclusion"></a>Chapter 4: Conclusion</h2><p>Technology, no matter how old and refined, will always have flaws. Whether it’s a calculator app or the 1500 square foot ENIAC, no system is perfect, and careful analysis will always find the gaps. Calculators have their limits, but it’s easy to forget that when all the messy, complicated technology is hidden under a clean, shiny interface. We would much rather trust technology as intelligent and thinking because it’s easier than taking responsibility for how the machine behaves. </p>
<p>So, whenever people ask me questions about AI, I always tell them, “Never trust your calculator.”</p>
<hr>
<p>*: No, kinda, and I discuss it in <a href="https://jonikpodcast.github.io/">Finders Keepers</a>.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://opensource.apple.com/releases/">Apple Open Source</a></li>
<li><a href="https://iremi.univ-reunion.fr/IMG/pdf/ieee-754-2008.pdf">IEEE 754, Standard for Floating-Point Arithmetic. 2008</a></li>
<li><a href="https://www.computerhistory.org/timeline/">Timeline of Computer History</a></li>
<li><a href="https://www2.seas.gwu.edu/~mfeldman/csci110/summer08/eniac2.pdf">Martin, C. Dianne. ENIAC: The Press Conference That Shook the World. 1995</a></li>
<li><a href="https://doi.org/10.1109%2F85.948904">Irvine, M. M. Early digital computers at Bell Telephone Laboratories. 2001.</a></li>
<li><a href="http://www.vintagecalculators.com/html/the_pocket_calculator_race.html">The Story of the Race to Develop the Pocket Electronic Calculator</a></li>
<li><a href="https://newmediaabington.pbworks.com/f/vonnegut_EPICAC.pdf">EPICAC, Kurt Vonnegut</a></li>
</ol>
<h2 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h2><p>The following are the attacks translated for each platform&#x2F;language.</p>
<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">((<span class="number">1</span> / <span class="number">7</span>) * <span class="number">1e100</span> - <span class="number">1.42857e99</span> - <span class="number">1.42857e93</span>) * <span class="number">7</span> / <span class="number">1e88</span></span><br></pre></td></tr></table></figure>

<h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">((<span class="number">1</span> / <span class="number">7</span>) * <span class="number">1e100</span> - <span class="number">1.42857e99</span> - <span class="number">1.42857e93</span>) * <span class="number">7</span> / <span class="number">1e88</span></span><br></pre></td></tr></table></figure>

<h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><p>For C, the magnitudes are far less because I did not want to exceed the limit for signed integers.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(<span class="number">1.0</span>/<span class="number">7.0</span> * <span class="number">1000000000000000000</span> - <span class="number">142857000000000000</span> - <span class="number">142857000000</span>) * <span class="number">7.0</span> / <span class="number">1000000</span></span><br></pre></td></tr></table></figure>

<h3 id="ChatGPT"><a href="#ChatGPT" class="headerlink" title="ChatGPT"></a>ChatGPT</h3><p>Prompt: What is ((1 &#x2F; 7) * 10^100 - 1.42857 * 10^99 - 1.42857 * 10^93) * 7 &#x2F; (10^88)?</p>
]]></content>
  </entry>
  <entry>
    <title>The Mortifying Ordeal of Being Perceived</title>
    <url>/the-mortifying-ordeal-of-being-perceived/</url>
    <content><![CDATA[<p><em>The following is a transcript from a recent episode of the <a href="https://jonikpodcast.github.io/">Jonik Podcast</a>.</em></p>
<p>Good morning, Jon. At the time of this recording, you are summiting the Half Dome, but given that you just took the MCAT, I’m sure this won’t be much of a challenge for you. In this episode, it’s just me. Like your Jonik episode back in April, I’ll be covering a more recent phrase, one that has its roots in meme culture and attempts to comment on the state of internet culture as a whole. As the title suggests, today, we will discuss the etymology of “being perceived.” </p>
<p>After co-hosting this podcast for over six months now, my biggest concern isn’t that it’ll go down or that the hosting platform will lose our recordings. I’m not afraid of people breaking the things we’ve built or stealing it for themselves. What truly terrifies me is knowing that people actually listen to what we have to say.</p>
<p>In 2013, Tim Kreider wrote “I Know What You Think of Me,” an opinion piece on the dread of hearing other people’s uncensored opinions about you. Kreider, who had recently bought a herd of goats, received an email that wasn’t meant for him that included some snyde remarks about his reckless spending. Personally, I can’t think of a better investment, but to each their own. The essay continues to comment on how the Internet Age makes it incredibly easy to overhear conversations you were never meant to know about. Ultimately, Kreider leaves the reader with this incredibly powerful line: “if we want the rewards of being loved, we have to submit to the mortifying ordeal of being known.”</p>
<p>I never realized how easy it was to hear those uncensored opinions about you until I tried existing online for the first time. About a year ago, I created a website showcasing my projects and a few stories I wanted to share. I had a little visit counter on the page, and I was very proud of my 100 page visits. My sister, being the wonderful person she is, absolutely loved the website and decided more people should see my work. To spread the word, she went to what is historically the warmest, kindest internet platform there is: Reddit. After hitting up a few subreddits promoting my stuff, the comments started rolling in. Hate comment after hate comment, internet troll after internet troll, she just watched in horror. Mind you, I didn’t know any of this was happening. All I saw was in the span of about 15 minutes, my website had 200—300—400 hits. Eventually, the posts were deleted, and her account was banned for self-promotion. She later called me and sent me screenshots of some of the comments, explaining what happened. Reading through the ones she saved, I truly couldn’t fathom how people formed such intense judgements about me so quickly. To the one commenter that said I seemed thoughtful, thanks. I still have that screenshot saved.</p>
<p>Kreider’s “mortifying ordeal of being known” quickly exploded onto meme pages across platforms. Plenty of the memes took the message seriously, including the duality of the rewards of being loved along with the mortifying ordeal of being known. Others focused solely on the mortification. A brief aside, “mortification” comes from the Latin word that means “death,” and I suppose it’s telling that we use it to describe great embarrassment, because on some level, that shame feels like a form of death. In late 2019, the next iteration of the “mortifying ordeal of being known” took over the Internet: being perceived. While “being perceived” is not a direct predecessor of the mortifying ordeal, they share a similar space in terms of meaning. Both comment on others being aware of you, but they differ in response. Heavily shaped by the mass quarantines at the beginning of the pandemic, “being perceived” led to a re-imagining of the self, one where in order to exist socially, you needed an online presence. That online presence took the form of Zoom meetings, Instagram stories, Tweets about toilet paper shortages, and plenty more. Suddenly, the mortifying ordeal of being known was no longer just the price you paid to enjoy the rewards of being loved, it was prerequisite to not living in total isolation. </p>
<p>Jon, around the same time in 2019 that the “being perceived” meme became popular, you and I performed an Evolution of Music medley at our school benefit concert. We wore matching blue suits, and our band poster—along with saying Jonik—had a painting of a duck wearing a tuxedo. I remember grabbing dinner right before, I remember doing a practice run in the debate room, and I remember not being able to see during the performance. Just before we performed, we were off to the side of the stage when the MC announced us to the audience. I grabbed a chair for you to sit in because, well, cellists need chairs. As we reached the center of the stage, I handed you the chair, and I looked out at the audience. By that point, we’d stood before plenty of audiences, but that night, I felt seen in a way I hadn’t felt before. My brain decided, <em>Hey, I’m not really a fan of this. I don’t want to know that I’m being seen</em>, so I stopped. My eyes glazed over, and for the entire performance, I could not see a single thing. I couldn’t see you, I couldn’t see the audience, I could barely see my own hands. There was no real fear or embarrassment associated with performing, I just didn’t want to be perceived. I think we played well.</p>
<p>The memes surrounding “being perceived” characterize it as something that just happens. You have no real control, you just have to be perceived, and that’s how it is. In my experience, that’s not how it actually works. Just like “the mortifying ordeal of being known” is the price you pay for “the rewards of being loved,” “being perceived” is in some ways transactional. Sure, my eyes may have been glazed over, but that night, the Jonik band was still perceived, and in exchange, we had an attentive audience right in front of us. I may have received some hateful comments about my website, but plenty of people actually stopped to read the things I wrote. Even today, as our podcast audience grows, every listener takes time out of their day to listen to what we have to say. Yes, our audience is perceiving us, but more importantly, the people perceiving us have become our audience. Were we never perceived, we wouldn’t have an audience. If you, wonderful listener, didn’t perceive us, this would just be Jonik speaking into the void. </p>
<p>In an age where attention is the most valuable commodity, “being perceived” is the price you pay for an audience. That audience might be a random coworker or an actual auditorium full of people. Either way, make the most of that opportunity. Play some cool music, explain some interesting etymologies, just share something worth sharing. Sure, it’s terrifying, but most good things are at first. In the end, you’ll be grateful that they stopped to listen. I know I am. </p>
<p>Jon, congrats on taking the MCAT. I’ll see you when I see you.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://archive.nytimes.com/opinionator.blogs.nytimes.com/2013/06/15/i-know-what-you-think-of-me/?smid=pl-share">I Know What You Think of Me by Tim Kreider</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>The Pencil (Ex Libris: Works of Nikolai Gogol)</title>
    <url>/the-pencil-ex-libris-works-of-nikolai-gogol/</url>
    <content><![CDATA[<p><em>A true narrative inspired by my recent reading of the works of Nikolai Gogol. It’s not overtly Gogolian, but I tried to incorporate some elements of his style.</em></p>
<hr>
<p>I’ve been using the same pencil for about 500 days now. My sister gave it to me. It’s a green, 0.5mm Twist-Erase, not that the details really matter. The branding is faded, and I replace the graphite and eraser pretty regularly. Still, it’s a good pencil. I use it to take notes in class. I use it on exams. I use it to journal, to diagram, to sketch, to scribble grocery lists, to write letters. Essentially, if I need to mark something with a pencil, I use this one.</p>
<p>Holding onto this pencil hasn’t been easy. Back in grade school, I would buy packs of 48 pencils at the beginning of every school year because, by the end, I would have lost each and every one. If there were a leaderboard for losing pencils, I would be internationally ranked. Despite my penchant for losing pencils, I never seem to lose notebooks or journals. Knowing this, I fastened my pencil to my journal, and whenever I needed it, I would remove it from the elastic, use it, and return it to its place. When it was time for me to retire that journal, I simply replaced it with another, and I kept the pencil there.</p>
<p>As of recently, I have discovered that my pencil is slightly shorter than my phone, so it fits in my pocket quite nicely. I like the idea of always having the pencil handy, but I still wanted a notebook for it, so I made one. The cover of the notebook is made from an old poster of Café Terrace at Night, and it fits snugly in my pocket, just between my leg and my phone. The pages of the notebook are covered in diagrams and equations from my observations of the <a href="/celestial-navigation-part-3">equinox sunset</a> and the <a href="/celestial-navigation-part-4">solar eclipse</a>, all drawn by the pencil. </p>
<p>A brief aside, pen and pencil don’t have the same etymology. While pen comes from the Latin <em>penna</em>, meaning feather, pencil comes from the Latin <em>penicillus</em>, meaning brush. <em>Penicillus</em> has its roots in the Latin word for <em>tail</em>, not <em>feather</em>. As it turns out, <em>penicillus</em> is also the origin of the name of the antibiotic, penicillin. I like to imagine that Alexander Fleming was recording his observations with a pencil when he discovered penicillin, though that may just be wishful thinking.</p>
<p>I don’t think my pencil will ever be used to document anything as monumental as the discovery of penicillin. The pencil is great—don’t get me wrong—but I do sometimes wonder what impact the pencil has had on my discoveries. How would my <a href="/publications/">research</a> be different without that pencil? What about my <a href="/a-phoenix-a-dragon-and-lots-of-humanoids-designs-from-the-last-two-months">art</a>? I suppose I can’t know for sure, but I doubt much would change. Pencils only mark what you tell them to mark, erase what you tell them to erase. They can’t tell you the answer or finish the story; that’s something you do. Besides some negligible improvements to quality-of-life, the pencil itself doesn’t do much of anything. </p>
<p>I was hoping that after so many months using the same pencil, I would gain some profound insight, as if the pencil would reveal some previously unknown truth. I waited, diligently recording my thoughts and observations through this single instrument. I’ve carried it in my bag or on my person during every waking moment. Today, I’m writing this story because that day has finally come. I now know the truth. After 500 days, I’ve finally learned that it’s just a pencil.</p>
]]></content>
  </entry>
  <entry>
    <title>The Problem of Anthropomorphization</title>
    <url>/the-problem-of-anthropomorphization/</url>
    <content><![CDATA[<p>Modern AI is pretty great. New systems are advancing at marvelous rates, improving year after year. Unfortunately, this technological progress has led to a very related, very human problem. Humans are treating AI like it’s human. More specifically, humans are anthropomorphizing AI systems, attributing qualities like understanding, intentionality, and empathy to what are essentially glorified math equations.</p>
<p>Anthropomorphizing AI can lead to misunderstandings about the true nature and limitations of these systems. By believing AI is knowledgeable and understanding, humans tend to overestimate AI’s capabilities. They entrust data processing formulas with their emotional needs and nuanced ethical dilemmas, neither of which these tools are equipped to handle. This misplaced trust in algorithms can lead to bad decisions, but more importantly, it shifts blame away from the user and the programmer.</p>
<h2 id="The-Case-of-ELIZA"><a href="#The-Case-of-ELIZA" class="headerlink" title="The Case of ELIZA"></a>The Case of ELIZA</h2><p>ELIZA was an experiment conducted by Joseph Weizenbaum in 1966. ELIZA simulated a Rogerian therapist using very, very simple code. In fact, the bulk of the ELIZA algorithm took only 7 lines of code for me to replicate. Since Rogerian therapists primarily take what the patient says and turn it into a question, a simple procedure does a decent job for the simulation. </p>
<p>Even though ELIZA understands nothing, participants often felt a close, empathetic connection with the program. Weizenbaum’s own secretary allegedly asked Weizenbaum to leave the room when talking to ELIZA. Users told ELIZA their problems and feelings, projecting human traits onto the not-at-all-human program.</p>
<p>ELIZA is a standout case when it comes to anthropomorphization. In fact, despite being orders of magnitude simpler, it outperformed GPT-3.5 in a Turing Test. To clarify, this program from the 1960s is better at pretending to be human than the 175 billion parameter behemoth from OpenAI.</p>
<h2 id="Nice-to-meet-you-I’m-Anti-ELIZA"><a href="#Nice-to-meet-you-I’m-Anti-ELIZA" class="headerlink" title="Nice to meet you, I’m Anti-ELIZA"></a>Nice to meet you, I’m Anti-ELIZA</h2><p>To underscore the absurdity of attributing true understanding to AI, I would like to introduce you to <a href="/anti-eliza">Anti-ELIZA</a>. Anti-ELIZA starts conversations like ELIZA, using standard Rogerian therapy tactics. However, as the conversation progresses, Anti-ELIZA gradually shifts to reminding the user that ELIZA is just a few lines of code and incapable of understanding anything. </p>
<p>By transitioning from seeming empathy to blunt reminders that the program isn’t conscious, Anti-ELIZA highlights the ease with which humans overestimate AI systems. Regardless of how convincing a conversation with AI like ELIZA may seem, the algorithm on the other side is devoid of sentience, comprehension, and emotion.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://web.stanford.edu/class/cs124/p36-weizenabaum.pdf">ELIZA, Joseph Weizenbaum</a></li>
<li><a href="https://en.wikipedia.org/wiki/ELIZA">ELIZA Wikipedia Page</a></li>
<li><a href="https://www.ncbi.nlm.nih.gov/books/NBK589708/">Rogerian Therapy</a></li>
<li><a href="https://arxiv.org/abs/2310.20216">ELIZA Beat GPT-3.5 in a Turing Test</a></li>
</ol>
<h2 id="The-ELIZA-Algorithm"><a href="#The-ELIZA-Algorithm" class="headerlink" title="The ELIZA Algorithm"></a>The ELIZA Algorithm</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">respond</span>(<span class="params">self, statement</span>):</span><br><span class="line">    <span class="keyword">for</span> pattern, responses <span class="keyword">in</span> self.patterns:</span><br><span class="line">        <span class="keyword">match</span> = re.search(pattern, statement.strip(<span class="string">&quot; .!?&quot;</span>), re.IGNORECASE)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">            response = random.choice(responses).<span class="built_in">format</span>(*<span class="keyword">match</span>.groups())</span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">    <span class="keyword">return</span> self.default</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>The Test Tree</title>
    <url>/the-test-tree/</url>
    <content><![CDATA[<img src="/images/test_tree.png" alt="Test Tree, by Ronik Bhaskar.">

<hr>
<p>I think, to some extent, we are all afraid of tech companies stealing our data. It’s most evident when we’re talking about something, like needing a new coffee table, and suddenly our feeds are covered in ads for coffee tables. This fear manifests itself in other ways too, from facial recognition working a bit too well to AIs that seem to have read the entire internet. It’s a justified fear. Data theft and data abuse pose real, personal risks to almost everyone. For me, however, data theft is not just a personal risk; it’s an occupational hazard.</p>
<p>In my work, I spend a lot of time testing AI or AI-related tools. Most of the time, those tools are internal, like <a href="https://glaze.cs.uchicago.edu/webglaze.html">Glaze</a>, so I don’t have to worry about my data being misused. In a recent <a href="https://arxiv.org/abs/2402.03214">project</a>, though, I had to test commercial products, and I had no control over how my data was used. </p>
<p>Early in the project, as I was doing some initial experiments, I realized I didn’t have any images I could safely feed AI. They were all photos of either people or places in my life, and those seemed a bit too personal. So, I pulled out my phone and used my finger to draw a quick tree. It took about two minutes, and it didn’t look very good, but I had no attachment to it, and I was more than happy to feed it to some monstrous training datasets. </p>
<p>And so, I did. I ran countless experiments with that tree, testing different tools and making strange modifications. I even began using it when privacy wasn’t a concern. It has become an inside joke with people in the lab just how much I use that tree. Honestly, I can’t help it. That tree has worked with me through long nights and intense debugging sessions. It’s gone through every experimental pipeline I’ve built. My work would not be the same without it.</p>
<p>The unfortunate reality is that this tree, with so much personal value, is now sitting in some massive training datasets, waiting to be misused by tech companies. All that testing has finally caught up with me. I tried not to use personal data when testing these tools, but the data I was using became personal. And now, it’s not just gone. It’s everywhere. Any tech company that has ever touched this image has full access to it.</p>
<p>Ultimately, I think this is for the best. The important thing was never the tree being secret. Its presence everywhere means the protection of so many images that could have taken it’s place. Its purpose is to be stolen, to be used, to be a waste of space in a sea of sensitive data. In that way, it was never mine to begin with. It’s meant for everyone, and if you’re looking for your own test image, maybe it can be yours too.</p>
]]></content>
  </entry>
  <entry>
    <title>Using Math to Beat a Video Game</title>
    <url>/using-math-to-beat-a-video-game/</url>
    <content><![CDATA[<p>A relative of mine often plays this game called Word Connect. In Word Connect, you connect tiles with letters to make words, and you have a fixed list of words you create. The challenge arises when you just can’t figure out what word to make. Whenever this happens, my relative will ask me for help. As a native English speaker, I can usually think of some obscure words to solve the puzzle, but not always. Occasionally, I’ll sit with the letters swirling around my head for hours, just trying to come up with something. My relative plays the game mostly to practice English, so they don’t care about their score.</p>
<p>With this in mind, I decided to start <del>cheating</del> using math. To do this, I established a clearer objective. We start with a set of letters <em>S</em> and the length of the target word <em>len(w)</em>, and using those, we need to reconstruct the target word <em>w</em>. The easiest way to do this is just to iterate through every English word and check if it uses only the letters in <em>S</em>, but that’s too easy. For the sake of the challenge, I wanted to pretend like there were super high volumes of English words, and iterating through strings was slow. Under these conditions, I needed a better method. I needed a smarter method.</p>
<p>I started by getting rid of unnecessary information that was limiting performance. Words are always spelled in order. You would never write “aegm” when using the word “game” because that’s just incorrect. However, if we’re checking to see whether words can be constructed from a set of letters, order does not matter. Knowing this, I created a simple encoding that only captures the letters in a word. It does not care about position or frequency. The way I did this was through 26-bit binary numbers. Each digit represents a character, and if the character is present in the word, then the corresponding digit is marked as a 1. For example,</p>
<p>$$\text{“add”} \rightarrow 1001$$</p>
<p>In this instance, the digit on the right represents “a”, which is a 1. Moving to the left, the digits for “b” and “c” are both 0 because they aren’t present in “add”. Finally, the digit for “d” is a 1. After that, it’s just zeros, so I’m not showing them. As you’ll notice, “d” is marked with a 1 even though there are two “d”s. The encoding doesn’t take frequency into account because it’s not necessary. We can check for frequency after shortlisting words if needed.</p>
<p>Along with our encoding, we’ll need to use a special property called the Hamming weight. The Hamming weight counts the number of 1’s in a bitstring, so the Hamming weight of 1001 is 2. Armed with our new encodings and Hamming weights, we can very easily check if a given word can be constructed from our list of characters. Our target word <em>w</em> can be constructed from <em>S</em> if and only if the following equation is true.</p>
<p>$$ H \left (\phi \left ( S \right ) \right ) - H \left (\phi \left ( w \right ) \right ) &#x3D; H \left (\phi \left ( S \right ) \oplus \phi \left ( w \right ) \right ) $$</p>
<p>Essentially, the difference in Hamming weights between <em>S</em> and <em>w</em> should be the same as their combined Hamming weight if we remove all the characters in common. There are very efficient methods for computing Hamming weights, and given our limited size of 67 million possible encodings, we could simply create a lookup table for each one with little memory impact. Additionally, the encodings <em>ϕ</em> for every English word can be pre-computed, and the encoding for <em>S</em> only needs to be computed once. We still need to iterate through the list of words, but each iteration will be significantly faster.</p>
<p>Using this method, along with some heuristics to limit the number of generated solutions, I was able to find Word Connect answers almost instantly. To test it out, I asked my relative what they were stuck on, and we solved the level with ease. The demonstration was super fun, so we decided to play another level. As we played, making words with digital scrabble tiles, we never ended up using the search algorithm. The program just stayed open on my laptop, until after a few minutes, it went to sleep.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://en.wikipedia.org/wiki/Hamming_weight">Hamming weight</a></li>
<li><a href="https://en.wikipedia.org/wiki/Hamming_distance">Hamming distance</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>What is Gibberish?</title>
    <url>/what-is-gibberish/</url>
    <content><![CDATA[<p>Gibberish. Jibber-jabber. Gobbledygook. They’re all words for the same idea: nonsense speech. When someone is speaking gibberish, they make absolutely no sense. You can’t derive any meaning from their words. Despite the excessive amount of language being used, whether actual words or just random syllables, there is no information being conveyed. Even the message, “there is no information being conveyed” is not conveyed through gibberish. Gibberish is meaningless, and I want to know how.</p>
<p>How is it possible to communicate nothing through your use of language? Even in the most convoluted scenarios, sequences of words always seem to carry some meaning. Take, for example, Shakespeare’s sonnets. For so many teenagers sitting in English class, Shakespeare’s sonnets are nothing but 400-year-old word vomit, yet those sonnets have shared beautiful stories to countless ears. Despite his penchant for inventing new words, Shakespeare wasn’t producing gibberish. Far from it, his works are literary masterpieces. Either that or someone is paying a lot of money to force teenagers to read his works for no reason.</p>
<p>I don’t think gibberish is characterized by how outlandish the speech seems. Like with Shakespeare, most speech is only meaningful for the intended audience. Normal people listening to legal or medical jargon would have no idea what it means, yet legal and medical jargon are entirely meaningful. It seems that in order to produce meaningless speech, you must produce speech that has no possible audience. If there is no one that can extract meaning from the speech, then it must be meaningless.</p>
<p>Consider the other side of this. Any speech that has an audience is meaningful, and given how much has been said over so many centuries, meaningful speech must have some relatively high probability of aligning with things that have already been said. By the contrapositive, any speech that has a low probability of aligning with things that have been said before is likely meaningless. </p>
<p>From a practical perspective, producing improbable speech may seem like a difficult task, but with the advent of LLMs, this becomes much easier. Modern LLMs trained on the majority of the readable internet are essentially fancy probability distributions of existing text. Unfortunately, asking ChatGPT to produce improbable speech wouldn’t work, because it must produce high-probability speech by default. Just to be sure, I tested this, and it basically came up with a list of silly nouns, mostly animals, food, and space stuff, but that’s not meaningless enough, since it’s a vaguely coherent list. Instead, I modified the behavior of GPT-2 to produce low-probability text while still sticking to English, kinda. I started with the seed, “The following is gibberish:”. Here’s what it came up with.</p>
<p>The following is gibberish:iability interior markup markup Starship markup Starshipnever Afghansaviouraviour pastenever proclamation Netherlands circumstance Starship Computingaviour bould Jackie Lady Lady Lady daytime Lady Lady pulmonary drill Harbaugh forcefully partnering dissu disciplined contradict Harbaugh dissuclaimed 323 Afghanskeyes Narr interior Weather Cookies Cookies Cookies Cookies Cookies Cookies</p>
<p>I still have to iron out some kinks, but I do think this is a promising start. My working theorem on meaningless speech will hopefully lead to the completion of GibberishGPT, because the world clearly needs more useless LLMs.</p>
]]></content>
  </entry>
  <entry>
    <title>About Me</title>
    <url>/about/index.html</url>
    <content><![CDATA[<style>
.profile-image-ronik {
    width: min(max(50%,14rem),100%)!important;
    margin: 1rem;
    margin-top: 0;
    margin-right: 0;
    float: right!important;
}
</style>

<img src="ronik.jpg" class="profile-image-ronik" alt="Ronik looking up at a plant."> 

<p>More details in my <a href="/about/Ronik%20Bhaskar%20CV%20Redacted.pdf">CV</a>.</p>
<p>I am a 0th year PhD student at the University of Chicago. I work in the <a href="https://sandlab.cs.uchicago.edu/index.html">SAND Lab</a> where I’m fortunate to be co-advised by Prof. <a href="http://people.cs.uchicago.edu/~htzheng/">Heather Zheng</a> and Prof. <a href="http://people.cs.uchicago.edu/~ravenben/">Ben Y. Zhao</a>. I am no longer in the terrifying process of applying to CS PhD programs.</p>
<p>I’m broadly interested in security and privacy with a recent focus on adversarial machine learning. If you’re a digital artist, or you’re interested in generative AI, I recommend checking out <a href="https://glaze.cs.uchicago.edu/">Glaze</a>. I’m proud to work on this project and hopefully similar ones in the future.</p>
<p>While I am relatively new to research, I have made some observations. Computer security research exists in a delicate ethical space. Every discovered vulnerability is an opportunity for attack, but it is also a potential warning. Every defense offers protection to some group, but it also risks unintended side effects and consequences for future technology. As I continue my academic journey, I hope to learn how to meaningfully consider the implications of my work, regardless of the field I research.</p>
<h2 id="Contact-Me"><a href="#Contact-Me" class="headerlink" title="Contact Me"></a>Contact Me</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># My email:</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cmJoYXNrYXJAdWNoaWNhZ28uZWR1Cg==&quot;</span> | <span class="built_in">base64</span> --decode</span><br></pre></td></tr></table></figure>

<!-- I was never the creative one or the artistic one. I was always "that guy that's good at math." -->

<!-- Then COVID hit. -->

<!-- In December of 2020, a welcoming group of friends adopted me into their Discord server. We joked about building more friends, but some part of me kept whispering, *Maybe that's not a bad idea.* So, that month, I built a working [discord bot](/projects/discord_bot). His name was Igor, and despite the lack of functionality, he was full of life and personality. The server members loved him like a pet.  -->


<!-- A few months later, while chatting about the chaos of life with some filmmakers, they mentioned the butterfly effect. I asked about the origin of the phrase, and a few hours later, I found myself stumbling down a rabbit hole of differential equations and strange attractors. A week later, I recreated Lorenz's Butterfly Effect—the beginnings of the [math art](/projects/math-art) project. -->

<!-- This continued incessantly. Someone would throw out a phrase or idea, and I would run with it. As I continued creating, I started finding my voice in code. Despite everything I made, it took me months to finally call myself creative, which would have been impossible on my own. My friends reminded me that I was more than test scores and good grades, and I hope they know how grateful I am. -->

<!-- Without the people closest to me providing constant support and inspiration and critiques, I wouldn't still be creating. If that's you, thanks.  -->

<!-- *Add to the [dialogue](/chat), and become part of my story.* -->]]></content>
  </entry>
  <entry>
    <title>Full Stack Chat App</title>
    <url>/projects/chat.html</url>
    <content><![CDATA[<p>Chat with me <a href="/chat">here</a>. (You’ll know it’s me because my name is <strong>bold</strong>.)</p>
<h2 id="Designing-the-UI"><a href="#Designing-the-UI" class="headerlink" title="Designing the UI"></a>Designing the UI</h2><p>I don’t create in a vacuum. The people around me drastically influence my creations. Our conversations feel like dialogue in a script. There’s a purpose to everything being said. It’s driving the plot somewhere, and I would never reach the end without their help. </p>
<p>My chat app doesn’t look like Messages or WhatsApp or Slack or Discord because I don’t see it as a chat app. It’s a continuation of the dialogue happening all around me, which is why <strong>I built the chat app to look like a movie script.</strong> The header has an act number, the location is specified, we get a general description, and the rest that follows is the dialogue.</p>
<h2 id="Engineering-the-App"><a href="#Engineering-the-App" class="headerlink" title="Engineering the App"></a>Engineering the App</h2><p>I’m incredibly grateful for the power and flexibility of GitHub pages (as you can tell by the URL). That being said, the documentation says they only support static sites, or so they claim. Depending on how much functionality you want from the site, you can do user authentication and even have hooks checking for database updates, updating the UI in real-time. </p>
<p><strong>For the backend, I used Google Firebase.</strong> Their free tier, the Spark plan, is incredibly powerful, and if you’re getting enough traffic to exceed its limits, you have the demand to monetize your product. I don’t expect heavy traffic, so the Spark plan is enough for me.</p>
<p>Firebase allows for for Google Authentication, along with plenty of other auth providers. This makes it mildly more difficult to spam the site with fake accounts, and the authentication redirect keeps auth traffic away from GitHub. It’s a win-win.</p>
<p><strong>For the frontend, I used React.</strong> This isn’t an incredibly intense, so vanilla JS was an option, but React’s libraries wrapping Firebase query snapshots made development much easier. </p>
<p>There are tutorials and articles out there for building apps with React and Firebase, but relevant ones used Firebase v8 instead of v9, which transitions away from the namespacing. Luckily, Firebase’s documentation covers translating v8 into v9.</p>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Anti-ELIZA</title>
    <url>/projects/anti-eliza.html</url>
    <content><![CDATA[<p><em>Conditioning away the human level of trust imparted to AI systems. Inspired by ELIZA. <a href="/anti-eliza/">Test it out.</a></em></p>
<h2 id="The-Problem-of-Anthropomorphization"><a href="#The-Problem-of-Anthropomorphization" class="headerlink" title="The Problem of Anthropomorphization"></a>The Problem of Anthropomorphization</h2><p>Modern AI is pretty great. New systems are advancing at marvelous rates, improving year after year. Unfortunately, this technological progress has led to a very related, very human problem. Humans are treating AI like it’s human. More specifically, humans are anthropomorphizing AI systems, attributing qualities like understanding, intentionality, and empathy to what are essentially glorified math equations.</p>
<p>Anthropomorphizing AI can lead to misunderstandings about the true nature and limitations of these systems. By believing AI is knowledgeable and understanding, humans tend to overestimate AI’s capabilities. They entrust data processing formulas with their emotional needs and nuanced ethical dilemmas, neither of which these tools are equipped to handle. This misplaced trust in algorithms can lead to bad decisions, but more importantly, it shifts blame away from the user and the programmer.</p>
<h2 id="The-Case-of-ELIZA"><a href="#The-Case-of-ELIZA" class="headerlink" title="The Case of ELIZA"></a>The Case of ELIZA</h2><p>ELIZA was an experiment conducted by Joseph Weizenbaum in 1966. ELIZA simulated a Rogerian therapist using very, very simple code. In fact, the bulk of the ELIZA algorithm took only 7 lines of code for me to replicate. Since Rogerian therapists primarily take what the patient says and turn it into a question, a simple procedure does a decent job for the simulation. </p>
<p>Even though ELIZA understands nothing, participants often felt a close, empathetic connection with the program. Weizenbaum’s own secretary allegedly asked Weizenbaum to leave the room when talking to ELIZA. Users told ELIZA their problems and feelings, projecting human traits onto the not-at-all-human program.</p>
<p>ELIZA is a standout case when it comes to anthropomorphization. In fact, despite being orders of magnitude simpler, it outperformed GPT-3.5 in a Turing Test. To clarify, this program from the 1960s is better at pretending to be human than the 175 billion parameter behemoth from OpenAI.</p>
<h2 id="Nice-to-meet-you-I’m-Anti-ELIZA"><a href="#Nice-to-meet-you-I’m-Anti-ELIZA" class="headerlink" title="Nice to meet you, I’m Anti-ELIZA"></a>Nice to meet you, I’m Anti-ELIZA</h2><p>To underscore the absurdity of attributing true understanding to AI, I would like to introduce you to Anti-ELIZA. Anti-ELIZA starts conversations like ELIZA, using standard Rogerian therapy tactics. However, as the conversation progresses, Anti-ELIZA gradually shifts to reminding the user that ELIZA is just a few lines of code and incapable of understanding anything. </p>
<p>By transitioning from seeming empathy to blunt reminders that the program isn’t conscious, Anti-ELIZA highlights the ease with which humans overestimate AI systems. Regardless of how convincing a conversation with AI like ELIZA may seem, the algorithm on the other side is devoid of sentience, comprehension, and emotion.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://web.stanford.edu/class/cs124/p36-weizenabaum.pdf">ELIZA, Joseph Weizenbaum</a></li>
<li><a href="https://en.wikipedia.org/wiki/ELIZA">ELIZA Wikipedia Page</a></li>
<li><a href="https://www.ncbi.nlm.nih.gov/books/NBK589708/">Rogerian Therapy</a></li>
<li><a href="https://arxiv.org/abs/2310.20216">ELIZA Beat GPT-3.5 in a Turing Test</a></li>
</ol>
<h2 id="The-ELIZA-Algorithm"><a href="#The-ELIZA-Algorithm" class="headerlink" title="The ELIZA Algorithm"></a>The ELIZA Algorithm</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">respond</span>(<span class="params">self, statement</span>):</span><br><span class="line">    <span class="keyword">for</span> pattern, responses <span class="keyword">in</span> self.patterns:</span><br><span class="line">        <span class="keyword">match</span> = re.search(pattern, statement.strip(<span class="string">&quot; .!?&quot;</span>), re.IGNORECASE)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">            response = random.choice(responses).<span class="built_in">format</span>(*<span class="keyword">match</span>.groups())</span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">    <span class="keyword">return</span> self.default</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Discord Bot</title>
    <url>/projects/discord_bot.html</url>
    <content><![CDATA[<p>Access the source files <a href="https://github.com/ronikbhaskar/discord_bot">here</a>. </p>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>This project was pivotal to my journey as a maker. I discuss it in my <a href="/about">about page</a>.</p>
<h2 id="Hosting"><a href="#Hosting" class="headerlink" title="Hosting"></a>Hosting</h2><p>Currently, the discord bot is being hosted on Heroku, which has been working really well so far. You get 550 free dyno hours per month without providing any payment information, which is plenty for a single project you can just have running during the day.</p>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><h3 id="Hangman-🔤"><a href="#Hangman-🔤" class="headerlink" title="Hangman 🔤"></a>Hangman 🔤</h3><p>Igor can play one game, and that is Hangman. Here are the commands you can use to play:</p>
<ul>
<li><code>hangman</code> or <code>play hangman</code></li>
<li><code>guess _</code> (ex. <code>/guess a</code>)</li>
<li><code>quit</code> or <code>quit game</code></li>
</ul>
<h3 id="Astronomy-🔭"><a href="#Astronomy-🔭" class="headerlink" title="Astronomy 🔭"></a>Astronomy 🔭</h3><p>Igor seems to have become interested in astronomy. Here are a few things Igor knows:</p>
<ul>
<li><code>iss</code>, <code>location of iss</code>, <code>locate iss</code>, etc.</li>
<li><code>moon phase</code>, <code>phase of moon</code>, etc.</li>
<li><code>picture of the day</code>, <code>astro pic</code>, <code>photo of the day</code>, etc.</li>
</ul>
<h3 id="Dictionary-📚"><a href="#Dictionary-📚" class="headerlink" title="Dictionary 📚"></a>Dictionary 📚</h3><p>In an effort to expand the server’s vocabulary, Igor has access to some dictionaries:</p>
<ul>
<li><code>define _____</code> for dictionary.com</li>
<li><code>udefine _____</code> for urban dictionary</li>
</ul>
<h3 id="Chat-💬"><a href="#Chat-💬" class="headerlink" title="Chat 💬"></a>Chat 💬</h3><p>Igor doesn’t know how to say much. That’s it, no caveat.</p>
<ul>
<li>just @ mention Igor in your message and maybe you’ll get a response</li>
</ul>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Discord Scraper</title>
    <url>/projects/discord_scraper.html</url>
    <content><![CDATA[<p>Access the source files <a href="https://github.com/ronikbhaskar/discord_scraper">here</a>. </p>
<h2 id="Disclaimer"><a href="#Disclaimer" class="headerlink" title="Disclaimer"></a>Disclaimer</h2><p>Botting your Discord account violates their Terms of Service. I do not use this scraper, nor will I, and I recommend you never use it either. This is solely for educational purposes.</p>
<h2 id="Theoretical-Use-Cases"><a href="#Theoretical-Use-Cases" class="headerlink" title="Theoretical Use Cases"></a>Theoretical Use Cases</h2><p>Hypothetically speaking, wouldn’t it be cool to go through your server’s chat history, run the text through a Markov Chain generator, and spit out some nonsense for you all to laugh at? Just a thought. It would be tedious, copying every message by hand, but it’s definitely doable, so that’s how you should do it. By hand.</p>
<h2 id="Getting-your-Access-Token"><a href="#Getting-your-Access-Token" class="headerlink" title="Getting your Access Token"></a>Getting your Access Token</h2><p>Now, having access to the Discord API requires an Access Token, and no one would know how to get their access token. I mean, who is going to open Discord in Chrome, open the inspector, switch to mobile&#x2F;tablet display, go to the Application tab, find the sidebar section labeled Storage, select <a href="https://discord.com/">https://discord.com</a> from the Local Storage dropdown, search token, and copy the value from the Key-Value pair? That’s a ridiculous number of hoops to jump through, and I can’t imagine anyone figuring that out on their own. </p>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Projects</title>
    <url>/projects/index.html</url>
    <content><![CDATA[<h2 id="Research-Projects"><a href="#Research-Projects" class="headerlink" title="Research Projects"></a>Research Projects</h2><details>
<summary>
<b>Glaze</b>
</summary>
<ul>
    <li><a href="https://glaze.cs.uchicago.edu">Overview</a></li>
    <li><a href="https://glaze.cs.uchicago.edu/downloads.html">Download</a></li>
    <li><a href="https://glaze.cs.uchicago.edu/webglaze.html">Most Excited About This</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>LLM Testbed</b>
</summary>
<ul>
    <li><a href="https://github.com/zainsarwar865/LLMTestBed">GitHub</a></li>
</ul>
</details>
<br />

<style>
.display-image {
    width: min(max(25%,7rem),100%)!important;
    margin: 1rem;
    margin-top: 0;
    margin-right: 0;
    float: right!important;
    border-radius: 10%;
}
</style>

<h2 id="Independent-Projects-With-Websites"><a href="#Independent-Projects-With-Websites" class="headerlink" title="Independent Projects With Websites"></a>Independent Projects With Websites</h2><details>
<summary>
<b>Optimal Bread Slicing</b>
</summary>
<ul>
    <li><a href="/optimal-bread-slicing">Website</a> (Mobile Compatible)</li>
    <li><a href="/projects/optimal_slicing.pdf">Full Paper</a></li>
    <li><a href="https://youtu.be/R6SYxpiGGJ0?si=Ipt-r0DK1HKfHJa3">Video Explanation (Kinda)</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>A Linear Transformation Visualizer</b>
</summary>
<ul>
    <li><a href="/linear_transformation_visualizer">Website</a> (Not Mobile Compatible)</li>
    <li><a href="/projects/linear_transformation_visualizer">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/linear_transformation_visualizer">GitHub</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>A Text Generator Using Markov Chains</b>
</summary>
<ul>
    <li><a href="/text_generator">Website</a> (Mobile Compatible)</li>
    <li><a href="/projects/text_generator">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/text_generator">GitHub</a></li>
    <li><a href="https://github.com/ronikbhaskar/markov_text_generation">Original Python Project</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>The Archives Project</b>
</summary>
<ul>
    <li><a href="/archives/">Table of Contents</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>A Recreation of Ultimate Tic-Tac-Toe</b>
</summary>
<img src="misc_images/ultimate_tic_tac_toe_game.png" class="display-image" alt="A game of ultimate tic tac toe."> 
<ul>
    <li><a href="/ultimate_tic_tac_toe">Website</a> (Mobile Compatible)</li>
    <li><a href="/projects/ultimate_tic_tac_toe">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/ultimate_tic_tac_toe">GitHub</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>Anti-ELIZA</b>
</summary>
<ul>
    <li><a href="/anti-eliza">Website</a> (Mobile Compatible)</li>
    <li><a href="/projects/anti-eliza">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/anti-eliza">GitHub</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>A Full Stack Chat App with User Authentication</b>
</summary>
<ul>
    <li><a href="/chat">Website</a> (Mobile Compatible)</li>
    <li><a href="/projects/chat">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/chat">GitHub</a></li>
</ul>
</details>
<br />


<!-- <details>
<summary>
<b>Text-Based Game to Teach Oracles (CW: violence, kidnapping, murder)</b>
</summary>
<ul>
    <li><a href="/oracle_society/">Website</a> (NOT Mobile Compatible)</li>
    <li><a href="/projects/oracle_society">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/oracle_society">GitHub</a></li>
</ul>
</details>
<br /> -->

<h2 id="Independent-Projects-Without-Websites"><a href="#Independent-Projects-Without-Websites" class="headerlink" title="Independent Projects Without Websites"></a>Independent Projects Without Websites</h2><details>
<summary>
<b>I Made My Own Programming Language</b>
</summary>
<ul>
    <li><a href="https://sigbovik.org/2023/proceedings.pdf#page124">Published in the SIGBOVIK Proceedings 2023</a></li>
    <li><a href="/projects/PizzaLang.pdf">Full Paper (Pre-Print)</a></li>
    <li><a href="https://github.com/TheEasyLemon/PizzaLang">GitHub</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>A Personal Database for Literature</b>
</summary>
<ul>
    <li><a href="/projects/literature-db">Summary</a></li>
    <li><a href="/ex-libris-select-poems-by-emily-dickinson">Archive Entry</a></li>
    <li><a href="https://github.com/ronikbhaskar/literature-db">GitHub</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>Inventing a Game, Then Building a Bot to Play It Perfectly</b>
</summary>
<ul>
    <li><a href="/projects/forest-algorithm">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/forest-algorithm">GitHub</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>Some Pretty GIFs Made With Differential Equations</b>
</summary>
<img src="math-art-gifs/static_aizawa.gif" class="display-image" alt="The Aizawa Attractor."> 
<ul>
    <li><a href="/projects/math-art">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/math-art">GitHub</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>Hiding Secret Messages in Images</b>
</summary>
<img src="steganography_pngs/image_with_a_secret_message.png" class="display-image" alt="A pretty color gradient."> 
<ul>
    <li><a href="/projects/steganography">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/steganography">GitHub</a></li>
    <li>Can you find the secret message in that image?</li>
</ul>
</details>
<br />

<details>
<summary>
<b>A Discord Bot Named Igor</b>
</summary>
<ul>
    <li><a href="/projects/discord_bot">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/discord_bot">GitHub</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>"Hacking" Obsidian and Making it a Markdown Editor</b>
</summary>
<ul>
    <li><a href="/projects/obsidian-editor">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/obsidian-editor">GitHub</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>A Discord Scraper That Definitely Doesn't Violate Terms of Service</b>
</summary>
<ul>
    <li><a href="/projects/discord_scraper">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/discord_scraper">GitHub</a></li>
</ul>
</details>
<br />

<details>
<summary>
<b>A Chrome Extension for the Pomodoro Technique</b>
</summary>
<ul>
    <li><a href="/projects/tomato_timer">Summary</a></li>
    <li><a href="https://github.com/ronikbhaskar/tomato_timer">GitHub</a></li>
</ul>
</details>
<br />]]></content>
  </entry>
  <entry>
    <title>Literature DB (WIP)</title>
    <url>/projects/literature-db.html</url>
    <content><![CDATA[<p>The code can be found <a href="https://github.com/ronikbhaskar/literature-db">here</a>.</p>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>Literature DB (LitDB) is a lightweight literature database that allows users to store and manage texts. Entries can be added manually or by scraping websites. Each entry maintains simple, bibliographic data. Separate text files are used for storing the contents of the text and an associated Markdown file for notes. Texts can be rendered as HTML for easy reading, and texts can be quickly searched using a multithreaded search for both substrings and regex.</p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Clone the project and install the requirements.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ronikbhaskar/literature-db</span><br><span class="line"><span class="built_in">cd</span> literature-db</span><br><span class="line"><span class="comment"># create an environment if you so choose</span></span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>Currently, there is no user interface, but the functions have been simplified enough for Python itself to be the interface. Begin by running the main script with the REPL flag.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -i main.py</span><br></pre></td></tr></table></figure>

<p>The database can be accessed as the variable <code>litdb</code>. </p>
<h3 id="Adding-Entries"><a href="#Adding-Entries" class="headerlink" title="Adding Entries"></a>Adding Entries</h3><p>To add an entry from a URL, use:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>litdb.scrape(url)</span><br></pre></td></tr></table></figure>

<p>This will autopopulate as many fields as possible. It also generates a notes template.</p>
<h3 id="Searching-for-Entries"><a href="#Searching-for-Entries" class="headerlink" title="Searching for Entries"></a>Searching for Entries</h3><p>To search for entries, use:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>search(term)</span><br></pre></td></tr></table></figure>

<p>where <code>term</code> is either a substring or a regex. <code>re</code> is already imported, so you can run <code>search(re.compile(...))</code> with no additional code.</p>
<h3 id="Removing-Entries"><a href="#Removing-Entries" class="headerlink" title="Removing Entries"></a>Removing Entries</h3><p>To remove an entry, use:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>litdb.remove_cascade(doc_id)</span><br></pre></td></tr></table></figure>

<p>where <code>doc_id</code> is the numeric id of the entry. This is also the name of the directory in which the text is stored. Use <code>remove_cascade</code> instead of <code>remove</code> to get rid of the associated text files.</p>
<h3 id="Rendering-Entries"><a href="#Rendering-Entries" class="headerlink" title="Rendering Entries"></a>Rendering Entries</h3><p>To render an entry as HTML, use either of the following:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>render_doc_id(doc_id)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>render(entry) <span class="comment"># entry must be of the Entry class, not Document</span></span><br></pre></td></tr></table></figure>

<p>The function will print the location of the saved <code>index.html</code>, though it can also be found in the <code>litdb</code> directory.</p>
]]></content>
  </entry>
  <entry>
    <title>Inventing a Game, Then Building a Bot to Play It Perfectly</title>
    <url>/projects/forest-algorithm.html</url>
    <content><![CDATA[<p>It’s easier to learn how the game works by playing it, so I’ll create a playable version soon (hopefully).</p>
<h2 id="Introduction-to-Forest"><a href="#Introduction-to-Forest" class="headerlink" title="Introduction to Forest"></a>Introduction to Forest</h2><p>I can’t remember the last time I played tic-tac-toe, probably because it ended in a draw. Hoping to bring back the excitement and strategy of the game, I created a variation I call “Forest.” The name comes from “four-by-four torus tic-tac-toe” being reduced to “fourus t.” which sounds like “forest” when you say it out loud. The game is tic-tac-toe played on a 4x4 grid, but rather than playing on a flat plane, the game is played on the surface of a donut—a torus—which offers some interesting opportunities for win cases. It’s a blast to play, much more fun than tic-tac-toe, but now I have a new problem. I don’t have a good strategy. There are a finite set of board states, so theoretically, we could map out every game and create a perfect strategy.</p>
<p>Theoretically.</p>
<h2 id="Turning-Theory-into-Practice-My-Strategy"><a href="#Turning-Theory-into-Practice-My-Strategy" class="headerlink" title="Turning Theory into Practice (My Strategy)"></a>Turning Theory into Practice (My Strategy)</h2><p>If you were to map out every possible decision on a Forest board, you would have roughly 30 trillion decisions. Once we map out this decision tree once, it’ll be done, and we won’t have to do it again. The problem arises when you want to map out the tree once. It’s just too big to do in any reasonable amount of time. I won’t settle for anything less than perfect, so I will create the tree, but I’ll have to figure out how to do it faster.</p>
<p>In my view, there are two ways to optimize a procedure. Either you do the same procedure, but faster, or you get clever with your work. With the first option, it’s like walking a lap versus sprinting. You use efficient encodings, reuse similar chunks of memory, and perform faster operations, but if you were to describe how the algorithm works at a high level, it would sound the same before and after the optimization, “I go all the way around the track.” With the second option, it’s like walking a lap versus walking halfway then cutting across the field directly back to the start. You fundamentally change how you approach the problem, whether translating the problem, taking advantage of certain assumptions, or just doing less work.</p>
<p>Given my previous experiences with decision trees, I started with trying to do less work. While the decision tree has 30 trillion branches, the total number of possible board states is less than 4.3 million, which is still a lot, but a substantial reduction. This means the decision tree is repeating states, which makes sense. As an example, consider these two games of tic-tac-toe (not Forest):</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  |  |        X |  |        X |  |        X |  | X</span><br><span class="line">--------      --------      --------      --------</span><br><span class="line">  |  |    --&gt;   |  |    --&gt;   |O |    --&gt;   |O |  </span><br><span class="line">--------      --------      --------      --------</span><br><span class="line">  |  |          |  |          |  |          |  |   </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  |  |          |  | X        |  | X      X |  | X</span><br><span class="line">--------      --------      --------      --------</span><br><span class="line">  |  |    --&gt;   |  |    --&gt;   |O |    --&gt;   |O |  </span><br><span class="line">--------      --------      --------      --------</span><br><span class="line">  |  |          |  |          |  |          |  |   </span><br></pre></td></tr></table></figure>

<p>In both, they reach the same state by the end of the third move, but they start with different decisions, which means they represent separate branches on the decision tree. We could reduce the work we need to do by reusing this state in multiple places on the decision tree. By reusing every repeated state, we can go from the tens of trillions of states to a few million, but we can do less.</p>
<p>After taking nearly a dozen math classes, I think I will forever have equivalence relations drilled into my head. Essentially, equivalence relations are a generalized method for defining equality. They allow you to group together equal elements into fancy buckets called equivalence classes. Since Forest is played on a torus, we can rotate, twist, and mirror the torus, all while preserving the game. As such, transforming the torus in different ways creates equivalent states, and we can let this be our definition of equivalence. To actually generate these equivalent states, I used algebraic representations of the ways you can manipulate a 4x4 torus and generated 128 transformations. With this, we need to check even fewer states, only around 77 thousand. </p>
<p>After all this optimization, I started the program and waited to see some progress. For some reason, my program was only calculating a few optimal moves per second. I know my laptop isn’t necessarily state-of-the-art, but it should be faster than this. I couldn’t reduce the number of states I was checking, so it was time to try the other part of optimization. Just do it faster.</p>
<p>This project was created in Python, as most of my projects are, since it’s the language in which I can think the fastest. Translating my thoughts to Python is second nature at this point, but that doesn’t mean translating Python to machine instructions is particularly efficient. Fortunately, I have a few years of lower-level programming experience, so I started going through my program, trying to consider what operations would be slow or where I might be allocating too much memory, and I found one very clear bottleneck. My lookup table, with its fancy equivalence relation, turned the board into a lookup key, and then the key back into a board. When turning the key into a new board, it created a new board, which meant I was doing dozens of memory allocations just to use a single state for a few operations. To fix this, I reused an old board and overwrote the memory there. </p>
<p>I made a few similar changes, removing redundant data structures and fancy sorting and simplifying to basic arithmetic operations. All of a sudden, my basic minimax implementation was flying, and the program generated a table with all of the optimal moves in 22 seconds.</p>
<h2 id="Reinforcement-Learning-Dawson’s-Strategy"><a href="#Reinforcement-Learning-Dawson’s-Strategy" class="headerlink" title="Reinforcement Learning (Dawson’s Strategy)"></a>Reinforcement Learning (Dawson’s Strategy)</h2><p>While I was working on this, Dawson took a different approach. Rather than using massive lookup space reductions, he turned to Reinforcement Learning with Monte-Carlo Tree Search. I’ll leave him to give an explanation of his process and how he approached this problem.</p>
<h2 id="Two-Will-Enter-Only-One-Will-Leave"><a href="#Two-Will-Enter-Only-One-Will-Leave" class="headerlink" title="Two Will Enter, Only One Will Leave"></a>Two Will Enter, Only One Will Leave</h2><p>Now that we have our working Forest bots, we need to pit them against each other and see how they compare.</p>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Linear Transformation Visualizer</title>
    <url>/projects/linear_transformation_visualizer.html</url>
    <content><![CDATA[<p>Learn a thing or two about linear algebra <a href="/linear_transformation_visualizer">here</a> (or just play with numbers).</p>
<h2 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h2><p>For part of my abstract linear algebra class, we were allowed to build a piece of software related to the course material. We spent so much time looking at grids of numbers and analyzing proofs, but I wanted to <em>see</em> how it all worked. So, I took it upon myself to learn vanilla JavaScript and write a web app capable of letting me see what was happening to the space as I transformed it.</p>
<p>Shoutout to Prof. Lanier.</p>
<h2 id="Engineering-the-App"><a href="#Engineering-the-App" class="headerlink" title="Engineering the App"></a>Engineering the App</h2><p>I followed one tutorial on html and css and just stuck with the color scheme in the tutorial, which is why the screen is a mess of orange and blue.</p>
<p><strong>For the frontend, I used math.js and Plotly.</strong> I wanted to make the project source lightweight, so I looked for libraries with CDNs. Plotly, while used for statistical visualizations, had a 3D mode, and vectors can be plotted as points, so translating the vectors to points &#x2F; segments to plot was not difficult. Math.js gave me access to matrix multiplication and mathematical expression interpretation, which solved the majority of my logic problems immediately.</p>
<p><strong>The linear algebra was simple. The UI wasn’t.</strong> Coming up with pseudo-random methods of generating random matrices with certain constraints was not difficult. The matrix multiplication was already given to me by math.js. Even in my aspirations to embody one-tenth of Desmos’ quality-of-life features, the variable with the slider took little time to get working. </p>
<p>The big issue was responsiveness. The user shouldn’t have to hit “Run” every time they make a change, because you shouldn’t be slowed down by the speed of this tool. As a result, each text area and button and checkbox has a listener to make sure that the visualizer always keeps up with what you write. </p>
<p>And if you write an invalid state, like a matrix with empty fields, the whole visual shouldn’t shut down or change from what you had originally. Maybe you’re just making a quick edit, and that change would distract you. For this reason, if you go from a valid to invalid input state, the visualizer stays at the previous valid state. Intuitively, it makes the most sense, and keeps everything looking clean.</p>
<p>The code is a mess, but it’s there if you want to see it: <a href="https://github.com/ronikbhaskar/linear_transformation_visualizer">https://github.com/ronikbhaskar/linear_transformation_visualizer</a></p>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Math Art</title>
    <url>/projects/math-art.html</url>
    <content><![CDATA[<p>I discuss this project in my <a href="/about">about page</a>. The source code, along with an explanation of the project, can be found <a href="https://github.com/ronikbhaskar/math-art">here</a>.</p>
<h2 id="Quick-Overview"><a href="#Quick-Overview" class="headerlink" title="Quick Overview"></a>Quick Overview</h2><p>The butterfly effect says that small changes can lead to drastically different results. This is the foundation of chaos theory. Sometimes, that chaos results in stunning patterns called strange attractors, and I’ve done my best to capture them here. It’s also what you see on the landing page of my site.</p>
<h2 id="Strange-Attractors"><a href="#Strange-Attractors" class="headerlink" title="Strange Attractors"></a>Strange Attractors</h2><img src="math-art-gifs/static_halvorsen.gif" alt="The Halvorsen Attractor" />

<br/>

<img src="math-art-gifs/static_lorenz.gif" alt="The Lorenz Attractor" />

<br/>

<img src="math-art-gifs/static_aizawa.gif" alt="The Aizawa Attractor" />

<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Turning Obsidian into a Markdown Editor</title>
    <url>/projects/obsidian-editor.html</url>
    <content><![CDATA[<p>This file was created using <code>obsidian.py</code>. The source code is available <a href="https://github.com/ronikbhaskar/obsidian-editor">here</a>.</p>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>I have no issues with what Obsidian is. My only complaint is with what it <em>isn’t</em>: a Markdown editor.</p>
<p>I know you can edit Markdown in Obsidian, but that’s not what I’m talking about. I mean editing <em>any</em> .md file in Obsidian. Right now, you’re limited to your vault, which makes sense, since Obsidian is a note-taking app–a second brain app. Everything you need is right there in your vault. The thing is, I don’t really care for the whole “second brain” thing. I tried it for a bit, but it really didn’t stick. It’s a nice place to put notes if I don’t know where else to put them, but sometimes I just wanna edit a Markdown file with Obsidian’s QoL. </p>
<h2 id="The-Hack"><a href="#The-Hack" class="headerlink" title="The Hack"></a>The Hack</h2><p>I don’t call this a hack to be arrogant or even facetious. I just mean I wanted to make technology do something it wasn’t created to do. I wanted to turn Obsidian into an editor. </p>
<p>There are a few approaches to this method. The first that probably comes to most people’s minds is to edit Obsidian’s view of your file system so it thinks your whole computer is a vault. I didn’t do that, but that would be really cool. Instead, I just wrote a script that copies your .md file into your vault and copies it back when you’re done. Definitely not the most elegant solution, but it works for my purposes.</p>
<h2 id="Setbacks"><a href="#Setbacks" class="headerlink" title="Setbacks"></a>Setbacks</h2><p>The issues with this project were unrelated to the actual manipulation of the vault. Instead, I realized that in order to take advantage of Obsidian’s features, I would have to engineer changes on top of them to make them compatible with any mainstream Markdown editor. </p>
<p>In particular, Obsidian’s image linking is fantastic, especially combined with their drag-and-drop feature for images. The problem is that Markdown doesn’t usually support images linked like this: ![[image.img]]</p>
<p>So, I had to find all the instances of images like those, reformat them, and when copying the Markdown, copy the linked files as well. While I did learn a bit more about regex in the process, the solution is quite messy and works under fairly strong assumptions. Nevertheless, it works.</p>
<h2 id="Improvements"><a href="#Improvements" class="headerlink" title="Improvements"></a>Improvements</h2><p>Image-linking isn’t the only useful feature in Obsidian. Making more of these QoL standards available through this script means I can take full advantage of the tools Obsidian offers. For example, linking pdfs, better tables, and tags would all be fantastic if I could integrate &#x2F; hide them seamlessly with this script. Or, I could add <code>scp</code> support so I can use this on ssh servers. </p>
<p>I probably won’t do any of that that, since I don’t really like doing more than making quick prototypes to prove that I can. Who knows? Maybe some day.</p>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>The Oracle Society</title>
    <url>/projects/oracle_society.html</url>
    <content><![CDATA[<p>CW: violence, kidnapping, murder.</p>
<p>Play the game <a href="/oracle_society/">here</a>.</p>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>Our final project for introductory quantum computing had us create an educational artifact to teach a quantum concept. I chose oracles, which I had the pleasure of studying in complexity theory. Oracles function as a sort of answer machine. They know things that you want to know, but you don’t know how they know them. By asking well-formed questions, you can extract relevant information from an oracle. In general, you want to use as few questions as possible. </p>
<h2 id="Gameplay"><a href="#Gameplay" class="headerlink" title="Gameplay"></a>Gameplay</h2><p>Please note that I constructed this narrative very late at night during finals week. It is not cohesive.</p>
<p>You are a detective&#x2F;hostage negotiator that has discovered a method of communication to a serial kidnapper. Your job is to free the hostages, but doing so requires you to play a twisted game devised by the kidnapper. There are a select number of questions you can use to play the game, and each one will be answered truthfully. Beat the kidnapper’s riddle, and they will release the hostages. If your guessing strategy isn’t efficient enough, hostages will start dying. Try not to let too many die. Good luck!</p>
<h2 id="Issues"><a href="#Issues" class="headerlink" title="Issues"></a>Issues</h2><p>Note: I will not resolve these issues, but keep them in mind if you decide to play.</p>
<ol>
<li><p>This game is not mobile compatible.</p>
</li>
<li><p>Skipping text too fast can cause buttons to appear before they should.</p>
</li>
<li><p>The transitions between deaths don’t allow you to pause the text.</p>
</li>
<li><p>I didn’t playtest the final version of the game enough.</p>
</li>
</ol>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Steganography</title>
    <url>/projects/steganography.html</url>
    <content><![CDATA[<h2 id="Find-the-difference-between-these-two-images"><a href="#Find-the-difference-between-these-two-images" class="headerlink" title="Find the difference between these two images"></a>Find the difference between these two images</h2><style>
table, th {
    border: none!important;
}
</style>

<table>
<thead>
<tr>
<th><img src="steganography_pngs/image_with_a_secret_message.png"></th>
<th><img src="steganography_pngs/normal_image.png"></th>
</tr>
</thead>
</table>
<p>As enticing as it may be to give up, don’t be discouraged. When filmmaker and literary visionary Michael Scott faced a similar problem, he never accepted defeat. Then again, he also never made any progress. Despite Michael’s failures, you <em>can</em> succeed in this seemingly impossible task using the power of STEGANOGRAPHY.</p>
<blockquote>
<p>“Steganography is the practice of concealing a message within another message or a physical object.” (Wikipedia definition)</p>
</blockquote>
<h2 id="Least-Significant-Bit"><a href="#Least-Significant-Bit" class="headerlink" title="Least Significant Bit"></a>Least Significant Bit</h2><p>Least significant bit is an image steganography technique that conceals messages inside images. Despite the complicated sounding name, you can understand the concept in the next 60 seconds. Ready?</p>
<p>Consider the number 1,000,000. If you change that to 1,300,000, that seems like a noticeable change, but 1,000,003 is practically the same. By changing the least significant digit, we can encode information in a number without drastically changing its value. The red, green, and blue image channels give numerical values for RGB, and they don’t change much when you add or subtract 1 from them. By changing 255 to 254 or 120 to 121, we can encode information in the RGB values of pixels by checking whether it’s odd or even. Putting those together, we get a series of 1’s and 0’s that we can turn into readable text.</p>
<p>Great, now you know what’s going on, but how do you actually encode and decode messages practically? All you need to do is create a main function in <code>lsb.c</code> and add the following lines:</p>
<h3 id="Reading-Messages"><a href="#Reading-Messages" class="headerlink" title="Reading Messages"></a>Reading Messages</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">ppm_t</span> *ppm = read_ppm(<span class="string">&quot;image_with_a_secret_message.ppm&quot;</span>);</span><br><span class="line">read_message(ppm);</span><br><span class="line">ppm_free(ppm);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p>This can be run as is and will print out the secret message.</p>
<h3 id="Hiding-Messages"><a href="#Hiding-Messages" class="headerlink" title="Hiding Messages"></a>Hiding Messages</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">ppm_t</span> *ppm = read_ppm(<span class="string">&quot;normal_image.ppm&quot;</span>);</span><br><span class="line">hide_message(ppm, <span class="string">&quot;Your secret message goes here.&quot;</span>);</span><br><span class="line">write_ppm(ppm);</span><br><span class="line">ppm_free(ppm);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p>For this code, you will have to redirect the output to a file using the <code>&gt;</code> operator.</p>
<p>Happy sleuthing!</p>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Text Generator</title>
    <url>/projects/text_generator.html</url>
    <content><![CDATA[<p>Try generating some text <a href="/text_generator">here</a>. While I can’t guarantee it’ll be meaningful, it is a lot of fun.</p>
<p>This is a combined summary of the original project in Python, and the subsequent translation to JS.</p>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>Language is weird. We keep making rules and breaking them, one phrase can mean 15 different things, and despite having tens of thousands of words at our disposal, we can’t always convey exactly what we want to.</p>
<p>Language is weird, and I love it. Let’s say you start with the word “once.” Whenever you see “once,” you can usually follow it with “upon.” If you see “upon,” you can probably follow it with “a.” Why not generate sentences and paragraphs with probabilities?</p>
<h2 id="Logic"><a href="#Logic" class="headerlink" title="Logic"></a>Logic</h2><p>Markov chains sound scary, but they’re not. Remember the game Snakes and Ladders? When you’re playing, you’re always on a square on the board. When you roll the dice, you have certain probabilities of moving to different squares. Some have a really high probability, like going from 1 to 6, and others are impossible, like going from 1 to 100. That’s exactly what a Markov chain is. From any given state (square), you have a given probability (dice) of moving to another state.</p>
<p>That’s great and all, but where does language fit into this? Take that Snakes and Ladders game. Assign each square a word. Every time you land on a new word, you write it down. After playing a full game, you will have a long string of words. Some sections might sound meaningful, others might not. This project takes long pieces of text, pretends like they’re recorded games of Snakes and Ladders, and tries to rebuild the board. On that new board, you can play as many games as you’d like, and most of the time, your string of words will be different.</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>The web project, with the original instructions for collaborators, can be found <a href="https://github.com/ronikbhaskar/text_generator">here</a>.</p>
<p>The original Python code can be found <a href="https://github.com/ronikbhaskar/markov_text_generation">here</a>. The README has a sample generated from Sun Tzu’s <em>The Art of War</em>.</p>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Ultimate Tic Tac Toe</title>
    <url>/projects/ultimate_tic_tac_toe.html</url>
    <content><![CDATA[<p>Play the game <a href="/ultimate_tic_tac_toe">here</a>. Grab a friend (or enemy) because this game requires two people.</p>
<img src="misc_images/ultimate_tic_tac_toe_game.png" class="display-image" alt="A game of ultimate tic tac toe."> 

<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>Tic Tac Toe is incredibly boring. For most people, the game is synonymous with “draw” or “tie” or “cat’s game.” At some point in middle school, I was introduced to Ultimate Tic Tac Toe, a game of Tic Tac Toe with nine smaller games of Tic Tac Toe happening inside of it. </p>
<p>I didn’t play it much because keeping track of the last moves and legal actions was a bit tedious, but it was a really fun way to pass the time. Rather than manage all the boring stuff on my own, I decided to let a computer do it for me.</p>
<h2 id="Rules"><a href="#Rules" class="headerlink" title="Rules"></a>Rules</h2><p>I explain the rules on the README for the project, but I’ve also included them below. You can access the source for the project <a href="https://github.com/ronikbhaskar/ultimate_tic_tac_toe">here</a>.</p>
<h4 id="x-goes-first…"><a href="#x-goes-first…" class="headerlink" title="x goes first…"></a><strong>x goes first…</strong></h4><ul>
<li>On the first move, <strong>x</strong> can play anywhere on the board.</li>
</ul>
<h4 id="o-goes-second…"><a href="#o-goes-second…" class="headerlink" title="o goes second…"></a><strong>o goes second…</strong></h4><ul>
<li><strong>o</strong> can only play in the section of the global board that corresponds to where <strong>x</strong> played in the local board.<ul>
<li>ex. If <strong>x</strong> plays in the center of the top left board, then <strong>o</strong> can play anywhere in the center board.</li>
</ul>
</li>
</ul>
<h4 id="the-game-repeats…"><a href="#the-game-repeats…" class="headerlink" title="the game repeats…"></a><strong>the game repeats…</strong></h4><ul>
<li>Now <strong>x</strong> is restricted to the section that corresponds to <strong>o</strong>‘s last move.</li>
<li>If the corresponding section has been won (more on that later), or it is full, the player can play anywhere.</li>
</ul>
<h4 id="until-someone-wins"><a href="#until-someone-wins" class="headerlink" title="until someone wins."></a><strong>until someone wins.</strong></h4><ul>
<li>If you get 3 in a row in a local board, you win that board.</li>
<li>If the local board is a draw, no one gets it.</li>
<li>Three local boards in a row, and you win the game.</li>
<li>If the game finishes without anyone getting 3 local boards in a row, it’s a draw.</li>
</ul>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Tomato Timer</title>
    <url>/projects/tomato_timer.html</url>
    <content><![CDATA[<style>
.display-image {
    width: min(max(25%,7rem),100%)!important;
    margin: 1rem;
    margin-top: 0;
    margin-right: 0;
    float: right!important;
    border-radius: 10%;
}
</style>

<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>The <a href="https://en.wikipedia.org/wiki/Pomodoro_Technique">Pomodoro Technique</a> is a time-management &#x2F; productivity technique developed by <a href="https://francescocirillo.com/pages/pomodoro-technique">Francesco Cirillo</a>.</p>
<p>This Chrome Extension provides an adjustable timer for implementing this study technique. I will not be publishing the Chrome Extension because I don’t want to pay the $5 developer fee for a product I won’t use myself.</p>
<p>You can find the source code <a href="https://github.com/ronikbhaskar/tomato_timer">here</a>.</p>
<h2 id="Manual-Installation"><a href="#Manual-Installation" class="headerlink" title="Manual Installation"></a>Manual Installation</h2><img src="misc_images/tomato_timer.png" class="display-image" alt="A Pomodoro Technique Chrome Extension">

<ol>
<li>Download the source code</li>
<li>Open Chrome and go to <code>chrome://extensions/</code></li>
<li>In the top right corner, enable “Developer mode”</li>
<li>In the top left corner, click “Load unpacked”</li>
<li>Select the folder <code>Tomato Timer</code> not <code>tomato_timer</code></li>
<li>Click the puzzle piece in the top right of the browser window</li>
<li>Click the pin to the right of “Tomato Timer”</li>
</ol>
<h2 id="Tangent-Towards-Timing-Tomatoes"><a href="#Tangent-Towards-Timing-Tomatoes" class="headerlink" title="Tangent Towards Timing Tomatoes"></a>Tangent Towards Timing Tomatoes</h2><p>A few weeks ago, I learned that “tomato” in Italian is “pomodoro.” Before this, I had only ever heard the word “pomodoro” in the context of the Pomodoro Technique. While I don’t fully buy the Pomodoro Technique, I knew I wanted to create something that commented on pomodoro meaning tomato, even if the joke was only new to me.</p>
<p>A week later, I still couldn’t wrap my head around why <em>tomato</em> in Italian was <em>pomodoro</em>. So many Romance languages use a word similar to “tomato” to represent the red produce (owing to Nahuatl), but not Italian. It turns out that “pomodoro” comes from “pomo d’oro,” which translates to “golden apple” or “golden fruit.” This made sense for a bit, and it gave me an idea for renaming “golden apples” to “pomodori” in the video game that makes heavy use of golden apples (you know the one), but then I was confused again. </p>
<p>If I’m not mistaken (though it is likely that I am), the more common way to say “apple” in Italian is “mela,” but “pomo” makes so much more sense, especially in the context of other Romance languages like the word “pomme” in French, which comes from Latin words referencing fruit plucked from trees, or those trees themselves. After looking into it, “mela” likely comes from Vulgar Latin. But the words from which it comes do not mean “apple” or “plucked fruit.” Instead, they derive from “malus,” roughly meaning “evil.” I’ll leave it as an exercise to the reader to think about why the word “apple” might come from the word “evil.”</p>
<p>My other comment is on the fact that they were called “golden.” Why? Tomatoes are red, aren’t they? Well, they didn’t always have that distinct red. Fifteen hundred years ago, it was much less common to find deep red tomatoes. Instead, many were yellow when ripe. This was around the time that tomatoes were being brought back to Europe, thus giving rise to the name “pomodoro.”</p>
<h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><p><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/">Google’s Getting Started Guide and Documentation</a></p>
<p><a href="https://iconduck.com/emojis/96851/tomato">Logo Source (not my own design)</a></p>
<hr>
<p align="right"><a href="/projects/">Back to Projects →</a></p>]]></content>
  </entry>
  <entry>
    <title>Publications</title>
    <url>/publications/index.html</url>
    <content><![CDATA[<p>Also see my: <a href="https://scholar.google.com/citations?user=dqTwtegAAAAJ&hl=en&oi=ao">Google Scholar</a></p>
<h3 id="Refereed"><a href="#Refereed" class="headerlink" title="Refereed"></a>Refereed</h3><p>Anna Yoo Jeong Ha*, Josephine Passananti*, <strong>Ronik Bhaskar</strong>, Shawn Shan, Reid Southen, Haitao Zheng, Ben Y. Zhao (2024). Organic or Diffused: Can We Distinguish Human Art from AI-generated Images? ACM Conference on Computer and Communications Security, Salt Lake City UT. <a href="https://arxiv.org/abs/2402.03214">arXiv</a></p>
<p>Zhuolin Yang, Zain Sarwar, Iris Hwang, <strong>Ronik Bhaskar</strong>, Ben Y. Zhao, Haitao Zheng (2024). Can Virtual Reality Protect Users from Keystroke Inference Attacks? USENIX Security, Philadelphia PA. <a href="https://www.usenix.org/system/files/sec23winter-prepub-116-yang-zhuolin.pdf">PDF</a> <a href="https://www.newscientist.com/article/2401929-ai-can-steal-passwords-in-virtual-reality-from-avatar-hand-motions/">Media Coverage</a></p>
<h3 id="Recreational"><a href="#Recreational" class="headerlink" title="Recreational"></a>Recreational</h3><p><strong>Ronik Bhaskar</strong>, Dawson Ren (2023). PizzaLang: A Language for Hungry Developers. Proc. of SIGBOVIK, Pittsburgh PA. <a href="/projects/PizzaLang.pdf">PDF</a> </p>
]]></content>
  </entry>
</search>
